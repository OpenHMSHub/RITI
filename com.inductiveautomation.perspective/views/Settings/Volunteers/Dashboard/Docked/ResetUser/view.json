{
  "custom": {
    "password": "",
    "password2": ""
  },
  "params": {
    "email": "",
    "firstName": "",
    "lastName": "",
    "newUser": false
  },
  "propConfig": {
    "custom.password": {
      "persistent": true
    },
    "custom.password2": {
      "persistent": true
    },
    "params.email": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.firstName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.lastName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.newUser": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "width": 600
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Header"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "params": {
            "dockName": "resetUserPassword",
            "messageName": null,
            "text": "Winter Shelter Reset Password"
          },
          "path": "1_TEMPLATES/Header/HeaderDock",
          "style": {
            "marginLeft": "-50px",
            "marginRight": "-50px"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "volunteerName"
        },
        "position": {
          "basis": "55px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.inputText": {
            "binding": {
              "config": {
                "expression": "{view.params.firstName} + \u0027 \u0027 + {view.params.lastName}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "hasHeader": true,
            "placeHolder": "Volunteer Name",
            "requiredField": false,
            "text": "Volunteer Name"
          },
          "path": "WinterShelter/Registration/Cards/TextInputReadOnly",
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "email"
        },
        "position": {
          "basis": "55px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.inputText": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.params.email"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "hasHeader": true,
            "placeHolder": "email@email.com",
            "requiredField": false,
            "text": "Email"
          },
          "path": "WinterShelter/Registration/Cards/TextInputReadOnly",
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Text/Add_HeaderText"
              },
              "text": "Password"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Label_0"
            },
            "position": {
              "basis": "10px",
              "shrink": 0
            },
            "props": {
              "style": {
                "color": "#D80000"
              },
              "text": "*"
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Password"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "PasswordField"
        },
        "position": {
          "basis": "32px"
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.password"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Add_TextFieldWhite",
            "marginBottom": "0px"
          }
        },
        "type": "ia.input.password-field"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Text/Add_HeaderText"
              },
              "text": "Confirm Password"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Label_0"
            },
            "position": {
              "shrink": 0
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if ({view.custom.password2}\u003d\u0027\u0027\r\n\t, \u0027*\u0027\r\n\t,if({view.custom.password} \u003d {view.custom.password2}, \u0027*\u0027, \u0027* Passwords must match\u0027))"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "color": "#D80000",
                "fontSize": "14px"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "PasswordConfirm"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "PasswordFieldConfirm"
        },
        "position": {
          "basis": "32px"
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.password2"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Add_TextFieldWhite",
            "marginBottom": "0px"
          }
        },
        "type": "ia.input.password-field"
      },
      {
        "children": [
          {
            "meta": {
              "name": "ResetButtonDisabled"
            },
            "position": {
              "basis": "100px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "parent.custom.valid"
                  },
                  "transforms": [
                    {
                      "code": "\treturn not value",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Disabled",
                "marginRight": "30px"
              },
              "text": "Reset Password"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\tfrom com.inductiveautomation.ignition.common.user import ContactInfo\n\ttry:\n\t\tnewUser \u003d self.view.params.newUser\n\t\t#Check valid entries.\n\t\tfirstName \u003d self.view.params.firstName\n\t\tlastName \u003d self.view.params.lastName\n\t\temail \u003d self.view.params.email\n\t\tpassword \u003d self.view.custom.password\n\t\tpassword2 \u003d self.view.custom.password2\n\t\tif email \u003d\u003d \u0027\u0027:\n\t\t\tself.parent.parent.getChild(\"Label\").showMessage(\"Email Error\")\n\t\t\treturn\n\t\tif password \u003d\u003d \u0027\u0027:\n\t\t\tself.parent.parent.getChild(\"Label\").showMessage(\"Password Error\")\n\t\t\treturn\n\t\tif password !\u003d password2:\n\t\t\tself.parent.parent.getChild(\"Label\").showMessage(\"Password Error\")\n\t\t\treturn\n\n\t\t#Lookup the user and set credentials.\n\t\tif not newUser:\n\t\t\tmodifyUser \u003d system.user.getUser(\u0027congregation\u0027, email)\n\t\t\tmodifyEmail \u003d ContactInfo(\u0027email\u0027,email)\n\t\t\tmodifyUser.set(\u0027password\u0027, password)\n\t\t\tmodifyUser.set(\"firstname\", firstName)\n\t\t\tmodifyUser.set(\"lastname\", lastName)\n\t\t\tmodifyUser.setContactInfo([modifyEmail])\n\t\t\t# Edit the user.\n\t\t\tsystem.user.editUser(\u0027congregation\u0027, modifyUser)\n\t\telse:\n\t\t\t#Create a new user and credentials.\n\t\t\tnewEmail \u003d ContactInfo(\u0027email\u0027,email)\n\t\t\tnewUser \u003d system.user.getNewUser(\u0027congregation\u0027, email)\n\t\t\tnewUser.set(\"password\", password)\n\t\t\tnewUser.set(\"firstname\", firstName)\n\t\t\tnewUser.set(\"lastname\", lastName)\n\t\t\tnewUser.setContactInfo([newEmail])\n\t\t\ttry: newUser.addRole(\u0027User\u0027)\t\t#If role becomes important, handle here.\n\t\t\texcept: pass\t\n\t\t\taddUserResult \u003d system.user.addUser(\u0027congregation\u0027, newUser)\n\t\t\t\n\t\t#Email Winter Shelter link, username and passwords to volunteer\n\t\t#This will need to be updated once email profile is worked out.\n\t\tsystem.perspective.print(\u0027Email Winter Shelter link, username and passwords\u0027)\n\t\tlink \u003d \"winter shelter portal link\"\n\t\tfromAddress \u003d \"test@yahoo.com\"\n\t\ttoAddress \u003d [email]\n\t\tsubject \u003d \u0027DISCOVERY: Winter Shelter Registration Username and Link\u0027\n\t\tbody \u003d \"The username for \" + firstName + \u0027 \u0027 +lastName + \" is \u0027\" + email + \"\u0027 and the password is \u0027\" + password + \"\u0027. \"\n\t\tbody +\u003d \"The following link will take you to the Discovery page to complete your registration: \" + link\n\t\tsmtpProfile \u003d \u0027Email\u0027\n\t\tsmtp \u003d \u0027smtp.mail.yahoo.com\u0027\n\t\t#system.net.sendEmail(smtp, fromAddress, subject, body, to\u003dtoAddress,smtpProfile \u003d smtpProfile)\n\n\t\tlogger \u003d system.util.getLogger(\u0027EmailLogs\u0027)\n\t\tlogger.info(\u0027Subject: \u0027 + subject + \u0027 \\nBody: \u0027 + body + \u0027 \\nTo: \u0027 + email)\n\t\tself.parent.parent.getChild(\"Label\").showMessage(email + \u0027 successfully updated.\u0027)\n\t\tself.view.custom.password \u003d \u0027\u0027\n\t\tself.view.custom.password2 \u003d \u0027\u0027\n\t\tself.view.params.email \u003d \u0027\u0027\n\t\tself.view.params.firstName \u003d \u0027\u0027\n\t\tself.view.params.lastName \u003d \u0027\u0027\n\t\tsystem.perspective.closeDock(\u0027resetUserPassword\u0027)\n\t\t\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"System Settings Reset Congregation Password\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ResetButton"
            },
            "position": {
              "basis": "100px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "parent.custom.valid"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginRight": "30px"
              },
              "text": "Reset Password"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.custom.password \u003d \u0027\u0027\n\tself.view.custom.password2 \u003d \u0027\u0027"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ClearButton"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "image": {
                "icon": {
                  "color": "#AAAAAA"
                }
              },
              "style": {
                "classes": "Buttons/Secondary",
                "marginRight": "30px"
              },
              "text": "Clear"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.custom.password \u003d \u0027\u0027\n\tself.view.custom.password2 \u003d \u0027\u0027\n\tself.view.params.email \u003d \u0027\u0027\n\tself.view.params.volunteerName \u003d \u0027\u0027\n\tsystem.perspective.closeDock(\u0027resetUserPassword\u0027)\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Cancel Button"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "image": {
                "icon": {
                  "color": "#AAAAAA"
                }
              },
              "style": {
                "classes": "Buttons/Delete Buttons/Secondary_Orange",
                "marginRight": "30px"
              },
              "text": "Cancel"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "35px"
        },
        "propConfig": {
          "custom.valid": {
            "binding": {
              "config": {
                "expression": "len({view.params.email}) \u0026\u0026\r\n{view.custom.password2} \u003d {view.custom.password} \u0026\u0026\r\nlen({view.custom.password}) \u003e 6 \u0026\u0026\r\nlen({view.custom.password2}) \u003e 6"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "marginBottom": "20px",
            "marginTop": "20px",
            "overflow": "visible"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label",
          "visible": false
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          },
          "text": "Congregation Name Error"
        },
        "scripts": {
          "customMethods": [
            {
              "name": "showMessage",
              "params": [
                "message"
              ],
              "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": []
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default",
        "paddingLeft": "50px",
        "paddingRight": "50px"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "resetWinterRegistration",
          "pageScope": true,
          "script": "\tself.view.custom.createNew \u003d False\n\tself.view.custom.password2 \u003d \u0027\u0027\n\tself.view.custom.newRegistration \u003d False\n\t",
          "sessionScope": true,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}