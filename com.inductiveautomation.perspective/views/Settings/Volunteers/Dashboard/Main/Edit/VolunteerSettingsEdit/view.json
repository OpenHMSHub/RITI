{
  "custom": {
    "editData": {
      "active": 1,
      "breezeId": "36733938",
      "congregationId": null,
      "dob": "04/03/1984",
      "email": "jordan.carver@c.c.edu",
      "firstName": "Jordan",
      "gender": "Female",
      "genderId": 1,
      "humanId": 15186,
      "lastName": "Carver",
      "middleName": "Stephanie",
      "nickName": "",
      "phone": "",
      "providerId": null,
      "providerName": null,
      "suffix": "",
      "volunteerId": 8
    },
    "emailValid": true,
    "updateAll": true,
    "volunteerId": 8
  },
  "params": {
    "rowData": {
      "active": 1,
      "breezeId": "36733938",
      "congregationId": null,
      "dob": "04/03/1984",
      "email": "jordan.carver@c.c.edu",
      "firstName": "Jordan",
      "gender": "Female",
      "genderId": 1,
      "humanId": 15186,
      "lastName": "Carver",
      "middleName": "Stephanie",
      "nickName": "",
      "phone": "",
      "providerId": null,
      "providerName": null,
      "suffix": "",
      "volunteerId": 8
    }
  },
  "propConfig": {
    "custom.emailValid": {
      "persistent": true
    },
    "custom.updateAll": {
      "persistent": true
    },
    "custom.volunteerId": {
      "binding": {
        "config": {
          "path": "view.params.rowData.volunteerId"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\t#Get a copy of the row data\n\tself.custom.editData \u003d self.params.rowData\n\t#Verify the email is valid\n\temail \u003d self.custom.editData.email\n\t#system.perspective.print(email)\n\tself.custom.emailValid \u003d pattern.verifyEmail(email)\t"
      },
      "persistent": true
    },
    "params.rowData": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 395,
      "width": 1043
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "props": {
          "params": {
            "Text": "Volunteer Administration"
          },
          "path": "Settings/Templates/Header"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.active": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.active"
              },
              "type": "property"
            }
          },
          "props.params.breezeId": {
            "binding": {
              "config": {
                "path": "view.custom.editData.breezeId"
              },
              "type": "property"
            }
          },
          "props.params.dob": {
            "binding": {
              "config": {
                "path": "view.custom.editData.dob"
              },
              "type": "property"
            }
          },
          "props.params.email": {
            "binding": {
              "config": {
                "path": "view.custom.editData.email"
              },
              "type": "property"
            }
          },
          "props.params.firstName": {
            "binding": {
              "config": {
                "path": "view.custom.editData.firstName"
              },
              "type": "property"
            }
          },
          "props.params.gender": {
            "binding": {
              "config": {
                "path": "view.custom.editData.gender"
              },
              "type": "property"
            }
          },
          "props.params.humanId": {
            "binding": {
              "config": {
                "path": "view.custom.editData.humanId"
              },
              "type": "property"
            }
          },
          "props.params.lastName": {
            "binding": {
              "config": {
                "path": "view.custom.editData.lastName"
              },
              "type": "property"
            }
          },
          "props.params.middleName": {
            "binding": {
              "config": {
                "path": "view.custom.editData.middleName"
              },
              "type": "property"
            }
          },
          "props.params.phone": {
            "binding": {
              "config": {
                "path": "view.custom.editData.phone"
              },
              "type": "property"
            }
          },
          "props.params.providerName": {
            "binding": {
              "config": {
                "path": "view.custom.editData.providerName"
              },
              "type": "property"
            }
          },
          "props.params.volunteerId": {
            "binding": {
              "config": {
                "path": "view.custom.editData.volunteerId"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Settings/Volunteers/Dashboard/Main/Edit/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.breezeId": {
            "binding": {
              "config": {
                "path": "view.custom.editData.breezeId"
              },
              "type": "property"
            }
          },
          "props.params.humanId": {
            "binding": {
              "config": {
                "path": "view.custom.editData.humanId"
              },
              "type": "property"
            }
          },
          "props.params.volunteerId": {
            "binding": {
              "config": {
                "path": "view.custom.editData.volunteerId"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Settings/Volunteers/Dashboard/Main/Edit/Row2",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Congregation: \" + {session.custom.filters.settingsVolunteers.provider.where}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"RITI\"\n\t\t### Declare parameters \n\t\tvolunteerId \u003d self.view.params.rowData.volunteerId\n\t\tactive \u003d self.view.custom.editData.active\n\t\t## Check if parameters are filled in correctly \n\t\tif (volunteerId is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Volunteer ID Error\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\tsystem.perspective.print(\"Volunteer Settings Data Valid\")\n\t\t\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\t\t##### Check if the user is editing existing data\n\t\t\tif volunteerId \u003e\u003d 0:\n\t\t\t#Update existing data on specified row_id\n\t\t\t\t#system.perspective.print(\"Update Exisiting Data\")\n\t\t\t\t#Set Acitve or Inactive\n\t\t\t\tif self.view.custom.editData.active !\u003d self.view.params.rowData.active:\n\t\t\t\t\tparameters \u003d  {\"volunteerId\":volunteerId}\n\t\t\t\t\n\t\t\t\t\tif active \u003d\u003d 1:\n\t\t\t\t\t\tpath \u003d \"Settings/Volunteers/UpdateVolunteerSetActive\"\n\t\t\t\t\telse:#Retire the program\n\t\t\t\t\t\tpath \u003d \"Settings/Volunteers/UpdateVolunteerSetInactive\"\n\t\t\t\t\tactiveUpdate \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t#Refresh the table\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshVolunteerSettings\", payload\u003d{}, scope\u003d\"session\")\n\t\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Volunteers Settings button_save\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{view.custom.editData.volunteerId} \u003e -1"
                  },
                  "type": "expr"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "\u0027Update Volunteer\u0027"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t#Individual user names are the email address\n\temail \u003d self.view.custom.editData.email\n\tfirstName \u003d self.view.custom.editData.firstName\n\tlastName \u003d self.view.custom.editData.lastName\n\t#if the email is not valid then stop here\n\tif not self.view.custom.emailValid:\n\t\treturn\n\t#Determine if this is a new user or existing user\n\tusers \u003d system.user.getUsers(\u0027congregation\u0027)\n\tnewUser \u003d True\n\tfor user in users:\n\t\ttestUsername \u003d user.get(\u0027username\u0027)\n\t\tif testUsername \u003d\u003d email:\n\t\t\tnewUser \u003d False\n\t\t\tbreak\n\t\n\tparameters \u003d {\n\t\t\t\t\u0027messageName\u0027:None,\n\t\t\t\t\u0027dockName\u0027:\u0027resetUser\u0027,\n\t\t\t\t\u0027firstName\u0027:firstName,\n\t\t\t\t\u0027lastName\u0027:lastName,\n\t\t\t\t\u0027email\u0027:email,\n\t\t\t\t\u0027newUser\u0027:newUser\n\t\t\t\t}\n\tsystem.perspective.openDock(\u0027resetUserPassword\u0027,params \u003d parameters)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_setUser"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "//{view.custom.editData.volunteerId} \u003e -1 \u0026\u0026 {view.custom.emailValid}\r\nfalse"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "User Credentials"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Please fill in all the fields correctly before saving."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tlogger \u003d system.util.getLogger(\"Breeze Manual Volunteer Update\")\n\t\tlogger.info(\"Breeze Manual Volunteer Update Request\")\n\t\tself.props.style.classes \u003d \"Buttons/Main\"\n\t\tIntegrations.breeze.timer.person.getVolunteers(updateAll\u003dFalse)\n\t\tlogger.info(\"Request Complete\")\n\t\tself.props.style.classes \u003d \"Buttons/Secondary\"\n\t\tself.view.custom.updateAll \u003d False\n\texcept:\n\t    logger \u003d system.util.getLogger(\"Breeze Manual Volunteer Update\")\n\t    msg \u003d traceback.format_exc()\n\t    logger.error(msg)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "syncBreeze"
            },
            "position": {
              "basis": "280px",
              "shrink": 0
            },
            "propConfig": {
              "custom.progress": {
                "binding": {
                  "config": {
                    "expression": "{[default]RITI/Volunteers/Breeze/progressCount} + \u0027 of \u0027 + {[default]RITI/Volunteers/Breeze/progressTotal}"
                  },
                  "type": "expr"
                }
              },
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{[default]RITI/Volunteers/Breeze/progressCount} \u003d {[default]RITI/Volunteers/Breeze/progressTotal}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginRight": "10px",
                "marginTop": "5px"
              },
              "text": "Sync New Breeze Volunteers"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tlogger \u003d system.util.getLogger(\"Breeze Manual Volunteer Update\")\n\t\tlogger.info(\"Breeze Manual Volunteer Update Request\")\n\t\tself.props.style.classes \u003d \"Buttons/Main\"\n\t\tIntegrations.breeze.timer.person.getVolunteers()\n\t\tlogger.info(\"Request Complete\")\n\t\tself.props.style.classes \u003d \"Buttons/Secondary\"\n\t\tself.view.custom.updateAll \u003d True\n\texcept:\n\t    logger \u003d system.util.getLogger(\"Breeze Manual Volunteer Update\")\n\t    msg \u003d traceback.format_exc()\n\t    logger.error(msg)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "syncBreezeAll"
            },
            "position": {
              "basis": "280px",
              "shrink": 0
            },
            "propConfig": {
              "custom.progress": {
                "binding": {
                  "config": {
                    "expression": "{[default]RITI/Volunteers/Breeze/progressCount} + \u0027 of \u0027 + {[default]RITI/Volunteers/Breeze/progressTotal}"
                  },
                  "type": "expr"
                }
              },
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{[default]RITI/Volunteers/Breeze/progressCount} \u003d {[default]RITI/Volunteers/Breeze/progressTotal}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginRight": "10px",
                "marginTop": "5px"
              },
              "text": "Sync All Breeze Volunteers"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "syncBreezeActive"
            },
            "position": {
              "basis": "280px",
              "shrink": 0
            },
            "propConfig": {
              "custom.progress": {
                "binding": {
                  "config": {
                    "expression": "{[default]RITI/Volunteers/Breeze/progressCount} + \u0027 of \u0027 + {[default]RITI/Volunteers/Breeze/progressTotal}"
                  },
                  "type": "expr"
                }
              },
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{[default]RITI/Volunteers/Breeze/progressCount} \u003d {[default]RITI/Volunteers/Breeze/progressTotal}"
                  },
                  "transforms": [
                    {
                      "code": "\treturn not value",
                      "type": "script"
                    }
                  ],
                  "type": "expr"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if({[default]RITI/Volunteers/Breeze/progressType} \u003c 2,\r\n\u0027Syncing Volunteer \u0027 + {this.custom.progress},\r\n\u0027Syncing Congregation \u0027 + {this.custom.progress})"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginRight": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}