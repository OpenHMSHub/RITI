{
  "custom": {
    "congregationId": 165,
    "editData": {
      "active": 1,
      "congregationAddressLine1": "900 Acklen Ave",
      "congregationAddressLine2": "",
      "congregationCity": "Nashville",
      "congregationId": 165,
      "congregationName": "Acklen Avenue Church of Christ",
      "congregationPhone": "615-292-5549",
      "congregationZipCode": 37203,
      "hostingSince": "",
      "leader": "JP Conway",
      "notes": ".  .  .  \"Acklen will do every Sunday with the following exceptions:\n\n12.8.19 - unavailable \n12.15.19 - unavailable\n2.23.19 - moving to Friday 2.21.19 so teen boys can host\n3.1.19 - moving to Friday 2.28.19 so teen girls can host - please send women on this night\".  ",
      "providerId": 32
    }
  },
  "params": {
    "rowData": {
      "active": 1,
      "congregationAddressLine1": "900 Acklen Ave",
      "congregationAddressLine2": "",
      "congregationCity": "Nashville",
      "congregationId": 165,
      "congregationName": "Acklen Avenue Church of Christ",
      "congregationPhone": "615-292-5549",
      "congregationZipCode": 37203,
      "hostingSince": null,
      "leader": "JP Conway",
      "notes": ".  .  .  \"Acklen will do every Sunday with the following exceptions:\n\n12.8.19 - unavailable \n12.15.19 - unavailable\n2.23.19 - moving to Friday 2.21.19 so teen boys can host\n3.1.19 - moving to Friday 2.28.19 so teen girls can host - please send women on this night\".  ",
      "providerId": 32
    }
  },
  "propConfig": {
    "custom.congregationId": {
      "binding": {
        "config": {
          "path": "view.params.rowData.congregationId"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.custom.editData \u003d self.params.rowData"
      },
      "persistent": true
    },
    "custom.editData": {
      "persistent": true
    },
    "params.rowData": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 262,
      "width": 1531
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "props": {
          "params": {
            "Text": "Congregation Administration"
          },
          "path": "1_TEMPLATES/Header/Header"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.active": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.active"
              },
              "type": "property"
            }
          },
          "props.params.congregationAddressLine1": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.congregationAddressLine1"
              },
              "type": "property"
            }
          },
          "props.params.congregationAddressLine2": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.congregationAddressLine2"
              },
              "type": "property"
            }
          },
          "props.params.congregationCity": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.congregationCity"
              },
              "type": "property"
            }
          },
          "props.params.congregationName": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.congregationName"
              },
              "type": "property"
            }
          },
          "props.params.congregationPhone": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.congregationPhone"
              },
              "type": "property"
            }
          },
          "props.params.congregationZipCode": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.congregationZipCode"
              },
              "type": "property"
            }
          },
          "props.params.leader": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.leader"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Settings/Congregations/Dashboard/Main/Edit/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2"
        },
        "position": {
          "basis": "120px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.hostingSince": {
            "binding": {
              "config": {
                "path": "view.custom.editData"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and \u0027hostingSince\u0027 in value and value[\u0027hostingSince\u0027] !\u003d None:\n\t\treturn value[\u0027hostingSince\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            },
            "onChange": {
              "enabled": null,
              "script": "\tself.view.custom.editData.hostingSince \u003d currentValue.value"
            }
          },
          "props.params.notes": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.editData.notes"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Settings/Congregations/Dashboard/Main/Edit/Row2",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"RITI\"\n\t\t### Declare parameters\n\t\tcongregationName \u003d self.view.custom.editData.congregationName \n\t\tcongregationId \u003d self.view.custom.congregationId\n\t\tproviderId \u003d self.view.custom.editData.providerId\n\t\tactive \u003d self.view.custom.editData.active\n\t\taddress1 \u003d self.view.custom.editData.congregationAddressLine1\n\t\taddress2 \u003d self.view.custom.editData.congregationAddressLine2\n\t\tcity \u003d self.view.custom.editData.congregationCity\n\t\tzipCode \u003d self.view.custom.editData.congregationZipCode\n\t\tphone \u003d self.view.custom.editData.congregationPhone\n\t\tnotes \u003d self.view.custom.editData.notes\n\t\tleader \u003d self.view.custom.editData.leader\n\t\thostingSince \u003d self.view.custom.editData.hostingSince\n\t\tsystem.perspective.print(hostingSince)\n\t\t## Check if parameters are filled in correctly \n\t\tif (congregationId is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Congregation ID Error\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\tsystem.perspective.print(\"Program Settings Data Valid\")\n\t\t\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\t\t##### Check if the user is editing existing data\n\t\t\tif congregationId \u003e\u003d 0:\n\t\t\t#Update existing data on specified row_id\n\t\t\t\t#system.perspective.print(\"Update Exisiting Data\")\n\t\t\t\t#Set Acitve or Inactive\n\t\t\t\tif self.view.custom.editData.active !\u003d self.view.params.rowData.active:\n\t\t\t\t\tparameters \u003d  {\"congregationId\":congregationId}\n\t\t\t\t\n\t\t\t\t\tif active \u003d\u003d 1:\n\t\t\t\t\t\tpath \u003d \"Settings/Congregations/UpdateCongregationSetActive\"\n\t\t\t\t\telse:#Retire the program\n\t\t\t\t\t\tpath \u003d \"Settings/Congregations/UpdateCongregationSetInactive\"\n\t\t\t\t\t\t# if user set to inactive then remove user from user source\n\t\t\t\t\t\tusers \u003d system.user.getUsers(\u0027congregation\u0027)\n\t\t\t\t\t\tfor user in users:\n\t\t\t\t\t\t\tname \u003d user.get(\u0027firstname\u0027)\n\t\t\t\t\t\t\tif name \u003d\u003d congregationName:\n\t\t\t\t\t\t\t\tusername \u003d user.get(\u0027username\u0027)\n\t\t\t\t\t\t\t\tsystem.user.removeUser(\u0027congregation\u0027, username)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\n\t\t\t\t\tactiveUpdate \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\t\n\t\t\t\tsystem.perspective.print(\"Update Data\")\n\t\t\t\t#Update Congregation specific information\n\t\t\t\tsystem.perspective.print(str(\"congregationID\u003d\"+str(congregationId)))\n\t\t\t\tsystem.perspective.print(str(\"hostingSince\u003d\"+str(hostingSince)))\n\t\t\t\tpath \u003d \"Settings/Congregations/UpdateCongregation\"\n\t\t\t\tparameters \u003d {\"congregationId\":congregationId,\n\t\t\t\t\t\t\t\"notes\":notes,\n\t\t\t\t\t\t\t\"leader\":leader,\n\t\t\t\t\t\t\t\"hostingSince\":hostingSince,\n\t\t\t\t\t\t\t}\n\t\t\t\tcongregationUpdate \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\n\t\t\t\tsystem.perspective.print(str(congregationUpdate))\n\t\t\t\t#Update the Providerinformation\n\t\t\t\tpath \u003d \"Settings/Congregations/UpdateCongregationProviderInfo\"\n\t\t\t\tparameters \u003d {\"providerId\":providerId,\n\t\t\t\t\t\t\t\"address1\":address1,\n\t\t\t\t\t\t\t\"address2\":address2,\n\t\t\t\t\t\t\t\"city\":city,\n\t\t\t\t\t\t\t\"zipCode\":zipCode,\n\t\t\t\t\t\t\t\"phone\":phone,\n\t\t\t\t\t\t\t\"providerName\" :congregationName\n\t\t\t\t\t\t\t}\n\t\t\t\tproviderUpdate \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Update the Locationinformation\n\t\t\t\tpath \u003d \"Settings/Congregations/UpdateLocationName\"\n\t\t\t\tparameters \u003d {\"locationName\":congregationName,\n\t\t\t\t\t\t\t\"congregationId\":congregationId\n\t\t\t\t\t\t\t}\n\t\t\t\tlocationUpdate \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#system.perspective.print(str(providerUpdate))\n\t\t\t#Refresh the table\n\t\t\tself.getSibling(\"Label\").showMessage(\"Cogregation updated successfully\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshCongregationSettings\", payload\u003d{}, scope\u003d\"session\")\n\t\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Program Settings Edit button_save\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{view.custom.congregationId} \u003e 0"
                  },
                  "type": "expr"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "\u0027Update Congregation\u0027"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tcongregationName \u003d self.view.custom.editData.congregationName\n\tusers \u003d system.user.getUsers(\u0027congregation\u0027)\n\tusername \u003d \u0027(New User)\u0027\n\tfor user in users:\n\t\tname \u003d user.get(\u0027firstname\u0027)\n\t\tif name \u003d\u003d congregationName:\n\t\t\tusername \u003d user.get(\u0027username\u0027)\n\t\t\tbreak\n\t\t\t\n\tif username !\u003d \u0027(New User)\u0027:\n\t\tuser \u003d system.user.getUser(\u0027congregation\u0027,username)\n\t\tcontactInfo \u003d user.getContactInfo()\n\t\temail \u003d \u0027\u0027\n\t\tfor item in contactInfo:\n\t\t\t# Check if a matching email exists\n\t\t\tif item.getContactType() \u003d\u003d \u0027email\u0027:\n\t\t\t\temail \u003d item.getValue()\n\t\t\t\tbreak\t\n\telse:\n\t\t#This is a new user\n\t\temail \u003d \u0027\u0027\n\t\t\t\n\tparameters \u003d {\n\t\t\t\t\u0027messageName\u0027:None,\n\t\t\t\t\u0027dockName\u0027:\u0027resetCongregation\u0027,\n\t\t\t\t\u0027congregationName\u0027:congregationName,\n\t\t\t\t\u0027username\u0027:username,\n\t\t\t\t\u0027email\u0027:email\n\t\t\t\t}\n\tsystem.perspective.openDock(\u0027resetCongregationPassword\u0027,params \u003d parameters)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_setUser"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{view.custom.congregationId} \u003e 0 \u0026\u0026 {view.custom.editData.active} \u003d 1"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "User Credentials"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Please fill in all the fields correctly before saving."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\t#Modified by Lane\n\t\tlogger \u003d system.util.getLogger(\"BreezeCongregationsUpdate\")\n\t\t#End of modification\n\t\tproject \u003d \"RITI\"\n\t\t#Get the names of all active congregations in the RITI database\n\t\tpath \u003d \"WinterShelterGlobal/getActiveCongregations\"\n\t\tcongregations \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath)\n\t\tfor row in range(0,congregations.getRowCount()-1):\n\t\t\tcongregationName \u003d congregations.getValueAt(row,\u0027congregationName\u0027)\n\t\t\tcongregationId \u003d congregations.getValueAt(row,\u0027congregationId\u0027)\n#\t\t\tsystem.perspective.print(congregationId)\n\t\t\t#Modified by Lane\n\t\t\t#breezeId \u003d int(Integrations.breeze.helper.getTagID(congregationName))\n\t\t\tbreezeId \u003d Integrations.breeze.helper.getTagID(congregationName)\n\t\t\tlogger.info(congregationName + \u0027 Breeze ID is \u0027 + str(breezeId)) \n\t\t\t#End of modification\n\t\t\t#If breeze ID is empty the add the congregation to Breeze\n\t\t\tif breezeId is None:\n\t\t\t\t#system.perspective.print(\u0027No Breeze ID found\u0027)\n\t\t\t\tIntegrations.breeze.helper.addNewTag(\"Congregations\", congregationName)\n\t\t\t\t#Retrieve the newly created ID\n\t\t\t\tbreezeId \u003d Integrations.breeze.helper.getTagID(congregationName)\n\t\t\t#update the Breeze Id in the database\n\t\t\t#system.perspective.print(str(breezeId))\n\t\t\tparameters \u003d  {\"congregationId\":congregationId,\"breezeId\":breezeId}\n\t\t\tpath \u003d \"Settings/Congregations/UpdateCongregationBreezeId\"\n\t\t\tbreezeIdUpdate \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t#system.perspective.print(str(breezeIdUpdate))\n\t\t#Refresh the table\n\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshCongregationSettings\", payload\u003d{}, scope\u003d\"session\")\n\t\t\n\texcept:\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_syncBreeze"
            },
            "position": {
              "basis": "260px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginRight": "10px",
                "marginTop": "5px"
              },
              "text": "Sync Breeze Data"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "draggable": false,
                    "id": "Congregation_Bulk_Update_Popup",
                    "modal": false,
                    "overlayDismiss": false,
                    "resizable": false,
                    "showCloseIcon": false,
                    "type": "open",
                    "viewPath": "Settings/Congregations/Dashboard/Popup/Congregation_Popup",
                    "viewportBound": false
                  },
                  "scope": "C",
                  "type": "popup"
                }
              }
            },
            "meta": {
              "name": "button_bulk_updates"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginRight": "10px",
                "marginTop": "5px"
              },
              "text": "Bulk Update"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Active: \" + {view.custom.editData.active}\r\n+ \" Name: \" + {view.custom.editData.congregationName}\r\n+ \" Add1: \" + {view.custom.editData.congregationAddressLine1}\r\n+ \" Add2: \" + {view.custom.editData.congregationAddressLine2}\r\n+ \" City: \" + {view.custom.editData.congregationCity}\r\n+ \" Zip: \" + {view.custom.editData.congregationZipCode}\r\n+ \" Phone: \" + {view.custom.editData.congregationPhone}\r\n+ \" Leader: \" + {view.custom.editData.leader}\r\n+ \" Notes: \" + {view.custom.editData.notes}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}