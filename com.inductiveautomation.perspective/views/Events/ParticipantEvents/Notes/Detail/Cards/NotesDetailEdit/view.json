{
  "custom": {
    "noteDate": {
      "$": [
        "ts",
        192,
        1684241421158
      ],
      "$ts": 1684241421158
    },
    "noteId": -1,
    "noteTimeCreated": {
      "$": [
        "ts",
        192,
        1684241421158
      ],
      "$ts": 1684241421158
    }
  },
  "params": {
    "eventId": 17
  },
  "propConfig": {
    "custom.edit_data": {
      "persistent": true
    },
    "custom.noteDate": {
      "binding": {
        "config": {
          "expression": "now()"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.noteId": {
      "persistent": true
    },
    "custom.noteTimeCreated": {
      "binding": {
        "config": {
          "expression": "now()"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "params.eventId": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.note_id": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 200,
      "width": 1043
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.Text": {
            "binding": {
              "config": {
                "path": "view.custom.noteId"
              },
              "transforms": [
                {
                  "expression": "if({value} \u003d -1,\u0027New Note\u0027,\u0027Edit Note\u0027)",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Employers/Templates/Header"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView_Row1"
        },
        "position": {
          "basis": "110px"
        },
        "props": {
          "params": {
            "note": ""
          },
          "path": "Events/ParticipantEvents/Notes/Detail/Cards/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\n\tsystem.perspective.sendMessage(\"clearNotes\", payload \u003d {}, scope \u003d \u0027session\u0027)\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_new"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "20px",
                "marginTop": "5px"
              },
              "text": "New Note"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t\n\timport traceback\n\ttry:\n\t\tproject \u003d \"HMS\"\n\t\t### Declare parameters \n\t\tnotesDB \u003d []\n\t\t\n\t\teventId \u003d self.view.params.eventId\n\t\tnoteId \u003d self.view.custom.noteId\n\t\tnote \u003d self.parent.parent.getChild(\"EmbeddedView_Row1\").props.params.note\n\t\tusername \u003d self.session.props.auth.user.userName\n\t\t\n\t\tnoteDate \u003d self.view.custom.noteDate\n\t\tnoteDate \u003d system.date.format(noteDate, \u0027yyyy-MM-dd hh:mm:ss\u0027)\t\t\n\t\t\n\t\tif (eventId !\u003d \"\" and eventId !\u003d \"\" and noteId !\u003d None and noteId !\u003d None and note !\u003d \"\" and note !\u003d None ):\n\t\t\tsystem.perspective.print(\u0027In\u0027)\n\t\t\tif noteId \u003d\u003d -1:#Insert new data, no row_id\n\t\t\t\t\n\t\t\t\ttimeCreated \u003d self.view.custom.noteTimeCreated\n\t\t\t\ttimeCreated \u003d system.date.format(timeCreated, \u0027yyyy-MM-dd hh:mm:ss\u0027)\n\t\t\t\t\n\t\t\t\tsystem.perspective.print(\u0027In1\u0027)\n\t\t\t\tpath \u003d \"Event/Notes/NotesDetailInsert\"\n\t\t\t\t\n\t\t\t\tparameters \u003d {\"note\":note,\"time_created\":timeCreated,\"user_name\":username,\"event_id\":eventId,\"note_id\":noteId}\n\t\t\t\tsystem.perspective.print(parameters)\n\t\t\t\t\n\t\t\t\tnewNote \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\tsystem.perspective.print(newNote)\n\t\t\t\t\n\t\t\t\tmessageType \u003d \u0027refreshNotes\u0027\n\t\t\t\tsystem.perspective.sendMessage(messageType)\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView_Row1\").props.params.note \u003d \"\"\n\t\t\t\tself.view.custom.noteId \u003d -1\n\n\t\t\t\t\n\t\t\tif noteId \u003e\u003d 0 :#Insert new data, no row_id\n\t\t\t\t#system.perspective.print(\u0027In2\u0027)\n\t\t\t\tpath \u003d \"Event/Notes/NotesDetailUpdate\"\n\t\t\t\t\t\t\t\n\t\t\t\tparameters \u003d {\"note\":note,\"user_name\":username,\"event_id\":eventId,\"note_id\":noteId}\n\t\t\t\t#system.perspective.print(parameters)\n\t\n\t\t\t\tupdatedNote \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#system.perspective.print(newCategory)\n\t\n\t\t\t\tmessageType \u003d \u0027refreshNotes\u0027\n\t\t\t\tsystem.perspective.sendMessage(messageType)\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView_Row1\").props.params.note \u003d \"\"\n\t\t\t\tself.view.custom.noteId \u003d -1\t\t\n\t\telse:\n\t\t\tpass#self.getSibling(\"Label\").showMessage(\"Make sure you have entered the name and color properly. Please try again.\")\n#\t\telse:\n#\t\t\tpass#self.getSibling(\"Label\").showMessage(\"Duplicate Entry.\")\t\t\t\t\n\t\t\t\t\t\t\n\texcept:\n\t\t\tlogger \u003d system.util.getLogger(\"Event Notes Edit button_save\")\n\t\t\tmsg \u003d traceback.format_exc()\n\t\t\tlogger.error(msg)\n\t\t\t#self.getSibling(\"Label\").showMessage(\"Something went wrong. Please try again.\")"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.noteId} \u003d -1, \"SAVE NOTE\", \"UPDATE NOTE\")"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"HMS\"\n\t\t### Declare parameters \n\t\t\n\t\tNoteId \u003d self.view.custom.noteId\n\t\t\t\t\n\t\tif NoteId \u003e\u003d 0:#Delete new data\n\t\n\t\t\tpath \u003d \"Event/Notes/NotesDetailDelete\"\n\t\t\t\n\t\t\tparameters \u003d {\"note_id\":NoteId }\n\t\t\t#system.perspective.print(parameters)\n\t\t\t\n\t\t\tnewCategory \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t#system.perspective.print(newCategory)\n\t\t\t\n\t\t\tmessageType \u003d \u0027refreshNotes\u0027\n\t\t\tsystem.perspective.sendMessage(messageType, scope \u003d \"session\")\n\t\t\tself.view.custom.noteId \u003d -1\n\t\t\tself.parent.parent.getChild(\"EmbeddedView_Row1\").props.params.note \u003d \"\"\n\t\t\t\n\t\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Delete Notes button\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\t#self.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_delete"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "meta.visible": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.noteId} \u003d -1, false, true)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Delete Note"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Something went wrong while saving data. Please try again."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "noteEdit",
          "pageScope": true,
          "script": "\tself.view.custom.noteId \u003d payload[\u0027noteId\u0027]\n\tself.getChild(\"EmbeddedView_Row1\").props.params.note \u003d payload[\u0027note\u0027]",
          "sessionScope": true,
          "viewScope": true
        },
        {
          "messageType": "clearNotes",
          "pageScope": true,
          "script": "\tself.view.custom.noteId \u003d -1\n\tself.getChild(\"EmbeddedView_Row1\").props.params.note \u003d \"\"",
          "sessionScope": true,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}