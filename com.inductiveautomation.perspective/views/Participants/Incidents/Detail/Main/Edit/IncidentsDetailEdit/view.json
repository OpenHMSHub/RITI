{
  "custom": {
    "casenotetype": 13,
    "edit_data": {
      "bar_participant": -1,
      "incident_date": {
        "$": [
          "ts",
          192,
          1737616654793
        ],
        "$ts": 1737616654792
      },
      "incident_description": "",
      "incident_location_id": -1,
      "incident_type_id": [],
      "participant_human_id": -1,
      "participant_id": -1,
      "physical_injury": -1,
      "property_damage": -1,
      "reinstateRequired": -1,
      "staff_involved": [],
      "suspension_duration": 0,
      "suspension_id": -1,
      "suspension_notes": "",
      "suspension_time_begin": 0,
      "suspension_time_end": "",
      "suspension_type_id": -1
    }
  },
  "params": {
    "row_data": {
      "bar_participant": -1,
      "incident_date": {
        "$": [
          "ts",
          192,
          1737616654793
        ],
        "$ts": 1737616654792
      },
      "incident_description": "",
      "incident_location_id": -1,
      "incident_type_id": [],
      "participant_human_id": -1,
      "participant_id": -1,
      "physical_injury": -1,
      "property_damage": -1,
      "reinstateRequired": -1,
      "row_id": -1,
      "staff_involved": [],
      "suspension_duration": 0,
      "suspension_id": -1,
      "suspension_notes": "",
      "suspension_time_begin": 0,
      "suspension_time_end": "",
      "suspension_type_id": -1
    }
  },
  "propConfig": {
    "custom.casenotetype": {
      "binding": {
        "config": {
          "queryPath": "Participants/CaseNotes/CaseNotesTypeSelect"
        },
        "transforms": [
          {
            "expression": "lookup({value},\u0027Incidents/Reinstatement\u0027,-1, 1,0)",
            "type": "expression"
          }
        ],
        "type": "query"
      },
      "persistent": true
    },
    "custom.edit_data": {
      "persistent": true
    },
    "custom.edit_data.row_id": {
      "binding": {
        "config": {
          "path": "view.params.row_data.row_id"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.custom.edit_data \u003d self.params.row_data"
      }
    },
    "params.row_data": {
      "onChange": {
        "enabled": null,
        "script": "\tself.custom.edit_data \u003d self.params.row_data"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.bar_participant": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.incident_date": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.incident_description": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.incident_location_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.incident_type_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.participant_human_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.participant_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.physical_injury": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.property_damage": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.row_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.staff_involved": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspension_duration": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspension_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspension_notes": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspension_time_begin": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspension_time_end": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspension_type_id": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "width": 1096
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.Text": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.row_id"
              },
              "transforms": [
                {
                  "expression": "if({value} \u003d -1,\u0027New Incident\u0027,\u0027Edit Incident\u0027)",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Templates/Header"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.bar_participant": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.bar_participant"
              },
              "type": "property"
            }
          },
          "props.params.incident_date": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.incident_date"
              },
              "type": "property"
            }
          },
          "props.params.physical_injury": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.physical_injury"
              },
              "type": "property"
            }
          },
          "props.params.property_damage": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.property_damage"
              },
              "type": "property"
            }
          },
          "props.params.row_id": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.row_id"
              },
              "type": "property"
            }
          },
          "props.params.suspension_type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.suspension_type_id"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Incidents/Detail/Main/Edit/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.bar_participant"
              },
              "transforms": [
                {
                  "code": "\tif self.view.params.row_data.row_id \u003e -1: #Existing Incident\n\t\t#if self.view.custom.suspension_edit:\n\t\t#Existing suspension (row data) shows the read only row\n\t\t#Old incident with new suspension shows the editable row\n\t\tif self.view.custom.edit_data.bar_participant \u003d\u003d 1:\n#\t\t\tif self.view.params.row_data.bar_participant \u003d\u003d 1: #Existing Suspension from previous entry\n#\t\t\t\treturn False\n#\t\t\telse:\n#\t\t\t\treturn True\n\t\t\t## update suspension only allow to admin\n\t\t\tif self.session.custom.isAdministrator:\n\t\t\t\treturn True\n\t\t\telse:\n\t\t\t\treturn False\n\t\telse:\n\t\t\treturn False\n\n\telse: ##New incident\n\t\tif self.view.custom.edit_data.bar_participant \u003d\u003d 1:\n\t\t\treturn True\n\t\telse:\n\t\t\treturn False\n",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.reinstateRequired": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.reinstateRequired"
              },
              "type": "property"
            }
          },
          "props.params.row_id": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.row_id"
              },
              "type": "property"
            }
          },
          "props.params.suspension_duration": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.suspension_duration"
              },
              "type": "property"
            }
          },
          "props.params.suspension_notes": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.suspension_notes"
              },
              "type": "property"
            }
          },
          "props.params.suspension_type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.suspension_type_id"
              },
              "type": "property"
            }
          },
          "props.params.time_begin": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.suspension_time_begin"
              },
              "type": "property"
            }
          },
          "props.params.time_end": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.suspension_time_end"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Incidents/Detail/Main/Edit/Row2",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2 ReadOnly"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.bar_participant"
              },
              "transforms": [
                {
                  "code": "\tif self.view.params.row_data.row_id \u003e -1: #Existing Incident\n\t\t#if self.view.custom.suspension_edit:\n#\t\tif self.view.params.row_data.bar_participant \u003d\u003d 1: #Existing Suspension\n#\t\t\treturn True\n#\t\telse:\n#\t\t\treturn False\n\t\t## update suspension only allow to admin\n\t\tif self.view.custom.edit_data.bar_participant:\n\t\t\tif self.session.custom.isAdministrator:\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\treturn True\n\t\telse:\n\t\t\treturn False\n\telse:\n\t\treturn False\n",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.reinstateRequired": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.reinstateRequired"
              },
              "type": "property"
            }
          },
          "props.params.row_id": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.row_id"
              },
              "type": "property"
            }
          },
          "props.params.suspension_duration": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.suspension_duration"
              },
              "type": "property"
            }
          },
          "props.params.suspension_notes": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.suspension_notes"
              },
              "type": "property"
            }
          },
          "props.params.suspension_type_id": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.suspension_type_id"
              },
              "type": "property"
            }
          },
          "props.params.time_begin": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.suspension_time_begin"
              },
              "type": "property"
            }
          },
          "props.params.time_end": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.suspension_time_end"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Incidents/Detail/Main/Edit/Row2_ReadOnly",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row3"
        },
        "position": {
          "basis": "90px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.incident_location": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.incident_location_id"
              },
              "type": "property"
            }
          },
          "props.params.incident_type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.incident_type_id"
              },
              "type": "property"
            }
          },
          "props.params.staff_involved": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.staff_involved"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Incidents/Detail/Main/Edit/Row3",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row4"
        },
        "position": {
          "basis": "120px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.incident_description": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.incident_description"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Incidents/Detail/Main/Edit/Row4",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t#system.perspective.print(\"New Incident Button Pressed\")\n\t#Send the message to refresh the table\n\t#messageType \u003d \u0027refreshIncidentDetail\u0027\n\t## clear out all the parameters \n\tdefaultRowData \u003d {\n\t\"bar_participant\": -1,\n\t  \"incident_date\": system.date.now(),\n\t  \"incident_description\": \"\",\n\t  \"incident_location_id\": -1,\n\t  \"incident_type_id\": [],\n\t  \"participant_human_id\": self.view.params.row_data.participant_human_id,\n\t  \"participant_id\": self.view.params.row_data.participant_id,\n\t  \"physical_injury\": -1,\n\t  \"property_damage\": -1,\n\t  \"reinstateRequired\": -1,\n\t  \"row_id\": -1,\n\t  \"staff_involved\": [],\n\t  \"suspension_duration\": 0,\n\t  \"suspension_id\": -1,\n\t  \"suspension_notes\": \"\",\n\t  \"suspension_time_begin\": 0, #system.date.format(system.date.now(),\u0027MMM dd yyyy\u0027),\n\t  \"suspension_time_end\": \"\", #system.date.format(system.date.now(),\u0027MMM dd yyyy\u0027),\n\t  \"suspension_type_id\": -1\n\t  }\n\tself.view.params.row_data \u003d defaultRowData\n\tmessageType \u003d \u0027RefreshIncidentsData\u0027\n\tsystem.perspective.sendMessage(messageType)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_new"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{session.custom.isManager} || {session.custom.isWSManager} || {session.custom.isAdministrator}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "20px",
                "marginTop": "5px"
              },
              "text": "New Incident"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"RITI\"\n\t\t### Declare parameters \n\t\t\n\t\trow_id \u003d self.view.custom.edit_data.row_id\n\t\ttime_created \u003d system.date.now()\n\t\tuser_name \u003d self.session.props.auth.user.userName\n\t\temployee_id \u003d 0\n\t\tparticipant_id \u003d self.view.custom.edit_data.participant_id\n\t\tparticipant_human_id \u003d self.view.custom.edit_data.participant_human_id\t\n\t\tincident_name \u003d str(participant_id)+ \"-\" + str(system.date.format(time_created,\"yyyyMMdd\"))\n\t\t\n\t\tincident_date \u003d self.view.custom.edit_data.incident_date\n\t\t\n\t\tphysical_injury \u003d self.view.custom.edit_data.physical_injury\n\t\tproperty_damage \u003d self.view.custom.edit_data.property_damage\n\t\tbar_participant \u003d self.view.custom.edit_data.bar_participant\n\t\tincident_location \u003d self.view.custom.edit_data.incident_location_id\n\t\tincident_description \u003d self.view.custom.edit_data.incident_description\n\t\t#Suspension data if bar_particiapant is True\n\t\tsuspension_type_id \u003d self.view.custom.edit_data.suspension_type_id\n\t\tsuspension_duration \u003d self.view.custom.edit_data.suspension_duration\n\t\t\n\t\tsuspension_time_begin \u003d self.view.custom.edit_data.suspension_time_begin\n\t\t\n\t\tsuspension_time_end \u003d self.view.custom.edit_data.suspension_time_end\n\t\t\n\t\treinstateRequired \u003d self.view.custom.edit_data.reinstateRequired\n\t\torganization_id \u003d 4\n\t\tsuspension_notes \u003d self.view.custom.edit_data.suspension_notes\n\n\t\n\t\t## Check if parameters are filled in correctly \n\t\tif (row_id is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Row ID Error\"\n\t\telif (time_created is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Time Created Error\"\n\t\telif (incident_date is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Incident Date Error\"\n\t\telif (employee_id is None) or (int(employee_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Employee ID Error\"\n\t\telif (participant_id is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Participant ID Error\"\n\t\telif (int(participant_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Participant ID Error\"\n\t\telif (participant_human_id is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Participant Human ID Error\"\n\t\telif (int(participant_human_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Participant Human ID Error\"\n\t\telif (physical_injury is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select the Physical Injury Status\"\n\t\telif (int(physical_injury) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select the Physical Injury Status\"\n\t\telif (property_damage is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select the Property Damage Status\"\n\t\telif (int(property_damage) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select the Property Damage Status\"\n\t\telif (bar_participant is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select the Suspension Status\"\n\t\telif (int(bar_participant) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select the Suspension Status\"\n\t\telif (incident_location is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please enter the incident location.\"\n\t\telif (int(incident_location) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please enter the incident location.\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\t#system.perspective.print(\"Incident Data Valid\")\n\t\t#Check only if bar_particiapnt is true\n\t\tif (bar_participant) and valid:\n\t\t\tif (suspension_type_id is None):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select the Suspension Type\"\n\t\t\telif (int(suspension_type_id) \u003c 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select the Suspension Type\"\n\t\t\telif (suspension_time_begin is None) or (suspension_time_begin \u003d\u003d \"\") or (suspension_time_begin \u003d\u003d 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please enter the suspension begin time.\"\n\t\t\telif (suspension_time_end is None) or (suspension_time_end \u003d\u003d \"\") or (suspension_time_end \u003d\u003d 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please enter the end begin time.\"\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\t\t\tif bar_participant:\n\t\t\t\t#Format begin and end date \n\t\t\t\tformatedBeginDate \u003d system.date.format(system.date.parse(suspension_time_begin,\u0027MMM dd yyyy\u0027),\u0027dd-MM-yyyy hh:mm:ss\u0027)\n\t\t\t\tsuspension_time_begin \u003d system.date.parse(formatedBeginDate,\u0027dd-MM-yyyy hh:mm:ss\u0027)\n\t\t\t\tformatedEndDate \u003d system.date.format(system.date.parse(suspension_time_end,\u0027MMM dd yyyy\u0027),\u0027dd-MM-yyyy hh:mm:ss\u0027)\n\t\t\t\tsuspension_time_end \u003d system.date.parse(formatedEndDate,\u0027dd-MM-yyyy hh:mm:ss\u0027)\n\t\t\t\n\t\t\t### Check if the user is creating new data\n\t\t\tif row_id \u003d\u003d -1:#Insert new data, no row_id\n\t\t\t\t#system.perspective.print(\"Insert New Data\")\n\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailInsert\"\n\t\t\t\tparameters \u003d {\"time_created\":time_created, \"incident_date\":incident_date, \n\t\t\t\t\t\t\t\"employee_id\":employee_id,\"physical_injury\":physical_injury, \n\t\t\t\t\t\t\t\"property_damage\":property_damage, \"bar_participant\":bar_participant,\n\t\t\t\t\t\t\t\"incident_name\":incident_name, \"incident_location\":incident_location,\n\t\t\t\t\t\t\t\"incident_description\":incident_description,\"participant_id\":participant_id,\n\t\t\t\t\t\t\t\"user_name\":user_name}\n\t\t\t\tlog_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\n\t\t\t\t#system.perspective.print(\"Insert data\")\n\t\t\t\t#system.perspective.print(log_id)\n\t\t\t\t#Insert the participant into the Attendee Log\n\t\t\t\ttype_id \u003d 0\n\t\t\t\thuman_id \u003d self.view.custom.edit_data.participant_human_id\n\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailAttendeeInsert\"\n\t\t\t\tparameters \u003d {\"log_id\":log_id, \"type_id\":type_id,\n\t\t\t\t\t\t\t\"human_id\":human_id, \"time_created\":time_created}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Insert the staff into the Attendee Log\n\t\t\t\tif self.view.custom.edit_data.staff_involved is not None and len(self.view.custom.edit_data.staff_involved):\n\t\t\t\t\tfor row in range(len(self.view.custom.edit_data.staff_involved)):\n\t\t\t\t\t\ttype_id \u003d 3\n\t\t\t\t\t\thuman_id \u003d self.view.custom.edit_data.staff_involved[row]\n\t\t\t\t\t\t#system.perspective.print(human_id)\n\t\t\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailAttendeeInsert\"\n\t\t\t\t\t\tparameters \u003d {\"log_id\":log_id, \"type_id\":type_id,\n\t\t\t\t\t\t\t\t\t\"human_id\":human_id, \"time_created\":time_created}\n\t\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Insert the incident types into the Incident Type Log\n\t\t\t\t#system.perspective.print(len(self.view.custom.edit_data.incident_type_id))\n\t\t\t\tif self.view.custom.edit_data.incident_type_id is not None and len(self.view.custom.edit_data.incident_type_id):\n\t\t\t\t\tfor row in range(len(self.view.custom.edit_data.incident_type_id)):\n\t\t\t\t\t\ttype_id \u003d self.view.custom.edit_data.incident_type_id[row]\n\t\t\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailTypeInsert\"\n\t\t\t\t\t\tparameters \u003d {\"log_id\":log_id, \"type_id\":type_id,\n\t\t\t\t\t\t\t\t\t\"time_created\":time_created}\n\t\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Insert the suspension data\n\t\t\t\tif bar_participant:\n\t\t\t\t\t#Insert the suspension data\n\t\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailSuspensionInsert\"\n\t\t\t\t\tparameters \u003d {\"time_created\":time_created,\"employee_id\":employee_id,\n\t\t\t\t\t\t\t\t\"participant_id\":participant_id,\"user_name\":user_name,\n\t\t\t\t\t\t\t\t\"organization_id\":organization_id, \"incident_log_id\":log_id,\n\t\t\t\t\t\t\t\t\"suspension_notes\":suspension_notes, \"suspension_type_id\":suspension_type_id,\n\t\t\t\t\t\t\t\t\"duration\":suspension_duration,\n\t\t\t\t\t\t\t\t\"dateBegin\":suspension_time_begin,\"dateEnd\":suspension_time_end,\n\t\t\t\t\t\t\t\t\"incident_location_id\":incident_location,\n\t\t\t\t\t\t\t\t\"reinstateRequired\":reinstateRequired}\n\t\t\t\t\tsuspension_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t#Insert the default comment\n\t\t\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailInsert\"\n\t\t\t\t\tparameters \u003d {\"participant_id\":participant_id,\"suspension_id\":suspension_id,\n\t\t\t\t\t\t\t\t\"comment\":suspension_notes,\n\t\t\t\t\t\t\t\t\"user_name\":user_name,\n\t\t\t\t\t\t\t\t\"time_created\":time_created,\n\t\t\t\t\t\t\t\t\"duration\":suspension_duration,\n\t\t\t\t\t\t\t\t\"suspension_type_id\":suspension_type_id,\n\t\t\t\t\t\t\t\t\"time_begin\":suspension_time_begin,\n\t\t\t\t\t\t\t\t\"time_end\":suspension_time_end}\n\t\t\t\t\tcomment_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t#Set the suspension_active flag\n\t\t\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailSetSuspensionActive\"\n\t\t\t\t\tparameters \u003d {\"participant_id\":participant_id}\n\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t#If Reinstatement is required then check for other suspensions,\n\t\t\t\t\t#set the Reinstate Required flag on all suspensions\n\t\t\t\t\tif reinstateRequired:\n\t\t\t\t\t\tpath \u003d \"Participants/Reinstatement/SuspensionDetailSelectActive\"\n\t\t\t\t\t\tparameters \u003d {\"participant_id\":participant_id}\n\t\t\t\t\t\tdataset \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\t\t\t\t#Get selected suspension ID\u0027s\n\t\t\t\t\t\tidlist \u003d []\n\t\t\t\t\t\tfor\ti in range(dataset.getRowCount()):\n\t\t\t\t\t\t\tidlist.append(str(dataset.getValueAt(i, \"id\")))\n\t\t\t\t\t\tstrIdList \u003d \u0027,\u0027.join(idlist)\n\t\t\t\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementRequiredUpdate\"\n\t\t\t\t\t\tparameters \u003d {\"IdList\": strIdList}\n\t\t\t\t\t\tresult \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\t##### Check if the user is editing existing data\n\t\t\t\t\n\t\t\telif row_id \u003e\u003d 0:#Update existing data on specified row_id\n\t\t\t\t#system.perspective.print(\"Update Exisiting Data\")\n\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailUpdate\"\n\t\t\t\tparameters \u003d {\"time_created\":time_created, \"incident_date\":incident_date, \n\t\t\t\t\t\t\t\"employee_id\":employee_id,\"physical_injury\":physical_injury, \n\t\t\t\t\t\t\t\"property_damage\":property_damage, \"bar_participant\":bar_participant,\n\t\t\t\t\t\t\t\"incident_name\":incident_name, \"incident_location\":incident_location,\n\t\t\t\t\t\t\t\"incident_description\":incident_description, \"row_id\":row_id,\n\t\t\t\t\t\t\t\"participant_id\":participant_id,\"user_name\":user_name}\n\t\t\t\tlog_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\n\t\t\t\t#system.perspective.print(\"Update Data\")\n\t\t\t\t#system.perspective.print(row_id)\n\t\t\t\t#Delete and re-insert the data for the Suspension Log, Attendee Log and Type Log\n\t\t\t\t#path \u003d \"Participants/Incidents/IncidentDetailSuspensionDelete\"\n\t\t\t\t#parameters \u003d {\"incident_row_id\":row_id}\n\t\t\t\t#Refresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailAttendeeDelete\"\n\t\t\t\tparameters \u003d {\"incident_row_id\":row_id}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailTypeDelete\"\n\t\t\t\tparameters \u003d {\"incident_row_id\":row_id}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Insert the participant into the Attendee Log\n\t\t\t\ttype_id \u003d 0\n\t\t\t\thuman_id \u003d self.view.custom.edit_data.participant_human_id\n\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailAttendeeInsert\"\n\t\t\t\tparameters \u003d {\"log_id\":row_id, \"type_id\":type_id,\n\t\t\t\t\t\t\t\"human_id\":human_id, \"time_created\":time_created}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Insert the staff into the Attendee Log\n\t\t\t\tif self.view.custom.edit_data.staff_involved is not None and len(self.view.custom.edit_data.staff_involved):\n\t\t\t\t\tfor row in range(len(self.view.custom.edit_data.staff_involved)):\n\t\t\t\t\t\ttype_id \u003d 3\n\t\t\t\t\t\thuman_id \u003d self.view.custom.edit_data.staff_involved[row]\n\t\t\t\t\t\tsystem.perspective.print(human_id)\n\t\t\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailAttendeeInsert\"\n\t\t\t\t\t\tparameters \u003d {\"log_id\":row_id, \"type_id\":type_id,\n\t\t\t\t\t\t\t\t\t\"human_id\":human_id, \"time_created\":time_created}\n\t\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Insert the incident types into the Incident Type Log\n\t\t\t\t#system.perspective.print(len(self.view.custom.edit_data.incident_type_id))\n\t\t\t\tif self.view.custom.edit_data.incident_type_id is not None and len(self.view.custom.edit_data.incident_type_id):\n\t\t\t\t\tfor row in range(len(self.view.custom.edit_data.incident_type_id)):\n\t\t\t\t\t\ttype_id \u003d self.view.custom.edit_data.incident_type_id[row]\n\t\t\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailTypeInsert\"\n\t\t\t\t\t\tparameters \u003d {\"log_id\":row_id, \"type_id\":type_id,\n\t\t\t\t\t\t\t\t\t\"time_created\":time_created}\n\t\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Update the suspension log\n\t\t\t\tnewSuspension \u003d self.parent.parent.getChild(\"EmbeddedView Row2\").position.display\n\t\t\t\tif bar_participant and newSuspension:\n\t\t\t\t\t#Write the suspension log data if suspended\n\t\t\t\t\t#Check if suspension details already inserted\n\t\t\t\t\tisSuspensionExist_query \u003d system.db.runPrepQuery(\"select * from participant.Suspension where incidentLogId \u003d \" + str(row_id))\n\t\t\t\t\tisSuspensionExist_result \u003d False\n\t\t\t\t\tif isSuspensionExist_query.getRowCount()\u003e0:\n\t\t\t\t\t\tisSuspensionExist_result \u003d True\n\t\t\t\t\t\t\n\t\t\t\t\t#If suspension record not found for selected incident then inert new record\n\t\t\t\t\tif isSuspensionExist_result \u003d\u003d False:\n\t\t\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailSuspensionInsert\"\n\t\t\t\t\t\tparameters \u003d {\"time_created\":time_created,\"employee_id\":employee_id,\n\t\t\t\t\t\t\t\t\t\"participant_id\":participant_id,\"user_name\":user_name,\n\t\t\t\t\t\t\t\t\t\"organization_id\":organization_id, \"incident_log_id\":row_id,\n\t\t\t\t\t\t\t\t\t\"suspension_notes\":suspension_notes, \"suspension_type_id\":suspension_type_id,\n\t\t\t\t\t\t\t\t\t\"duration\":suspension_duration,\n\t\t\t\t\t\t\t\t\t\"dateBegin\":suspension_time_begin,\"dateEnd\":suspension_time_end,\n\t\t\t\t\t\t\t\t\t\"incident_location_id\":incident_location,\n\t\t\t\t\t\t\t\t\t\"reinstateRequired\":reinstateRequired}\n\t\t\t\t\t\tsuspension_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t\t#Insert the default comment\n\t\t\t\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailInsert\"\n\t\t\t\t\t\tparameters \u003d {\"participant_id\":participant_id,\"suspension_id\":suspension_id,\n\t\t\t\t\t\t\t\t\t\"comment\":suspension_notes,\n\t\t\t\t\t\t\t\t\t\"user_name\":user_name,\n\t\t\t\t\t\t\t\t\t\"time_created\":time_created,\n\t\t\t\t\t\t\t\t\t\"duration\":suspension_duration,\n\t\t\t\t\t\t\t\t\t\"suspension_type_id\":suspension_type_id,\n\t\t\t\t\t\t\t\t\t\"time_begin\":suspension_time_begin,\n\t\t\t\t\t\t\t\t\t\"time_end\":suspension_time_end}\n\t\t\t\t\t\tcomment_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t\t#Set the suspension_active flag\n\t\t\t\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailSetSuspensionActive\"\n\t\t\t\t\t\tparameters \u003d {\"participant_id\":participant_id}\n\t\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t\t\n\t\t\t\t\t#If suspension record found for selected incident then update existing record\n\t\t\t\t\telse:\n\t\t\t\t\t\tpath \u003d \"Participants/Incidents/IncidentDetailSuspensionUpdate\"\n\t\t\t\t\t\tparameters \u003d {\"incident_log_id\":row_id,\n\t\t\t\t\t\t\t\t\t\"suspension_notes\":suspension_notes, \n\t\t\t\t\t\t\t\t\t\"suspension_type_id\":suspension_type_id,\n\t\t\t\t\t\t\t\t\t\"duration\":suspension_duration,\n\t\t\t\t\t\t\t\t\t\"dateBegin\":suspension_time_begin,\n\t\t\t\t\t\t\t\t\t\"dateEnd\":suspension_time_end,\n\t\t\t\t\t\t\t\t\t\"reinstateRequired\":reinstateRequired}\n\t\t\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t\tsuspension_id \u003d isSuspensionExist_query.getValueAt(0,\u0027id\u0027)\n\t\t\t\t\t\t#Update reinstatement record\n\t\t\t\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailUpdate\"\n\t\t\t\t\t\tparameters \u003d {\"suspension_id\":suspension_id,\n\t\t\t\t\t\t\t\t\t\"comment\":suspension_notes,\n\t\t\t\t\t\t\t\t\t\"duration\":suspension_duration,\n\t\t\t\t\t\t\t\t\t\"suspension_type_id\":suspension_type_id,\n\t\t\t\t\t\t\t\t\t\"time_begin\":suspension_time_begin,\n\t\t\t\t\t\t\t\t\t\"time_end\":suspension_time_end}\n\t\t\t\t\t\tcomment_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t\n\t\t\t\t\t#If Reinstatement is required then check for other suspensions,\n\t\t\t\t\t#set the Reinstate Required flag on all suspensions\n\t\t\t\t\tif reinstateRequired:\n\t\t\t\t\t\tpath \u003d \"Participants/Reinstatement/SuspensionDetailSelectActive\"\n\t\t\t\t\t\tparameters \u003d {\"participant_id\":participant_id}\n\t\t\t\t\t\tdataset \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\t\t\t\t#Get selected suspension ID\u0027s\n\t\t\t\t\t\tidlist \u003d []\n\t\t\t\t\t\tfor\ti in range(dataset.getRowCount()):\n\t\t\t\t\t\t\tidlist.append(str(dataset.getValueAt(i, \"id\")))\n\t\t\t\t\t\tstrIdList \u003d \u0027,\u0027.join(idlist)\n\t\t\t\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementRequiredUpdate\"\n\t\t\t\t\t\tparameters \u003d {\"IdList\": strIdList}\n\t\t\t\t\t\tresult \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\n\t\t\t##### Refresh the table\n\t\t\t#if Refresh:\t\n\t\t\t\t#system.perspective.print(\"Incident Detail Query Success\")\n\t\t\tif row_id \u003d\u003d -1:\n\t\t\t\tself.getSibling(\"Label\").showMessage(\u0027Incident Created Successfully\u0027)\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t## also create the case note\n\t\t\t\t\n\t\t\t\t## Get the employee id for human id\n\t\t\t\tstaffHumanId_list \u003d self.view.custom.edit_data.staff_involved\n\t\t\t\tstaffEmpId \u003d 0\n\t\t\t\tif len(staffHumanId_list) \u003e 0:\n\t\t\t\t\tstaffHumanId \u003d staffHumanId_list[0]\n\t\t\t\t\tselectQ \u003d \"SELECT id from staff.Employee where humanId \u003d ?\"\n\t\t\t\t\tstaffData \u003d system.db.runPrepQuery(selectQ, [staffHumanId])\n\t\t\t\t\tstaffEmpId \u003d 0\n\t\t\t\t\tif staffData is not None and staffData.getRowCount() \u003e 0:\n\t\t\t\t\t\tstaffEmpId \u003d staffData.getValueAt(0,0)\n\t\t\t\t\n\t\t\t\tpath \u003d \"Participants/CaseNotes/CaseNotesDetailInsert\"\n\t\t\t\tparameters \u003d {\"time_created\":time_created,\n\t\t\t\t\t\t\t\"participant_id\":participant_id,\n\t\t\t\t\t\t\t\"employee_id\":staffEmpId, \n\t\t\t\t\t\t\t\"hmis\":False,\n\t\t\t\t\t\t\t\"note\":incident_description,\n\t\t\t\t\t\t\t\"user_name\":user_name,\n\t\t\t\t\t\t\t\u0027startTime\u0027:incident_date,\n\t\t\t\t\t\t\t\u0027endTime\u0027:incident_date}\n\t\t\t\tsystem.perspective.print(parameters)\n\t\t\t\tnote_row \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\n\t\t\t\t\n\t\t\t\t## insert case note types\n\t\t\t\t\n\t\t\t\tpath \u003d \"Participants/CaseNotes/CaseNotesTypesInsert\"\n\t\t\t\tparameters \u003d {\"case_note_id\":note_row,\n\t\t\t\t\t\t\t\t\"case_note_type_id\":self.view.custom.casenotetype}\n\t\t\t\tnote_type_row \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\n\t\t\t\t\t\n\t\t\telse:\n\t\t\t\tself.getSibling(\"Label\").showMessage(\u0027Incident Updated Successfully\u0027)\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshIncidentsData\", payload\u003d{}, scope\u003d\"session\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshIncidentDetail\", payload\u003d{}, scope\u003d\"session\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshPersonalInformation\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\n\t\t\tdefaultRowData \u003d {\n\t\t\t\"bar_participant\": -1,\n\t\t\t  \"incident_date\": system.date.now(),\n\t\t\t  \"incident_description\": \"\",\n\t\t\t  \"incident_location_id\": -1,\n\t\t\t  \"incident_type_id\": [],\n\t\t\t  \"participant_human_id\": self.view.params.row_data.participant_human_id,\n\t\t\t  \"participant_id\": self.view.params.row_data.participant_id,\n\t\t\t  \"physical_injury\": -1,\n\t\t\t  \"property_damage\": -1,\n\t\t\t  \"reinstateRequired\": -1,\n\t\t\t  \"row_id\": -1,\n\t\t\t  \"staff_involved\": [],\n\t\t\t  \"suspension_duration\": 0,\n\t\t\t  \"suspension_id\": -1,\n\t\t\t  \"suspension_notes\": \"\",\n\t\t\t  \"suspension_time_begin\": system.date.now(),\n\t\t\t  \"suspension_time_end\": system.date.now(),\n\t\t\t  \"suspension_type_id\": -1\n\t\t\t  }\n\t\t\tself.view.params.row_data \u003d defaultRowData\n\t\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants IncidentsDetailEdit button_save\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\t\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{session.custom.isManager} || {session.custom.isWSManager} || {session.custom.isAdministrator}"
                  },
                  "type": "expr"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.row_id} \u003d -1,\u0027Save Incident\u0027,\u0027Update Incident\u0027)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t### Declare parameters\n\tproject \u003d \"RITI\" \n\tincident_row_id \u003d self.view.custom.edit_data.row_id\n\tsuspension_id \u003d self.view.custom.edit_data.suspension_id\n\tparticipantId \u003d self.view.custom.edit_data.participant_id\n\t## Check if parameters are filled in correctly \n\tif (incident_row_id is None) or (int(incident_row_id) \u003c 0):\n\t\tvalid \u003d False\n\t\tsystem.perspective.print(\"Row ID Error\")\n\telse:\n\t\tvalid \u003d True\n\t\tsystem.perspective.print(\"Data Valid\")\n\t\t\t\n\t### Check if data is valid otherwise show error message.\n\tif valid:\n\t\t#try:\n\t\t\n\t\t# if participant is suspended \n\t\t# 1. remove data from reinstatement log\n\t\t# 2. if there are no other active suspensions, update participant suspended status\n\t\tif suspension_id !\u003d -1:\n\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailDeleteReinstatement\"\n\t\t\tparameters \u003d {\"suspension_id\":suspension_id}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\t#Get a count of all active suspensions\n\t\t\tpath \u003d \u0027Participants/Reinstatement/ManualReinstateFindSuspensions\u0027\n\t\t\tparameters \u003d {\"participantId\":participantId}\n\t\t\tcount \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t#If this is the last active suspension then reinstate the participant\n\t\t\tif count \u003e 1:\n\t\t\t\tpass\n\t\t\telse:\n\t\t\t\tpath \u003d \"Participants/Reinstatement/ManualReinstateParticipant\"\n\t\t\t\tparameters \u003d {\"participantId\":participantId}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshPersonalInformation\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\t\n\t\t#Delete the data for the Suspnesion Log\n\t\tpath \u003d \"Participants/Incidents/IncidentDetailSuspensionDelete\"\n\t\tparameters \u003d {\"incident_row_id\":incident_row_id}\n\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t#Delete the data for the Attendee Log and Type Log\n\t\tpath \u003d \"Participants/Incidents/IncidentDetailAttendeeDelete\"\n\t\tparameters \u003d {\"incident_row_id\":incident_row_id}\n\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\n\t\tpath \u003d \"Participants/Incidents/IncidentDetailTypeDelete\"\n\t\tparameters \u003d {\"incident_row_id\":incident_row_id}\n\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t#Delete the incident\n\t\tpath \u003d \"Participants/Incidents/IncidentDetailDelete\"\n\t\tparameters \u003d {\"incident_row_id\":incident_row_id}\n\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\n\t\t#system.perspective.print(\"Delete Incident\")\n\t\t##### Refresh the table\n\t\tif Refresh:\t\n\t\t\tsystem.perspective.print(\"Incident Detail Delete Query Success\")\n\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshIncidentsData\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\n\t\t#except:\n\t\t#\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t\n\telse:\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\t\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_delete"
            },
            "position": {
              "basis": "120px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.custom.edit_data.row_id"
                  },
                  "transforms": [
                    {
                      "code": "\timport traceback\n\ttry:\n\t\tif self.view.custom.edit_data.row_id \u003e -1:\n\t\t\tif self.view.custom.edit_data.bar_participant \u003d\u003d 1 and self.view.custom.edit_data.reinstated \u003d\u003d 1:\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\tif self.session.custom.isManager or self.session.custom.isWSManager or self.session.custom.isAdministrator:\n\t\t\t\t\treturn True\n\t\t\t\telse:\n\t\t\t\t\treturn False\n\t\telse:\n\t\t\treturn False\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants IncidentsDetailEdit button_delete.position.display\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Delete Incident"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Incident Updated Successfully"
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(3)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false,
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Row ID:\u0027 +\r\n{view.params.row_data.row_id} +\r\n\u0027, Bar participant:\u0027 +\r\n{view.params.row_data.bar_participant}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}