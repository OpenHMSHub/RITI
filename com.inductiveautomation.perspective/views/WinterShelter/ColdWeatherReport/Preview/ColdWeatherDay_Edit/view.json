{
  "custom": {
    "sql_data": {
      "$": [
        "ds",
        192,
        1704776944163
      ],
      "$columns": [
        {
          "data": [
            11
          ],
          "name": "id",
          "type": "Integer"
        },
        {
          "data": [
            "November"
          ],
          "name": "month",
          "type": "String"
        },
        {
          "data": [
            2023
          ],
          "name": "year",
          "type": "Integer"
        },
        {
          "data": [
            1699682400000
          ],
          "name": "monthDate",
          "type": "Date"
        },
        {
          "data": [
            "Saturday"
          ],
          "name": "dayOfWeek",
          "type": "String"
        },
        {
          "data": [
            60
          ],
          "name": "ghBeds",
          "type": "Integer"
        },
        {
          "data": [
            54
          ],
          "name": "ghUtilization",
          "type": "Integer"
        },
        {
          "data": [
            94
          ],
          "name": "congregationalBeds",
          "type": "Integer"
        },
        {
          "data": [
            89
          ],
          "name": "congregationalBedsUtilization",
          "type": "Integer"
        },
        {
          "data": [
            154
          ],
          "name": "totalBedsCapacityRITI",
          "type": "Integer"
        },
        {
          "data": [
            143
          ],
          "name": "totalBedsUtilizedRITI",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "addedBeds",
          "type": "Integer"
        },
        {
          "data": [
            11
          ],
          "name": "unUtilizedBeds",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "notes",
          "type": "String"
        },
        {
          "data": [
            false
          ],
          "name": "isCold",
          "type": "Boolean"
        },
        {
          "data": [
            null
          ],
          "name": "overflowShelter",
          "type": "Integer"
        }
      ]
    }
  },
  "params": {
    "id": 11
  },
  "propConfig": {
    "custom.sql_data": {
      "binding": {
        "config": {
          "parameters": {
            "id": "{view.params.id}"
          },
          "queryPath": "WinterShelter/ColdWeatherReport/GetReportDataFor_Id"
        },
        "type": "query"
      },
      "onChange": {
        "enabled": null,
        "script": "\tvalue \u003d currentValue.value\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tif value.getValueAt(0,\u0027ghBeds\u0027) is not None :\n\t\t\tself.getChild(\"root\").custom.data.ghBeds \u003d value.getValueAt(0,\u0027ghBeds\u0027)\n\t\telse:\n\t\t\tself.getChild(\"root\").custom.data.ghBeds \u003d 0\n\t\t\n\t\tif value.getValueAt(0,\u0027overflowShelter\u0027) is not None :\n\t\t\tself.getChild(\"root\").custom.data.overflowShelter \u003d value.getValueAt(0,\u0027overflowShelter\u0027)\n\t\telse:\n\t\t\tself.getChild(\"root\").custom.data.overflowShelter \u003d 0\n\t\t\n\t\tif value.getValueAt(0,\u0027notes\u0027) is not None:\n\t\t\tself.getChild(\"root\").custom.data.note \u003d value.getValueAt(0,\u0027notes\u0027)\n\t\telse:\n\t\t\tself.getChild(\"root\").custom.data.note \u003d \u0027\u0027\n\t\t\n\t\tif value.getValueAt(0,\u0027isCold\u0027) is not None:\n\t\t\tself.getChild(\"root\").custom.data.coldWeather \u003d value.getValueAt(0,\u0027isCold\u0027)\n\t\telse:\n\t\t\tself.getChild(\"root\").custom.data.coldWeather \u003d False\n\t\t\n\t\tif value.getValueAt(0,\u0027monthDate\u0027) is not None:\n\t\t\tself.getChild(\"root\").custom.data.date \u003d system.date.format(value.getValueAt(0,\u0027monthDate\u0027),\u0027dd-MMM-yyyy\u0027)"
      },
      "persistent": true
    },
    "params.id": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 1213,
      "width": 600
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "39px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Text/Add_TextArea",
                "marginLeft": "27px"
              },
              "text": "Date:"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Label_0"
            },
            "position": {
              "basis": "373px",
              "shrink": 0
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "/root.custom.data.date"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Text/Add_TextArea"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Date"
        },
        "position": {
          "basis": "40px"
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Embed_GHBeds"
            },
            "position": {
              "basis": "250px"
            },
            "propConfig": {
              "props.params.textValue": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "/root.custom.data.ghBeds"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "text": 90,
                "textLabel": "GH Beds"
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "GHBeds"
        },
        "position": {
          "basis": "60px"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Embed_OverflowShelter"
            },
            "position": {
              "basis": "250px"
            },
            "propConfig": {
              "props.params.textValue": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "/root.custom.data.overflowShelter"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "text": 90,
                "textLabel": "Overflow Shelter"
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "OverflowShelter"
        },
        "position": {
          "basis": "60px"
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Embed_Notes"
            },
            "position": {
              "basis": "380px"
            },
            "propConfig": {
              "props.params.textValue": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "/root.custom.data.note"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "textLabel": "Note"
              },
              "path": "1_TEMPLATES/60px/top/TextareaInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Note"
        },
        "position": {
          "basis": "120px"
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Checkbox"
            },
            "position": {
              "basis": "36px"
            },
            "propConfig": {
              "props.selected": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "/root.custom.data.coldWeather"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "checkedIcon": {
                "color": {
                  "enabled": "#3EC3D9"
                }
              },
              "style": {
                "marginBottom": "2px",
                "marginLeft": "20px",
                "marginTop": "2px"
              },
              "text": "",
              "uncheckedIcon": {
                "color": {
                  "enabled": "#3EC3D9"
                }
              }
            },
            "type": "ia.input.checkbox"
          },
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "229px"
            },
            "props": {
              "style": {
                "classes": "Text/Add_HeaderText"
              },
              "text": "Cold Weather"
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "ColdWeather"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "marginTop": "10px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tvalue \u003d self.view.custom.sql_data\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tif value.getValueAt(0,\u0027ghBeds\u0027) is not None :\n\t\t\tself.getChild(\"root\").custom.data.ghBeds \u003d value.getValueAt(0,\u0027ghBeds\u0027)\n\t\telse:\n\t\t\tself.getChild(\"root\").custom.data.ghBeds \u003d 0\n\t\tif value.getValueAt(0,\u0027notes\u0027) is not None:\n\t\t\tself.getChild(\"root\").custom.data.note \u003d value.getValueAt(0,\u0027notes\u0027)\n\t\telse:\n\t\t\tself.getChild(\"root\").custom.data.note \u003d \u0027\u0027\n\t\tif value.getValueAt(0,\u0027isCold\u0027) is not None:\n\t\t\tself.getChild(\"root\").custom.data.coldWeather \u003d value.getValueAt(0,\u0027isCold\u0027)\n\t\telse:\n\t\t\tself.getChild(\"root\").custom.data.coldWeather \u003d False\n\t\tif value.getValueAt(0,\u0027monthDate\u0027) is not None:\n\t\t\tself.getChild(\"root\").custom.data.date \u003d system.date.format(value.getValueAt(0,\u0027monthDate\u0027),\u0027dd-MMM-yyyy\u0027)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Clear"
            },
            "position": {
              "basis": "120px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "15px",
                "marginLeft": "26px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Cancel"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\t\tisCold \u003d self.view.getChild(\"root\").custom.data.coldWeather\n\t\tnote \u003d self.view.getChild(\"root\").custom.data.note\n\t\tghBeds \u003d self.view.getChild(\"root\").custom.data.ghBeds\n\t\toverflowShelter \u003d self.view.getChild(\"root\").custom.data.overflowShelter\n\t\tif overflowShelter \u003d\u003d 0:\n\t\t\toverflowShelter \u003d None\n\t\tupdateQuery \u003d \u0027\u0027\u0027\n\t\t\t\t\t\tUPDATE \n\t\t\t\t\t\t\tshelter.ColdWeatherReportData\n\t\t\t\t\t\tSET\n\t\t\t\t\t       [isCold] \u003d ?\n\t\t\t\t\t      ,[notes] \u003d ?\n\t\t\t\t\t      ,[ghBeds] \u003d ?\n\t\t\t\t\t      ,[overflowShelter] \u003d ?\n\t\t\t\t\t  \tWHERE [id] \u003d ?\n\t\t\t\t\t\u0027\u0027\u0027\n\t\t\n\t\tsystem.db.runPrepUpdate(updateQuery, [isCold, note, ghBeds, overflowShelter, self.view.params.id])\n\t\tself.getSibling(\"Label\").showMessage(\u0027Update success !\u0027)\n\t\tsystem.perspective.closeDock(\u0027ColdWeatherDayEdit\u0027)\n\t\tsystem.perspective.sendMessage(\"ColdWeatherDay_updated\", payload \u003d {}, scope \u003d \"page\")\n\t\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Create"
            },
            "position": {
              "basis": "120px",
              "display": "True"
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "15px",
                "marginLeft": "20px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Update"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Update success !"
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\t#system.perspective.print(message)\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(1)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "65px",
          "shrink": 0
        },
        "props": {
          "style": {
            "marginTop": "0px"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "custom": {
      "data": {
        "coldWeather": false,
        "date": "11-Nov-2023",
        "ghBeds": "",
        "note": "",
        "overflowShelter": ""
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "ColdWeatherDay_updated",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tself.view.refreshBinding(\u0027custom.sql_data\u0027)",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}