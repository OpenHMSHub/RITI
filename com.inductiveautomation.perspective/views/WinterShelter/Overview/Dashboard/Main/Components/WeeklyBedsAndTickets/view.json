{
  "custom": {
    "decDailyCongregations": {
      "Fri": 0,
      "Mon": 0,
      "Sat": 0,
      "Sun": 0,
      "Thu": 0,
      "Tue": 0,
      "Wed": 0,
      "noOfFri": 0,
      "noOfMon": 0,
      "noOfSat": 0,
      "noOfSun": 0,
      "noOfThu": 0,
      "noOfTue": 0,
      "noOfWed": 0
    },
    "decDailyData": {
      "$": [
        "ds",
        192,
        1738577481752
      ],
      "$columns": [
        {
          "data": [],
          "name": "DateFromDayOfYear",
          "type": "Date"
        },
        {
          "data": [],
          "name": "dayName",
          "type": "String"
        },
        {
          "data": [],
          "name": "scheduled",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "checkedIn",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "delta",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "weekNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "dayNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregations",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "projection",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregationsNonUnique",
          "type": "Integer"
        }
      ]
    },
    "decTotalCongregations": 0,
    "decWeeklyCongregations": {
      "Week1": 0,
      "Week1Days": 0,
      "Week2": 0,
      "Week2Days": 0,
      "Week3": 0,
      "Week3Days": 0,
      "Week4": 0,
      "Week4Days": 0,
      "Week5": 0,
      "Week5Days": 0
    },
    "febDailyCongregations": {
      "Fri": 0,
      "Mon": 0,
      "Sat": 0,
      "Sun": 0,
      "Thu": 0,
      "Tue": 0,
      "Wed": 0,
      "noOfFri": 0,
      "noOfMon": 0,
      "noOfSat": 0,
      "noOfSun": 0,
      "noOfThu": 0,
      "noOfTue": 0,
      "noOfWed": 0
    },
    "febDailyData": {
      "$": [
        "ds",
        192,
        1738577481755
      ],
      "$columns": [
        {
          "data": [],
          "name": "DateFromDayOfYear",
          "type": "Date"
        },
        {
          "data": [],
          "name": "dayName",
          "type": "String"
        },
        {
          "data": [],
          "name": "scheduled",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "checkedIn",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "delta",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "weekNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "dayNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregations",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "projection",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregationsNonUnique",
          "type": "Integer"
        }
      ]
    },
    "febTotalCongregations": 0,
    "febWeeklyCongregations": {
      "Week1": 0,
      "Week1Days": 0,
      "Week2": 0,
      "Week2Days": 0,
      "Week3": 0,
      "Week3Days": 0,
      "Week4": 0,
      "Week4Days": 0,
      "Week5": 0,
      "Week5Days": 0
    },
    "janDailyCongregations": {
      "Fri": 0,
      "Mon": 0,
      "Sat": 0,
      "Sun": 0,
      "Thu": 0,
      "Tue": 0,
      "Wed": 0,
      "noOfFri": 0,
      "noOfMon": 0,
      "noOfSat": 0,
      "noOfSun": 0,
      "noOfThu": 0,
      "noOfTue": 0,
      "noOfWed": 0
    },
    "janDailyData": {
      "$": [
        "ds",
        192,
        1738577481750
      ],
      "$columns": [
        {
          "data": [],
          "name": "DateFromDayOfYear",
          "type": "Date"
        },
        {
          "data": [],
          "name": "dayName",
          "type": "String"
        },
        {
          "data": [],
          "name": "scheduled",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "checkedIn",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "delta",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "weekNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "dayNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregations",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "projection",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregationsNonUnique",
          "type": "Integer"
        }
      ]
    },
    "janTotalCongregations": 0,
    "janWeeklyCongregations": {
      "Week1": 0,
      "Week1Days": 0,
      "Week2": 0,
      "Week2Days": 0,
      "Week3": 0,
      "Week3Days": 0,
      "Week4": 0,
      "Week4Days": 0,
      "Week5": 0,
      "Week5Days": 0
    },
    "lowestTwoAvgCongregationsMonth": null,
    "lowestTwoTotalCongregationsMonth": null,
    "marchDailyCongregations": {
      "Fri": 0,
      "Mon": 0,
      "Sat": 0,
      "Sun": 0,
      "Thu": 0,
      "Tue": 0,
      "Wed": 0,
      "noOfFri": 0,
      "noOfMon": 0,
      "noOfSat": 0,
      "noOfSun": 0,
      "noOfThu": 0,
      "noOfTue": 0,
      "noOfWed": 0
    },
    "marchDailyData": {
      "$": [
        "ds",
        192,
        1738577481754
      ],
      "$columns": [
        {
          "data": [],
          "name": "DateFromDayOfYear",
          "type": "Date"
        },
        {
          "data": [],
          "name": "dayName",
          "type": "String"
        },
        {
          "data": [],
          "name": "scheduled",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "checkedIn",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "delta",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "weekNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "dayNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregations",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "projection",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregationsNonUnique",
          "type": "Integer"
        }
      ]
    },
    "marchTotalCongregations": 0,
    "marchWeeklyCongregations": {
      "Week1": 0,
      "Week1Days": 0,
      "Week2": 0,
      "Week2Days": 0,
      "Week3": 0,
      "Week3Days": 0,
      "Week4": 0,
      "Week4Days": 0,
      "Week5": 0,
      "Week5Days": 0
    },
    "minimumBedsThreshold": null,
    "novDailyCongregations": {
      "Fri": 0,
      "Mon": 0,
      "Sat": 0,
      "Sun": 0,
      "Thu": 0,
      "Tue": 0,
      "Wed": 0,
      "noOfFri": 0,
      "noOfMon": 0,
      "noOfSat": 0,
      "noOfSun": 0,
      "noOfThu": 0,
      "noOfTue": 0,
      "noOfWed": 0
    },
    "novDailyData": {
      "$": [
        "ds",
        192,
        1738577481750
      ],
      "$columns": [
        {
          "data": [],
          "name": "DateFromDayOfYear",
          "type": "Date"
        },
        {
          "data": [],
          "name": "dayName",
          "type": "String"
        },
        {
          "data": [],
          "name": "scheduled",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "checkedIn",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "delta",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "weekNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "dayNumber",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregations",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "projection",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "noOfCongregationsNonUnique",
          "type": "Integer"
        }
      ]
    },
    "novTotalCongregations": 0,
    "novWeeklyCongregations": {
      "Week1": 0,
      "Week1Days": 0,
      "Week2": 0,
      "Week2Days": 0,
      "Week3": 0,
      "Week3Days": 0,
      "Week4": 0,
      "Week4Days": 0,
      "Week5": 0,
      "Week5Days": 0
    },
    "seasonName": ""
  },
  "params": {
    "decDayTotals": {
      "Fri": 658,
      "Mon": 350,
      "Sat": 534,
      "Sun": 527,
      "Thu": 392,
      "Tue": 354,
      "Wed": 340,
      "noOfFri": 5,
      "noOfMon": 4,
      "noOfSat": 5,
      "noOfSun": 5,
      "noOfThu": 4,
      "noOfTue": 4,
      "noOfWed": 4
    },
    "decMonthTotal": 3155,
    "decWeekTotals": {
      "Week1": 292,
      "Week1Days": 2,
      "Week2": 773,
      "Week2Days": 7,
      "Week3": 702,
      "Week3Days": 7,
      "Week4": 715,
      "Week4Days": 7,
      "Week5": 594,
      "Week5Days": 7,
      "Week6": 79,
      "Week6Days": 1
    },
    "febDayTotals": {
      "Fri": 683,
      "Mon": 399,
      "Sat": 459,
      "Sun": 372,
      "Thu": 448,
      "Tue": 351,
      "Wed": 392,
      "noOfFri": 4,
      "noOfMon": 4,
      "noOfSat": 4,
      "noOfSun": 4,
      "noOfThu": 5,
      "noOfTue": 4,
      "noOfWed": 4
    },
    "febMonthTotal": 3104,
    "febWeekTotals": {
      "Week1": 409,
      "Week1Days": 3,
      "Week2": 798,
      "Week2Days": 7,
      "Week3": 795,
      "Week3Days": 7,
      "Week4": 688,
      "Week4Days": 7,
      "Week5": 414,
      "Week5Days": 5
    },
    "janDayTotals": {
      "Fri": 573,
      "Mon": 428,
      "Sat": 463,
      "Sun": 407,
      "Thu": 369,
      "Tue": 473,
      "Wed": 483,
      "noOfFri": 4,
      "noOfMon": 5,
      "noOfSat": 4,
      "noOfSun": 4,
      "noOfThu": 4,
      "noOfTue": 5,
      "noOfWed": 5
    },
    "janMonthTotal": 3196,
    "janWeekTotals": {
      "Week1": 624,
      "Week1Days": 6,
      "Week2": 737,
      "Week2Days": 7,
      "Week3": 764,
      "Week3Days": 7,
      "Week4": 725,
      "Week4Days": 7,
      "Week5": 346,
      "Week5Days": 4
    },
    "marchDayTotals": {
      "Fri": 739,
      "Mon": 367,
      "Sat": 473,
      "Sun": 410,
      "Thu": 310,
      "Tue": 270,
      "Wed": 392,
      "noOfFri": 5,
      "noOfMon": 4,
      "noOfSat": 5,
      "noOfSun": 5,
      "noOfThu": 4,
      "noOfTue": 4,
      "noOfWed": 4
    },
    "marchMonthTotal": 1430,
    "marchWeekTotals": {
      "Week1": 294,
      "Week1Days": 2,
      "Week2": 734,
      "Week2Days": 7,
      "Week3": 667,
      "Week3Days": 7,
      "Week4": 637,
      "Week4Days": 7,
      "Week5": 555,
      "Week5Days": 7,
      "Week6": 74,
      "Week6Days": 1
    },
    "novDayTotals": {
      "Fri": 529,
      "Mon": 319,
      "Sat": 408,
      "Sun": 343,
      "Thu": 440,
      "Tue": 352,
      "Wed": 396,
      "noOfFri": 4,
      "noOfMon": 4,
      "noOfSat": 4,
      "noOfSun": 4,
      "noOfThu": 5,
      "noOfTue": 4,
      "noOfWed": 5
    },
    "novMonthTotal": 2787,
    "novWeekTotals": {
      "Week1": 430,
      "Week1Days": 4,
      "Week2": 621,
      "Week2Days": 7,
      "Week3": 722,
      "Week3Days": 7,
      "Week4": 614,
      "Week4Days": 7,
      "Week5": 400,
      "Week5Days": 5
    },
    "seasonId": 13,
    "totalDaysDec": 31,
    "totalDaysFeb": 29,
    "totalDaysJan": 31,
    "totalDaysMarch": 31,
    "totalDaysNov": 30
  },
  "propConfig": {
    "custom.decDailyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.decDailyData"
        },
        "transforms": [
          {
            "code": "\tdailySumDict \u003d {\u0027Mon\u0027:0, \u0027Tue\u0027:0, \u0027Wed\u0027:0, \u0027Thu\u0027:0, \u0027Fri\u0027:0, \u0027Sat\u0027:0, \u0027Sun\u0027:0, \u0027noOfMon\u0027:0,\u0027noOfTue\u0027:0,\u0027noOfWed\u0027:0,\u0027noOfThu\u0027:0,\u0027noOfFri\u0027:0,\u0027noOfSat\u0027:0,\u0027noOfSun\u0027:0}\n\tmonTotal \u003d 0\n\ttueTotal \u003d 0\n\twedTotal \u003d 0\n\tthuTotal \u003d 0\n\tfriTotal \u003d 0\n\tsatTotal \u003d 0\n\tsunTotal \u003d 0\n\tnoOfMon \u003d 0\n\tnoOfTue \u003d 0\n\tnoOfWed \u003d 0\n\tnoOfThu \u003d 0\n\tnoOfFri \u003d 0\n\tnoOfSat \u003d 0\n\tnoOfSun \u003d 0\n\t## in a dataset calculate total beds for each day and total no of each days in a month\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tfor i in range(value.getRowCount()):\n\t\t\tif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 1:\n\t\t\t\tsunTotal \u003d sunTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSun \u003d noOfSun + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 2:\n\t\t\t\tmonTotal \u003d monTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfMon \u003d noOfMon + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 3:\n\t\t\t\ttueTotal \u003d tueTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfTue \u003d noOfTue + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 4:\n\t\t\t\twedTotal \u003d wedTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027)\n\t\t\t\tnoOfWed \u003d noOfWed + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 5:\n\t\t\t\tthuTotal \u003d thuTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfThu \u003d noOfThu + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 6:\n\t\t\t\tfriTotal \u003d friTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfFri \u003d noOfFri + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 7:\n\t\t\t\tsatTotal \u003d satTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSat \u003d noOfSat + 1\n\t\t## assign teh values\n\t\tdailySumDict[\u0027Mon\u0027] \u003d monTotal\n\t\tdailySumDict[\u0027Tue\u0027] \u003d tueTotal\n\t\tdailySumDict[\u0027Wed\u0027] \u003d wedTotal\n\t\tdailySumDict[\u0027Thu\u0027] \u003d thuTotal\n\t\tdailySumDict[\u0027Fri\u0027] \u003d friTotal\n\t\tdailySumDict[\u0027Sat\u0027] \u003d satTotal\n\t\tdailySumDict[\u0027Sun\u0027] \u003d sunTotal\n\t\tdailySumDict[\u0027noOfMon\u0027] \u003d noOfMon\n\t\tdailySumDict[\u0027noOfTue\u0027] \u003d noOfTue\n\t\tdailySumDict[\u0027noOfWed\u0027] \u003d noOfWed\n\t\tdailySumDict[\u0027noOfThu\u0027] \u003d noOfThu\n\t\tdailySumDict[\u0027noOfFri\u0027] \u003d noOfFri\n\t\tdailySumDict[\u0027noOfSat\u0027] \u003d noOfSat\n\t\tdailySumDict[\u0027noOfSun\u0027] \u003d noOfSun\n\treturn dailySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.decDailyData": {
      "binding": {
        "config": {
          "parameters": {
            "month": "12",
            "seasonId": "{view.params.seasonId}"
          },
          "queryPath": "WinterShelter/Overview/GetScheduledVsCheckedIn"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.decTotalCongregations": {
      "binding": {
        "config": {
          "expression": "{view.custom.decDailyCongregations.Mon} + \r\n{view.custom.decDailyCongregations.Tue} + \r\n{view.custom.decDailyCongregations.Wed} + \r\n{view.custom.decDailyCongregations.Thu} + \r\n{view.custom.decDailyCongregations.Fri} +\r\n{view.custom.decDailyCongregations.Sat} +\r\n{view.custom.decDailyCongregations.Sun}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.decWeeklyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.decDailyData"
        },
        "transforms": [
          {
            "code": "\tweeklySumDict \u003d {\u0027Week1\u0027:0,\u0027Week1Days\u0027:0,\u0027Week2\u0027:0,\u0027Week2Days\u0027:0,\u0027Week3\u0027:0,\u0027Week3Days\u0027:0,\u0027Week4\u0027:0,\u0027Week4Days\u0027:0,\u0027Week5\u0027:0,\u0027Week5Days\u0027:0}\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tcurrentWeek \u003d int(value.getValueAt(0,\u0027weekNumber\u0027))\n\t\tweekNo \u003d 1\n\t\tweekSum \u003d 0\t\n\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\tnoOfDaysInWeek \u003d 0\n\t\tfor i in range(value.getRowCount()):\n\t\t\t\n\t\t\tif int(value.getValueAt(i,\u0027weekNumber\u0027)) \u003d\u003d currentWeek:\n\t\t\t\tweekSum \u003d weekSum + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d noOfDaysInWeek + 1\n\t\t\telse:\n\t\t\t\tweeklySumDict[weekName] \u003d weekSum ## add prev week\u0027s data \n\t\t\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\n\t\t\t\t\t\n\t\t\t\tcurrentWeek \u003d int(value.getValueAt(i,\u0027weekNumber\u0027))\n\t\t\t\tweekNo \u003d weekNo + 1\n\t\t\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\t\t\tweekSum \u003d value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d 1\n\t\tweeklySumDict[weekName] \u003d weekSum\n\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\t\n\treturn weeklySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.febDailyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.febDailyData"
        },
        "transforms": [
          {
            "code": "\tdailySumDict \u003d {\u0027Mon\u0027:0, \u0027Tue\u0027:0, \u0027Wed\u0027:0, \u0027Thu\u0027:0, \u0027Fri\u0027:0, \u0027Sat\u0027:0, \u0027Sun\u0027:0, \u0027noOfMon\u0027:0,\u0027noOfTue\u0027:0,\u0027noOfWed\u0027:0,\u0027noOfThu\u0027:0,\u0027noOfFri\u0027:0,\u0027noOfSat\u0027:0,\u0027noOfSun\u0027:0}\n\tmonTotal \u003d 0\n\ttueTotal \u003d 0\n\twedTotal \u003d 0\n\tthuTotal \u003d 0\n\tfriTotal \u003d 0\n\tsatTotal \u003d 0\n\tsunTotal \u003d 0\n\tnoOfMon \u003d 0\n\tnoOfTue \u003d 0\n\tnoOfWed \u003d 0\n\tnoOfThu \u003d 0\n\tnoOfFri \u003d 0\n\tnoOfSat \u003d 0\n\tnoOfSun \u003d 0\n\t## in a dataset calculate total beds for each day and total no of each days in a month\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tfor i in range(value.getRowCount()):\n\t\t\tif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 1:\n\t\t\t\tsunTotal \u003d sunTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSun \u003d noOfSun + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 2:\n\t\t\t\tmonTotal \u003d monTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfMon \u003d noOfMon + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 3:\n\t\t\t\ttueTotal \u003d tueTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfTue \u003d noOfTue + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 4:\n\t\t\t\twedTotal \u003d wedTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027)\n\t\t\t\tnoOfWed \u003d noOfWed + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 5:\n\t\t\t\tthuTotal \u003d thuTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfThu \u003d noOfThu + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 6:\n\t\t\t\tfriTotal \u003d friTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfFri \u003d noOfFri + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 7:\n\t\t\t\tsatTotal \u003d satTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSat \u003d noOfSat + 1\n\t\t## assign teh values\n\t\tdailySumDict[\u0027Mon\u0027] \u003d monTotal\n\t\tdailySumDict[\u0027Tue\u0027] \u003d tueTotal\n\t\tdailySumDict[\u0027Wed\u0027] \u003d wedTotal\n\t\tdailySumDict[\u0027Thu\u0027] \u003d thuTotal\n\t\tdailySumDict[\u0027Fri\u0027] \u003d friTotal\n\t\tdailySumDict[\u0027Sat\u0027] \u003d satTotal\n\t\tdailySumDict[\u0027Sun\u0027] \u003d sunTotal\n\t\tdailySumDict[\u0027noOfMon\u0027] \u003d noOfMon\n\t\tdailySumDict[\u0027noOfTue\u0027] \u003d noOfTue\n\t\tdailySumDict[\u0027noOfWed\u0027] \u003d noOfWed\n\t\tdailySumDict[\u0027noOfThu\u0027] \u003d noOfThu\n\t\tdailySumDict[\u0027noOfFri\u0027] \u003d noOfFri\n\t\tdailySumDict[\u0027noOfSat\u0027] \u003d noOfSat\n\t\tdailySumDict[\u0027noOfSun\u0027] \u003d noOfSun\n\treturn dailySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.febDailyData": {
      "binding": {
        "config": {
          "parameters": {
            "month": "2",
            "seasonId": "{view.params.seasonId}"
          },
          "queryPath": "WinterShelter/Overview/GetScheduledVsCheckedIn"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.febTotalCongregations": {
      "binding": {
        "config": {
          "expression": "{view.custom.febDailyCongregations.Mon} + \r\n{view.custom.febDailyCongregations.Tue} + \r\n{view.custom.febDailyCongregations.Wed} + \r\n{view.custom.febDailyCongregations.Thu} + \r\n{view.custom.febDailyCongregations.Fri} +\r\n{view.custom.febDailyCongregations.Sat} +\r\n{view.custom.febDailyCongregations.Sun}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.febWeeklyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.febDailyData"
        },
        "transforms": [
          {
            "code": "\tweeklySumDict \u003d {\u0027Week1\u0027:0,\u0027Week1Days\u0027:0,\u0027Week2\u0027:0,\u0027Week2Days\u0027:0,\u0027Week3\u0027:0,\u0027Week3Days\u0027:0,\u0027Week4\u0027:0,\u0027Week4Days\u0027:0,\u0027Week5\u0027:0,\u0027Week5Days\u0027:0}\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tcurrentWeek \u003d int(value.getValueAt(0,\u0027weekNumber\u0027))\n\t\tweekNo \u003d 1\n\t\tweekSum \u003d 0\t\n\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\tnoOfDaysInWeek \u003d 0\n\t\tfor i in range(value.getRowCount()):\n\t\t\t\n\t\t\tif int(value.getValueAt(i,\u0027weekNumber\u0027)) \u003d\u003d currentWeek:\n\t\t\t\tweekSum \u003d weekSum + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d noOfDaysInWeek + 1\n\t\t\telse:\n\t\t\t\tweeklySumDict[weekName] \u003d weekSum ## add prev week\u0027s data \n\t\t\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\n\t\t\t\t\t\n\t\t\t\tcurrentWeek \u003d int(value.getValueAt(i,\u0027weekNumber\u0027))\n\t\t\t\tweekNo \u003d weekNo + 1\n\t\t\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\t\t\tweekSum \u003d value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d 1\n\t\tweeklySumDict[weekName] \u003d weekSum\n\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\t\n\treturn weeklySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.janDailyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.janDailyData"
        },
        "transforms": [
          {
            "code": "\tdailySumDict \u003d {\u0027Mon\u0027:0, \u0027Tue\u0027:0, \u0027Wed\u0027:0, \u0027Thu\u0027:0, \u0027Fri\u0027:0, \u0027Sat\u0027:0, \u0027Sun\u0027:0, \u0027noOfMon\u0027:0,\u0027noOfTue\u0027:0,\u0027noOfWed\u0027:0,\u0027noOfThu\u0027:0,\u0027noOfFri\u0027:0,\u0027noOfSat\u0027:0,\u0027noOfSun\u0027:0}\n\tmonTotal \u003d 0\n\ttueTotal \u003d 0\n\twedTotal \u003d 0\n\tthuTotal \u003d 0\n\tfriTotal \u003d 0\n\tsatTotal \u003d 0\n\tsunTotal \u003d 0\n\tnoOfMon \u003d 0\n\tnoOfTue \u003d 0\n\tnoOfWed \u003d 0\n\tnoOfThu \u003d 0\n\tnoOfFri \u003d 0\n\tnoOfSat \u003d 0\n\tnoOfSun \u003d 0\n\t## in a dataset calculate total beds for each day and total no of each days in a month\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tfor i in range(value.getRowCount()):\n\t\t\tif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 1:\n\t\t\t\tsunTotal \u003d sunTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSun \u003d noOfSun + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 2:\n\t\t\t\tmonTotal \u003d monTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfMon \u003d noOfMon + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 3:\n\t\t\t\ttueTotal \u003d tueTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfTue \u003d noOfTue + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 4:\n\t\t\t\twedTotal \u003d wedTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027)\n\t\t\t\tnoOfWed \u003d noOfWed + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 5:\n\t\t\t\tthuTotal \u003d thuTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfThu \u003d noOfThu + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 6:\n\t\t\t\tfriTotal \u003d friTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfFri \u003d noOfFri + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 7:\n\t\t\t\tsatTotal \u003d satTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSat \u003d noOfSat + 1\n\t\t## assign teh values\n\t\tdailySumDict[\u0027Mon\u0027] \u003d monTotal\n\t\tdailySumDict[\u0027Tue\u0027] \u003d tueTotal\n\t\tdailySumDict[\u0027Wed\u0027] \u003d wedTotal\n\t\tdailySumDict[\u0027Thu\u0027] \u003d thuTotal\n\t\tdailySumDict[\u0027Fri\u0027] \u003d friTotal\n\t\tdailySumDict[\u0027Sat\u0027] \u003d satTotal\n\t\tdailySumDict[\u0027Sun\u0027] \u003d sunTotal\n\t\tdailySumDict[\u0027noOfMon\u0027] \u003d noOfMon\n\t\tdailySumDict[\u0027noOfTue\u0027] \u003d noOfTue\n\t\tdailySumDict[\u0027noOfWed\u0027] \u003d noOfWed\n\t\tdailySumDict[\u0027noOfThu\u0027] \u003d noOfThu\n\t\tdailySumDict[\u0027noOfFri\u0027] \u003d noOfFri\n\t\tdailySumDict[\u0027noOfSat\u0027] \u003d noOfSat\n\t\tdailySumDict[\u0027noOfSun\u0027] \u003d noOfSun\n\treturn dailySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.janDailyData": {
      "binding": {
        "config": {
          "parameters": {
            "month": "1",
            "seasonId": "{view.params.seasonId}"
          },
          "queryPath": "WinterShelter/Overview/GetScheduledVsCheckedIn"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.janTotalCongregations": {
      "binding": {
        "config": {
          "expression": "{view.custom.janDailyCongregations.Mon} + \r\n{view.custom.janDailyCongregations.Tue} + \r\n{view.custom.janDailyCongregations.Wed} + \r\n{view.custom.janDailyCongregations.Thu} + \r\n{view.custom.janDailyCongregations.Fri} +\r\n{view.custom.janDailyCongregations.Sat} +\r\n{view.custom.janDailyCongregations.Sun}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.janWeeklyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.janDailyData"
        },
        "transforms": [
          {
            "code": "\tweeklySumDict \u003d {\u0027Week1\u0027:0,\u0027Week1Days\u0027:0,\u0027Week2\u0027:0,\u0027Week2Days\u0027:0,\u0027Week3\u0027:0,\u0027Week3Days\u0027:0,\u0027Week4\u0027:0,\u0027Week4Days\u0027:0,\u0027Week5\u0027:0,\u0027Week5Days\u0027:0}\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tcurrentWeek \u003d int(value.getValueAt(0,\u0027weekNumber\u0027))\n\t\tweekNo \u003d 1\n\t\tweekSum \u003d 0\t\n\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\tnoOfDaysInWeek \u003d 0\n\t\tfor i in range(value.getRowCount()):\n\t\t\t\n\t\t\tif int(value.getValueAt(i,\u0027weekNumber\u0027)) \u003d\u003d currentWeek:\n\t\t\t\tweekSum \u003d weekSum + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d noOfDaysInWeek + 1\n\t\t\telse:\n\t\t\t\tweeklySumDict[weekName] \u003d weekSum ## add prev week\u0027s data \n\t\t\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\n\t\t\t\t\t\n\t\t\t\tcurrentWeek \u003d int(value.getValueAt(i,\u0027weekNumber\u0027))\n\t\t\t\tweekNo \u003d weekNo + 1\n\t\t\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\t\t\tweekSum \u003d value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d 1\n\t\tweeklySumDict[weekName] \u003d weekSum\n\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\t\n\treturn weeklySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.lowestTwoAvgCongregationsMonth": {
      "binding": {
        "config": {
          "struct": {
            "dec": "toInt({view.params.decMonthTotal}/{view.custom.decTotalCongregations})",
            "feb": "toInt({view.params.febMonthTotal}/{view.custom.febTotalCongregations})",
            "jan": "toInt({view.params.janMonthTotal}/{view.custom.janTotalCongregations})",
            "march": "toInt({view.params.marchMonthTotal}/{view.custom.marchTotalCongregations})",
            "nov": "toInt({view.params.novMonthTotal}/{view.custom.novTotalCongregations})"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\t\n\tallValues \u003d []\n\tallValues.append(value[\u0027nov\u0027])\n\tallValues.append(value[\u0027dec\u0027])\n\tallValues.append(value[\u0027jan\u0027])\n\tallValues.append(value[\u0027feb\u0027])\n\tallValues.append(value[\u0027march\u0027])\n\t\n\tallValues \u003d list(set(allValues))\n\tallValues \u003d sorted(allValues)\n\treturn [allValues[0],allValues[1]]\n\n",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.lowestTwoTotalCongregationsMonth": {
      "binding": {
        "config": {
          "struct": {
            "dec": "{view.custom.decTotalCongregations}",
            "feb": "{view.custom.febTotalCongregations}",
            "jan": "{view.custom.janTotalCongregations}",
            "march": "{view.custom.marchTotalCongregations}",
            "nov": "{view.custom.novTotalCongregations}"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\t\n\tallValues \u003d [value[\u0027nov\u0027],value[\u0027dec\u0027],value[\u0027jan\u0027],value[\u0027feb\u0027],value[\u0027march\u0027]]\n\t\n\tallValues \u003d list(set(allValues))\n\tallValues \u003d sorted(allValues)\n\treturn [allValues[0],allValues[1]]",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.marchDailyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.marchDailyData"
        },
        "transforms": [
          {
            "code": "\tdailySumDict \u003d {\u0027Mon\u0027:0, \u0027Tue\u0027:0, \u0027Wed\u0027:0, \u0027Thu\u0027:0, \u0027Fri\u0027:0, \u0027Sat\u0027:0, \u0027Sun\u0027:0, \u0027noOfMon\u0027:0,\u0027noOfTue\u0027:0,\u0027noOfWed\u0027:0,\u0027noOfThu\u0027:0,\u0027noOfFri\u0027:0,\u0027noOfSat\u0027:0,\u0027noOfSun\u0027:0}\n\tmonTotal \u003d 0\n\ttueTotal \u003d 0\n\twedTotal \u003d 0\n\tthuTotal \u003d 0\n\tfriTotal \u003d 0\n\tsatTotal \u003d 0\n\tsunTotal \u003d 0\n\tnoOfMon \u003d 0\n\tnoOfTue \u003d 0\n\tnoOfWed \u003d 0\n\tnoOfThu \u003d 0\n\tnoOfFri \u003d 0\n\tnoOfSat \u003d 0\n\tnoOfSun \u003d 0\n\t## in a dataset calculate total beds for each day and total no of each days in a month\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tfor i in range(value.getRowCount()):\n\t\t\tif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 1:\n\t\t\t\tsunTotal \u003d sunTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSun \u003d noOfSun + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 2:\n\t\t\t\tmonTotal \u003d monTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfMon \u003d noOfMon + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 3:\n\t\t\t\ttueTotal \u003d tueTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfTue \u003d noOfTue + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 4:\n\t\t\t\twedTotal \u003d wedTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027)\n\t\t\t\tnoOfWed \u003d noOfWed + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 5:\n\t\t\t\tthuTotal \u003d thuTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfThu \u003d noOfThu + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 6:\n\t\t\t\tfriTotal \u003d friTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfFri \u003d noOfFri + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 7:\n\t\t\t\tsatTotal \u003d satTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSat \u003d noOfSat + 1\n\t\t## assign teh values\n\t\tdailySumDict[\u0027Mon\u0027] \u003d monTotal\n\t\tdailySumDict[\u0027Tue\u0027] \u003d tueTotal\n\t\tdailySumDict[\u0027Wed\u0027] \u003d wedTotal\n\t\tdailySumDict[\u0027Thu\u0027] \u003d thuTotal\n\t\tdailySumDict[\u0027Fri\u0027] \u003d friTotal\n\t\tdailySumDict[\u0027Sat\u0027] \u003d satTotal\n\t\tdailySumDict[\u0027Sun\u0027] \u003d sunTotal\n\t\tdailySumDict[\u0027noOfMon\u0027] \u003d noOfMon\n\t\tdailySumDict[\u0027noOfTue\u0027] \u003d noOfTue\n\t\tdailySumDict[\u0027noOfWed\u0027] \u003d noOfWed\n\t\tdailySumDict[\u0027noOfThu\u0027] \u003d noOfThu\n\t\tdailySumDict[\u0027noOfFri\u0027] \u003d noOfFri\n\t\tdailySumDict[\u0027noOfSat\u0027] \u003d noOfSat\n\t\tdailySumDict[\u0027noOfSun\u0027] \u003d noOfSun\n\treturn dailySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.marchDailyData": {
      "binding": {
        "config": {
          "parameters": {
            "month": "3",
            "seasonId": "{view.params.seasonId}"
          },
          "queryPath": "WinterShelter/Overview/GetScheduledVsCheckedIn"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.marchTotalCongregations": {
      "binding": {
        "config": {
          "expression": "{view.custom.marchDailyCongregations.Mon} + \r\n{view.custom.marchDailyCongregations.Tue} + \r\n{view.custom.marchDailyCongregations.Wed} + \r\n{view.custom.marchDailyCongregations.Thu} + \r\n{view.custom.marchDailyCongregations.Fri} +\r\n{view.custom.marchDailyCongregations.Sat} +\r\n{view.custom.marchDailyCongregations.Sun}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.marchWeeklyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.marchDailyData"
        },
        "transforms": [
          {
            "code": "\tweeklySumDict \u003d {\u0027Week1\u0027:0,\u0027Week1Days\u0027:0,\u0027Week2\u0027:0,\u0027Week2Days\u0027:0,\u0027Week3\u0027:0,\u0027Week3Days\u0027:0,\u0027Week4\u0027:0,\u0027Week4Days\u0027:0,\u0027Week5\u0027:0,\u0027Week5Days\u0027:0}\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tcurrentWeek \u003d int(value.getValueAt(0,\u0027weekNumber\u0027))\n\t\tweekNo \u003d 1\n\t\tweekSum \u003d 0\t\n\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\tnoOfDaysInWeek \u003d 0\n\t\tfor i in range(value.getRowCount()):\n\t\t\t\n\t\t\tif int(value.getValueAt(i,\u0027weekNumber\u0027)) \u003d\u003d currentWeek:\n\t\t\t\tweekSum \u003d weekSum + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d noOfDaysInWeek + 1\n\t\t\telse:\n\t\t\t\tweeklySumDict[weekName] \u003d weekSum ## add prev week\u0027s data \n\t\t\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\n\t\t\t\t\t\n\t\t\t\tcurrentWeek \u003d int(value.getValueAt(i,\u0027weekNumber\u0027))\n\t\t\t\tweekNo \u003d weekNo + 1\n\t\t\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\t\t\tweekSum \u003d value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d 1\n\t\tweeklySumDict[weekName] \u003d weekSum\n\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\t\n\treturn weeklySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.minimumBedsThreshold": {
      "binding": {
        "config": {
          "parameters": {
            "settingName": "\u0027minimin_beds_threshold\u0027"
          },
          "queryPath": "WinterShelterGlobal/Settings/GetOneSettingValue"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.novDailyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.novDailyData"
        },
        "transforms": [
          {
            "code": "\tdailySumDict \u003d {\u0027Mon\u0027:0, \u0027Tue\u0027:0, \u0027Wed\u0027:0, \u0027Thu\u0027:0, \u0027Fri\u0027:0, \u0027Sat\u0027:0, \u0027Sun\u0027:0, \u0027noOfMon\u0027:0,\u0027noOfTue\u0027:0,\u0027noOfWed\u0027:0,\u0027noOfThu\u0027:0,\u0027noOfFri\u0027:0,\u0027noOfSat\u0027:0,\u0027noOfSun\u0027:0}\n\tmonTotal \u003d 0\n\ttueTotal \u003d 0\n\twedTotal \u003d 0\n\tthuTotal \u003d 0\n\tfriTotal \u003d 0\n\tsatTotal \u003d 0\n\tsunTotal \u003d 0\n\tnoOfMon \u003d 0\n\tnoOfTue \u003d 0\n\tnoOfWed \u003d 0\n\tnoOfThu \u003d 0\n\tnoOfFri \u003d 0\n\tnoOfSat \u003d 0\n\tnoOfSun \u003d 0\n\t## in a dataset calculate total beds for each day and total no of each days in a month\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tfor i in range(value.getRowCount()):\n\t\t\tif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 1:\n\t\t\t\tsunTotal \u003d sunTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSun \u003d noOfSun + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 2:\n\t\t\t\tmonTotal \u003d monTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfMon \u003d noOfMon + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 3:\n\t\t\t\ttueTotal \u003d tueTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfTue \u003d noOfTue + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 4:\n\t\t\t\twedTotal \u003d wedTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027)\n\t\t\t\tnoOfWed \u003d noOfWed + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 5:\n\t\t\t\tthuTotal \u003d thuTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfThu \u003d noOfThu + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 6:\n\t\t\t\tfriTotal \u003d friTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfFri \u003d noOfFri + 1\n\t\t\telif value.getValueAt(i,\u0027dayNumber\u0027) \u003d\u003d 7:\n\t\t\t\tsatTotal \u003d satTotal + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfSat \u003d noOfSat + 1\n\t\t## assign teh values\n\t\tdailySumDict[\u0027Mon\u0027] \u003d monTotal\n\t\tdailySumDict[\u0027Tue\u0027] \u003d tueTotal\n\t\tdailySumDict[\u0027Wed\u0027] \u003d wedTotal\n\t\tdailySumDict[\u0027Thu\u0027] \u003d thuTotal\n\t\tdailySumDict[\u0027Fri\u0027] \u003d friTotal\n\t\tdailySumDict[\u0027Sat\u0027] \u003d satTotal\n\t\tdailySumDict[\u0027Sun\u0027] \u003d sunTotal\n\t\tdailySumDict[\u0027noOfMon\u0027] \u003d noOfMon\n\t\tdailySumDict[\u0027noOfTue\u0027] \u003d noOfTue\n\t\tdailySumDict[\u0027noOfWed\u0027] \u003d noOfWed\n\t\tdailySumDict[\u0027noOfThu\u0027] \u003d noOfThu\n\t\tdailySumDict[\u0027noOfFri\u0027] \u003d noOfFri\n\t\tdailySumDict[\u0027noOfSat\u0027] \u003d noOfSat\n\t\tdailySumDict[\u0027noOfSun\u0027] \u003d noOfSun\n\treturn dailySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.novDailyData": {
      "binding": {
        "config": {
          "parameters": {
            "month": "11",
            "seasonId": "{view.params.seasonId}"
          },
          "queryPath": "WinterShelter/Overview/GetScheduledVsCheckedIn"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.novTotalCongregations": {
      "binding": {
        "config": {
          "expression": "{view.custom.novDailyCongregations.Mon} + \r\n{view.custom.novDailyCongregations.Tue} + \r\n{view.custom.novDailyCongregations.Wed} + \r\n{view.custom.novDailyCongregations.Thu} + \r\n{view.custom.novDailyCongregations.Fri} +\r\n{view.custom.novDailyCongregations.Sat} +\r\n{view.custom.novDailyCongregations.Sun}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.novWeeklyCongregations": {
      "binding": {
        "config": {
          "path": "view.custom.novDailyData"
        },
        "transforms": [
          {
            "code": "\tweeklySumDict \u003d {\u0027Week1\u0027:0,\u0027Week1Days\u0027:0,\u0027Week2\u0027:0,\u0027Week2Days\u0027:0,\u0027Week3\u0027:0,\u0027Week3Days\u0027:0,\u0027Week4\u0027:0,\u0027Week4Days\u0027:0,\u0027Week5\u0027:0,\u0027Week5Days\u0027:0}\n\tif value is not None and value.getRowCount() \u003e 0:\n\t\tcurrentWeek \u003d int(value.getValueAt(0,\u0027weekNumber\u0027))\n\t\tweekNo \u003d 1\n\t\tweekSum \u003d 0\t\n\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\tnoOfDaysInWeek \u003d 0\n\t\tfor i in range(value.getRowCount()):\n\t\t\t\n\t\t\tif int(value.getValueAt(i,\u0027weekNumber\u0027)) \u003d\u003d currentWeek:\n\t\t\t\tweekSum \u003d weekSum + value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d noOfDaysInWeek + 1\n\t\t\telse:\n\t\t\t\tweeklySumDict[weekName] \u003d weekSum ## add prev week\u0027s data \n\t\t\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\n\t\t\t\t\t\n\t\t\t\tcurrentWeek \u003d int(value.getValueAt(i,\u0027weekNumber\u0027))\n\t\t\t\tweekNo \u003d weekNo + 1\n\t\t\t\tweekName \u003d \u0027Week\u0027+str(weekNo)\n\t\t\t\tweekSum \u003d value.getValueAt(i,\u0027noOfCongregationsNonUnique\u0027) \n\t\t\t\tnoOfDaysInWeek \u003d 1\n\t\tweeklySumDict[weekName] \u003d weekSum\n\t\tweeklySumDict[weekName+\u0027Days\u0027] \u003dnoOfDaysInWeek\t\n\treturn weeklySumDict",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.seasonName": {
      "binding": {
        "config": {
          "parameters": {
            "id": "{view.params.seasonId}"
          },
          "queryPath": "WinterShelterGlobal/Registration/getSeasonBySeasonId"
        },
        "transforms": [
          {
            "code": "\tseasonName \u003d \"\"\n\tif value is not None and value.getRowCount() \u003e 0 and value.getValueAt(0,0) !\u003d None:\n\t\tseasonName \u003d value.getValueAt(0,0)\n\treturn seasonName",
            "type": "script"
          }
        ],
        "type": "query"
      },
      "persistent": true
    },
    "params.decDayTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.decMonthTotal": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.decWeekTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.febDayTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.febMonthTotal": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.febWeekTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.janDayTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.janMonthTotal": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.janWeekTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.marchDayTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.marchMonthTotal": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.marchWeekTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.novDayTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.novMonthTotal": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.novWeekTotals": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.seasonId": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.totalDaysDec": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.totalDaysFeb": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.totalDaysJan": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.totalDaysMarch": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.totalDaysNov": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 400,
      "width": 500
    },
    "loading": {
      "mode": "blocking"
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "30px",
              "display": false
            },
            "props": {
              "style": {
                "classes": "KPIs/KPI_Title",
                "paddingLeft": "10px"
              },
              "text": "TOTAL BEDS"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "month"
                },
                "position": {
                  "basis": "50%",
                  "shrink": 0
                },
                "props": {
                  "params": {
                    "options": {
                      "$": [
                        "ds",
                        192,
                        1705473627515
                      ],
                      "$columns": [
                        {
                          "data": [
                            "Total Beds (Week)",
                            "Total Beds (Day)",
                            "Avg Beds / Night (Week)",
                            "Avg Beds / Night (Day)",
                            "Avg Beds / Congregation (Week)",
                            "Avg Beds / Congregation (Day)",
                            "Total Congregations (Week)",
                            "Total Congregations (Day)"
                          ],
                          "name": "label",
                          "type": "String"
                        },
                        {
                          "data": [
                            "Total Beds (Week)",
                            "Total Beds (Day)",
                            "Avg Beds / Night (Week)",
                            "Avg Beds / Night (Day)",
                            "Avg Beds / Congregation (Week)",
                            "Avg Beds / Congregation (Day)",
                            "Total Congregations (Week)",
                            "Total Congregations (Day)"
                          ],
                          "name": "value",
                          "type": "String"
                        }
                      ]
                    },
                    "placeholder": "Total Beds (Week)",
                    "selection": "Total Beds (Week)"
                  },
                  "path": "1_TEMPLATES/Filtering/Conditionals/Conditional_SingleDropDown_NoClear_TealBlue",
                  "style": {
                    "classes": "Filter/Filter_Container"
                  }
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "filler"
                },
                "position": {
                  "basis": "200px",
                  "grow": 1
                },
                "type": "ia.container.flex"
              },
              {
                "meta": {
                  "name": "TableToExcel"
                },
                "position": {
                  "basis": "30px",
                  "shrink": 0
                },
                "props": {
                  "params": {
                    "messageType": "WS_TotalBeds"
                  },
                  "path": "1_TEMPLATES/Tables/TableToExcelCustomMessageType",
                  "style": {
                    "marginRight": "1px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Menu"
            },
            "position": {
              "basis": "30px",
              "shrink": 0
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "meta": {
                      "name": "header"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week1"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "props": {
                      "params": {
                        "label": "Week1"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week2"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "props": {
                      "params": {
                        "label": "Week2"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week3"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "props": {
                      "params": {
                        "label": "Week3"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week4"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "props": {
                      "params": {
                        "label": "Week4"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week5"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "props": {
                      "params": {
                        "label": "Week5"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "WeekTitles"
                },
                "position": {
                  "basis": "15%"
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "header"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.novMonthTotal} \u003c ({view.params.totalDaysNov} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", ({view.params.novMonthTotal} \u003c ({view.params.totalDaysNov} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Congregation (Week)\", false,\r\n\"Total Congregations (Week)\", ({view.custom.novTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.novTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label2": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.novMonthTotal},\r\n\"Avg Beds / Night (Week)\", {view.params.novMonthTotal}/{view.params.totalDaysNov},\r\n\"Avg Beds / Congregation (Week)\", {view.params.novMonthTotal}/{view.custom.novTotalCongregations},\r\n\"Total Congregations (Week)\", {view.custom.novTotalCongregations},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label1": "November"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week1"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.novWeekTotals.Week1}\u003c({view.params.novWeekTotals.Week1Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.novWeekTotals.Week1}/{view.params.novWeekTotals.Week1Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\",({view.custom.novWeeklyCongregations.Week1} \u003d 0)|| ({view.custom.novWeeklyCongregations.Week1} !\u003d0 \u0026\u0026 (toInt( {view.params.novWeekTotals.Week1}/{view.custom.novWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.novWeekTotals.Week1}/{view.custom.novWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.novWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.novWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.novWeekTotals.Week1},\r\n\"Avg Beds / Night (Week)\", {view.params.novWeekTotals.Week1}/{view.params.novWeekTotals.Week1Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.novWeeklyCongregations.Week1} \u003d0, 0, {view.params.novWeekTotals.Week1}/{view.custom.novWeeklyCongregations.Week1}),\r\n\"Total Congregations (Week)\", {view.custom.novWeeklyCongregations.Week1},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week2"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.novWeekTotals.Week2}\u003c({view.params.novWeekTotals.Week2Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.novWeekTotals.Week2}/{view.params.novWeekTotals.Week2Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.novWeeklyCongregations.Week2} \u003d 0)|| ({view.custom.novWeeklyCongregations.Week2} !\u003d0 \u0026\u0026 (toInt( {view.params.novWeekTotals.Week2}/{view.custom.novWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.novWeekTotals.Week2}/{view.custom.novWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.novWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.novWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.novWeekTotals.Week2},\r\n\"Avg Beds / Night (Week)\", {view.params.novWeekTotals.Week2}/{view.params.novWeekTotals.Week2Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.novWeeklyCongregations.Week2} \u003d0, 0, {view.params.novWeekTotals.Week2}/{view.custom.novWeeklyCongregations.Week2}),\r\n\"Total Congregations (Week)\", {view.custom.novWeeklyCongregations.Week2},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week3"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.novWeekTotals.Week3}\u003c({view.params.novWeekTotals.Week3Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.novWeekTotals.Week3}/{view.params.novWeekTotals.Week3Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.novWeeklyCongregations.Week3} \u003d 0)|| ({view.custom.novWeeklyCongregations.Week3} !\u003d0 \u0026\u0026 (toInt( {view.params.novWeekTotals.Week3}/{view.custom.novWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.novWeekTotals.Week3}/{view.custom.novWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.novWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.novWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.novWeekTotals.Week3},\r\n\"Avg Beds / Night (Week)\", {view.params.novWeekTotals.Week3}/{view.params.novWeekTotals.Week3Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.novWeeklyCongregations.Week3} \u003d0, 0, {view.params.novWeekTotals.Week3}/{view.custom.novWeeklyCongregations.Week3}),\r\n\"Total Congregations (Week)\", {view.custom.novWeeklyCongregations.Week3},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week4"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.novWeekTotals.Week4}\u003c({view.params.novWeekTotals.Week4Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.novWeekTotals.Week4}/{view.params.novWeekTotals.Week4Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.novWeeklyCongregations.Week4} \u003d 0)|| ({view.custom.novWeeklyCongregations.Week4} !\u003d0 \u0026\u0026 (toInt( {view.params.novWeekTotals.Week4}/{view.custom.novWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.novWeekTotals.Week4}/{view.custom.novWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.novWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.novWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.novWeekTotals.Week4},\r\n\"Avg Beds / Night (Week)\", {view.params.novWeekTotals.Week4}/{view.params.novWeekTotals.Week4Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.novWeeklyCongregations.Week4} \u003d0, 0, {view.params.novWeekTotals.Week4}/{view.custom.novWeeklyCongregations.Week4}),\r\n\"Total Congregations (Week)\", {view.custom.novWeeklyCongregations.Week4},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week5"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.novWeekTotals.Week5}\u003c({view.params.novWeekTotals.Week5Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.novWeekTotals.Week5}/{view.params.novWeekTotals.Week5Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.novWeeklyCongregations.Week5} \u003d 0)|| ({view.custom.novWeeklyCongregations.Week5} !\u003d0 \u0026\u0026 (toInt( {view.params.novWeekTotals.Week5}/{view.custom.novWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.novWeekTotals.Week5}/{view.custom.novWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.novWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.novWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.novWeekTotals.Week5},\r\n\"Avg Beds / Night (Week)\", {view.params.novWeekTotals.Week5}/{view.params.novWeekTotals.Week5Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.novWeeklyCongregations.Week5} \u003d0, 0, {view.params.novWeekTotals.Week5}/{view.custom.novWeeklyCongregations.Week5}),\r\n\"Total Congregations (Week)\", {view.custom.novWeeklyCongregations.Week5},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "November"
                },
                "position": {
                  "basis": "17%"
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "header"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.decMonthTotal} \u003c ({view.params.totalDaysDec} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", ({view.params.decMonthTotal} \u003c ({view.params.totalDaysDec} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Congregation (Week)\", false,\r\n\"Total Congregations (Week)\", ({view.custom.decTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.decTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label2": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.decMonthTotal},\r\n\"Avg Beds / Night (Week)\", {view.params.decMonthTotal}/{view.params.totalDaysDec},\r\n\"Avg Beds / Congregation (Week)\", {view.params.decMonthTotal}/{view.custom.decTotalCongregations},\r\n\"Total Congregations (Week)\", {view.custom.decTotalCongregations},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label1": "December"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week1"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.decWeekTotals.Week1}\u003c({view.params.decWeekTotals.Week1Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.decWeekTotals.Week1}/{view.params.decWeekTotals.Week1Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.decWeeklyCongregations.Week1} \u003d 0)|| ({view.custom.decWeeklyCongregations.Week1} !\u003d0 \u0026\u0026 (toInt( {view.params.decWeekTotals.Week1}/{view.custom.decWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.decWeekTotals.Week1}/{view.custom.decWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.decWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.decWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.decWeekTotals.Week1},\r\n\"Avg Beds / Night (Week)\", {view.params.decWeekTotals.Week1}/{view.params.decWeekTotals.Week1Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.decWeeklyCongregations.Week1} \u003d0, 0, {view.params.decWeekTotals.Week1}/{view.custom.decWeeklyCongregations.Week1}),\r\n\"Total Congregations (Week)\", {view.custom.decWeeklyCongregations.Week1},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week2"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.decWeekTotals.Week2}\u003c({view.params.decWeekTotals.Week2Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.decWeekTotals.Week2}/{view.params.decWeekTotals.Week2Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.decWeeklyCongregations.Week2} \u003d 0)|| ({view.custom.decWeeklyCongregations.Week2} !\u003d0 \u0026\u0026 (toInt( {view.params.decWeekTotals.Week2}/{view.custom.decWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.decWeekTotals.Week2}/{view.custom.decWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.decWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.decWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.decWeekTotals.Week2},\r\n\"Avg Beds / Night (Week)\", {view.params.decWeekTotals.Week2}/{view.params.decWeekTotals.Week2Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.decWeeklyCongregations.Week2} \u003d0, 0, {view.params.decWeekTotals.Week2}/{view.custom.decWeeklyCongregations.Week2}),\r\n\"Total Congregations (Week)\", {view.custom.decWeeklyCongregations.Week2},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week3"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.decWeekTotals.Week3}\u003c({view.params.decWeekTotals.Week3Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.decWeekTotals.Week3}/{view.params.decWeekTotals.Week3Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.decWeeklyCongregations.Week3} \u003d 0)|| ({view.custom.decWeeklyCongregations.Week3} !\u003d0 \u0026\u0026 (toInt( {view.params.decWeekTotals.Week3}/{view.custom.decWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.decWeekTotals.Week3}/{view.custom.decWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.decWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.decWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.decWeekTotals.Week3},\r\n\"Avg Beds / Night (Week)\", {view.params.decWeekTotals.Week3}/{view.params.decWeekTotals.Week3Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.decWeeklyCongregations.Week3} \u003d0, 0, {view.params.decWeekTotals.Week3}/{view.custom.decWeeklyCongregations.Week3}),\r\n\"Total Congregations (Week)\", {view.custom.decWeeklyCongregations.Week3},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week4"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.decWeekTotals.Week4}\u003c({view.params.decWeekTotals.Week4Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.decWeekTotals.Week4}/{view.params.decWeekTotals.Week4Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.decWeeklyCongregations.Week4} \u003d 0)|| ({view.custom.decWeeklyCongregations.Week4} !\u003d0 \u0026\u0026 (toInt( {view.params.decWeekTotals.Week4}/{view.custom.decWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.decWeekTotals.Week4}/{view.custom.decWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.decWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.decWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.decWeekTotals.Week4},\r\n\"Avg Beds / Night (Week)\", {view.params.decWeekTotals.Week4}/{view.params.decWeekTotals.Week4Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.decWeeklyCongregations.Week4} \u003d0, 0, {view.params.decWeekTotals.Week4}/{view.custom.decWeeklyCongregations.Week4}),\r\n\"Total Congregations (Week)\", {view.custom.decWeeklyCongregations.Week4},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week5"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.decWeekTotals.Week5}\u003c({view.params.decWeekTotals.Week5Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.decWeekTotals.Week5}/{view.params.decWeekTotals.Week5Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.decWeeklyCongregations.Week5} \u003d 0)|| ({view.custom.decWeeklyCongregations.Week5} !\u003d0 \u0026\u0026 (toInt( {view.params.decWeekTotals.Week5}/{view.custom.decWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.decWeekTotals.Week5}/{view.custom.decWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.decWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.decWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.decWeekTotals.Week5},\r\n\"Avg Beds / Night (Week)\", {view.params.decWeekTotals.Week5}/{view.params.decWeekTotals.Week5Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.decWeeklyCongregations.Week5} \u003d0, 0, {view.params.decWeekTotals.Week5}/{view.custom.decWeeklyCongregations.Week5}),\r\n\"Total Congregations (Week)\", {view.custom.decWeeklyCongregations.Week5},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "December"
                },
                "position": {
                  "basis": "17%"
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "header"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.janMonthTotal} \u003c ({view.params.totalDaysJan} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", ({view.params.janMonthTotal} \u003c ({view.params.totalDaysJan} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Congregation (Week)\", false,\r\n\"Total Congregations (Week)\", ({view.custom.janTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.janTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label2": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.janMonthTotal},\r\n\"Avg Beds / Night (Week)\", {view.params.janMonthTotal}/{view.params.totalDaysJan},\r\n\"Avg Beds / Congregation (Week)\", {view.params.janMonthTotal}/{view.custom.janTotalCongregations},\r\n\"Total Congregations (Week)\", {view.custom.janTotalCongregations},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label1": "January"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week1"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.janWeekTotals.Week1}\u003c({view.params.janWeekTotals.Week1Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.janWeekTotals.Week1}/{view.params.janWeekTotals.Week1Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.janWeeklyCongregations.Week1} \u003d 0)|| ({view.custom.janWeeklyCongregations.Week1} !\u003d0 \u0026\u0026 (toInt( {view.params.janWeekTotals.Week1}/{view.custom.janWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.janWeekTotals.Week1}/{view.custom.janWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.janWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.janWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.janWeekTotals.Week1},\r\n\"Avg Beds / Night (Week)\", {view.params.janWeekTotals.Week1}/{view.params.janWeekTotals.Week1Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.janWeeklyCongregations.Week1} \u003d0, 0, {view.params.janWeekTotals.Week1}/{view.custom.janWeeklyCongregations.Week1}),\r\n\"Total Congregations (Week)\", {view.custom.janWeeklyCongregations.Week1},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week2"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.janWeekTotals.Week2}\u003c({view.params.janWeekTotals.Week2Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.janWeekTotals.Week2}/{view.params.janWeekTotals.Week2Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.janWeeklyCongregations.Week2} \u003d 0)|| ({view.custom.janWeeklyCongregations.Week2} !\u003d0 \u0026\u0026 (toInt( {view.params.janWeekTotals.Week2}/{view.custom.janWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.janWeekTotals.Week2}/{view.custom.janWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.janWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.janWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.janWeekTotals.Week2},\r\n\"Avg Beds / Night (Week)\", {view.params.janWeekTotals.Week2}/{view.params.janWeekTotals.Week2Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.janWeeklyCongregations.Week2} \u003d0, 0, {view.params.janWeekTotals.Week2}/{view.custom.janWeeklyCongregations.Week2}),\r\n\"Total Congregations (Week)\", {view.custom.janWeeklyCongregations.Week2},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week3"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.janWeekTotals.Week3}\u003c({view.params.janWeekTotals.Week3Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.janWeekTotals.Week3}/{view.params.janWeekTotals.Week3Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.janWeeklyCongregations.Week3} \u003d 0)|| ({view.custom.janWeeklyCongregations.Week3} !\u003d0 \u0026\u0026 (toInt( {view.params.janWeekTotals.Week3}/{view.custom.janWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.janWeekTotals.Week3}/{view.custom.janWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.janWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.janWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.janWeekTotals.Week3},\r\n\"Avg Beds / Night (Week)\", {view.params.janWeekTotals.Week3}/{view.params.janWeekTotals.Week3Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.janWeeklyCongregations.Week3} \u003d0, 0, {view.params.janWeekTotals.Week3}/{view.custom.janWeeklyCongregations.Week3}),\r\n\"Total Congregations (Week)\", {view.custom.janWeeklyCongregations.Week3},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week4"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.janWeekTotals.Week4}\u003c({view.params.janWeekTotals.Week4Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.janWeekTotals.Week4}/{view.params.janWeekTotals.Week4Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.janWeeklyCongregations.Week4} \u003d 0)|| ({view.custom.janWeeklyCongregations.Week4} !\u003d0 \u0026\u0026 (toInt( {view.params.janWeekTotals.Week4}/{view.custom.janWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.janWeekTotals.Week4}/{view.custom.janWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.janWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.janWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.janWeekTotals.Week4},\r\n\"Avg Beds / Night (Week)\", {view.params.janWeekTotals.Week4}/{view.params.janWeekTotals.Week4Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.janWeeklyCongregations.Week4} \u003d0, 0, {view.params.janWeekTotals.Week4}/{view.custom.janWeeklyCongregations.Week4}),\r\n\"Total Congregations (Week)\", {view.custom.janWeeklyCongregations.Week4},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week5"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.janWeekTotals.Week5}\u003c({view.params.janWeekTotals.Week5Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.janWeekTotals.Week5}/{view.params.janWeekTotals.Week5Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.janWeeklyCongregations.Week5} \u003d 0)|| ({view.custom.janWeeklyCongregations.Week5} !\u003d0 \u0026\u0026 (toInt( {view.params.janWeekTotals.Week5}/{view.custom.janWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.janWeekTotals.Week5}/{view.custom.janWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.janWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.janWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.janWeekTotals.Week5},\r\n\"Avg Beds / Night (Week)\", {view.params.janWeekTotals.Week5}/{view.params.janWeekTotals.Week5Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.janWeeklyCongregations.Week5} \u003d0, 0, {view.params.janWeekTotals.Week5}/{view.custom.janWeeklyCongregations.Week5}),\r\n\"Total Congregations (Week)\", {view.custom.janWeeklyCongregations.Week5},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "January"
                },
                "position": {
                  "basis": "17%"
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "header"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.febMonthTotal} \u003c ({view.params.totalDaysFeb} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", ({view.params.febMonthTotal} \u003c ({view.params.totalDaysFeb} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Congregation (Week)\", false,\r\n\"Total Congregations (Week)\", ({view.custom.febTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.febTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label2": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.febMonthTotal},\r\n\"Avg Beds / Night (Week)\", {view.params.febMonthTotal}/{view.params.totalDaysFeb},\r\n\"Avg Beds / Congregation (Week)\", {view.params.febMonthTotal}/{view.custom.febTotalCongregations},\r\n\"Total Congregations (Week)\", {view.custom.febTotalCongregations},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label1": "February"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week1"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.febWeekTotals.Week1}\u003c({view.params.febWeekTotals.Week1Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.febWeekTotals.Week1}/{view.params.febWeekTotals.Week1Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.febWeeklyCongregations.Week1} \u003d 0)|| ({view.custom.febWeeklyCongregations.Week1} !\u003d0 \u0026\u0026 (toInt( {view.params.febWeekTotals.Week1}/{view.custom.febWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.febWeekTotals.Week1}/{view.custom.febWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.febWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.febWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.febWeekTotals.Week1},\r\n\"Avg Beds / Night (Week)\", {view.params.febWeekTotals.Week1}/{view.params.febWeekTotals.Week1Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.febWeeklyCongregations.Week1} \u003d0, 0, {view.params.febWeekTotals.Week1}/{view.custom.febWeeklyCongregations.Week1}),\r\n\"Total Congregations (Week)\", {view.custom.febWeeklyCongregations.Week1},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week2"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.febWeekTotals.Week2}\u003c({view.params.febWeekTotals.Week2Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.febWeekTotals.Week2}/{view.params.febWeekTotals.Week2Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.febWeeklyCongregations.Week2} \u003d 0)|| ({view.custom.febWeeklyCongregations.Week2} !\u003d0 \u0026\u0026 (toInt( {view.params.febWeekTotals.Week2}/{view.custom.febWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.febWeekTotals.Week2}/{view.custom.febWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.febWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.febWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.febWeekTotals.Week2},\r\n\"Avg Beds / Night (Week)\", {view.params.febWeekTotals.Week2}/{view.params.febWeekTotals.Week2Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.febWeeklyCongregations.Week2} \u003d0, 0, {view.params.febWeekTotals.Week2}/{view.custom.febWeeklyCongregations.Week2}),\r\n\"Total Congregations (Week)\", {view.custom.febWeeklyCongregations.Week2},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week3"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.febWeekTotals.Week3}\u003c({view.params.febWeekTotals.Week3Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.febWeekTotals.Week3}/{view.params.febWeekTotals.Week3Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.febWeeklyCongregations.Week3} \u003d 0)|| ({view.custom.febWeeklyCongregations.Week3} !\u003d0 \u0026\u0026 (toInt( {view.params.febWeekTotals.Week3}/{view.custom.febWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.febWeekTotals.Week3}/{view.custom.febWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.febWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.febWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.febWeekTotals.Week3},\r\n\"Avg Beds / Night (Week)\", {view.params.febWeekTotals.Week3}/{view.params.febWeekTotals.Week3Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.febWeeklyCongregations.Week3} \u003d0, 0, {view.params.febWeekTotals.Week3}/{view.custom.febWeeklyCongregations.Week3}),\r\n\"Total Congregations (Week)\", {view.custom.febWeeklyCongregations.Week3},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week4"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.febWeekTotals.Week4}\u003c({view.params.febWeekTotals.Week4Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.febWeekTotals.Week4}/{view.params.febWeekTotals.Week4Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.febWeeklyCongregations.Week4} \u003d 0)|| ({view.custom.febWeeklyCongregations.Week4} !\u003d0 \u0026\u0026 (toInt( {view.params.febWeekTotals.Week4}/{view.custom.febWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.febWeekTotals.Week4}/{view.custom.febWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.febWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.febWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.febWeekTotals.Week4},\r\n\"Avg Beds / Night (Week)\", {view.params.febWeekTotals.Week4}/{view.params.febWeekTotals.Week4Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.febWeeklyCongregations.Week4} \u003d0, 0, {view.params.febWeekTotals.Week4}/{view.custom.febWeeklyCongregations.Week4}),\r\n\"Total Congregations (Week)\", {view.custom.febWeeklyCongregations.Week4},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week5"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.febWeekTotals.Week5}\u003c({view.params.febWeekTotals.Week5Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.febWeekTotals.Week5}/{view.params.febWeekTotals.Week5Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.febWeeklyCongregations.Week5} \u003d 0)|| ({view.custom.febWeeklyCongregations.Week5} !\u003d0 \u0026\u0026 (toInt( {view.params.febWeekTotals.Week5}/{view.custom.febWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.febWeekTotals.Week5}/{view.custom.febWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.febWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.febWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.febWeekTotals.Week5},\r\n\"Avg Beds / Night (Week)\", {view.params.febWeekTotals.Week5}/{view.params.febWeekTotals.Week5Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.febWeeklyCongregations.Week5} \u003d0, 0, {view.params.febWeekTotals.Week5}/{view.custom.febWeeklyCongregations.Week5}),\r\n\"Total Congregations (Week)\", {view.custom.febWeeklyCongregations.Week5},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "February"
                },
                "position": {
                  "basis": "17%"
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "header"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.marchMonthTotal} \u003c ({view.params.totalDaysMarch} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", ({view.params.marchMonthTotal} \u003c ({view.params.totalDaysMarch} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Congregation (Week)\", false,\r\n\"Total Congregations (Week)\", ({view.custom.marchTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.marchTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label2": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.marchMonthTotal},\r\n\"Avg Beds / Night (Week)\", {view.params.marchMonthTotal}/{view.params.totalDaysMarch},\r\n\"Avg Beds / Congregation (Week)\", {view.params.marchMonthTotal}/{view.custom.marchTotalCongregations},\r\n\"Total Congregations (Week)\", {view.custom.marchTotalCongregations},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label1": "March"
                      },
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week1"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.marchWeekTotals.Week1}\u003c({view.params.marchWeekTotals.Week1Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.marchWeekTotals.Week1}/{view.params.marchWeekTotals.Week1Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.marchWeeklyCongregations.Week1} \u003d 0)|| ({view.custom.marchWeeklyCongregations.Week1} !\u003d0 \u0026\u0026 (toInt( {view.params.marchWeekTotals.Week1}/{view.custom.marchWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.marchWeekTotals.Week1}/{view.custom.marchWeeklyCongregations.Week1})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.marchWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.marchWeeklyCongregations.Week1} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.marchWeekTotals.Week1},\r\n\"Avg Beds / Night (Week)\", {view.params.marchWeekTotals.Week1}/{view.params.marchWeekTotals.Week1Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.marchWeeklyCongregations.Week1} \u003d0, 0, {view.params.marchWeekTotals.Week1}/{view.custom.marchWeeklyCongregations.Week1}),\r\n\"Total Congregations (Week)\", {view.custom.marchWeeklyCongregations.Week1},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week2"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.marchWeekTotals.Week2}\u003c({view.params.marchWeekTotals.Week2Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.marchWeekTotals.Week2}/{view.params.marchWeekTotals.Week2Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.marchWeeklyCongregations.Week2} \u003d 0)|| ({view.custom.marchWeeklyCongregations.Week2} !\u003d0 \u0026\u0026 (toInt( {view.params.marchWeekTotals.Week2}/{view.custom.marchWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.marchWeekTotals.Week2}/{view.custom.marchWeeklyCongregations.Week2})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.marchWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.marchWeeklyCongregations.Week2} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.marchWeekTotals.Week2},\r\n\"Avg Beds / Night (Week)\", {view.params.marchWeekTotals.Week2}/{view.params.marchWeekTotals.Week2Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.marchWeeklyCongregations.Week2} \u003d0, 0, {view.params.marchWeekTotals.Week2}/{view.custom.marchWeeklyCongregations.Week2}),\r\n\"Total Congregations (Week)\", {view.custom.marchWeeklyCongregations.Week2},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week3"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.marchWeekTotals.Week3}\u003c({view.params.marchWeekTotals.Week3Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.marchWeekTotals.Week3}/{view.params.marchWeekTotals.Week3Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.marchWeeklyCongregations.Week3} \u003d 0)|| ({view.custom.marchWeeklyCongregations.Week3} !\u003d0 \u0026\u0026 (toInt( {view.params.marchWeekTotals.Week3}/{view.custom.marchWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.marchWeekTotals.Week3}/{view.custom.marchWeeklyCongregations.Week3})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.marchWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.marchWeeklyCongregations.Week3} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.marchWeekTotals.Week3},\r\n\"Avg Beds / Night (Week)\", {view.params.marchWeekTotals.Week3}/{view.params.marchWeekTotals.Week3Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.marchWeeklyCongregations.Week3} \u003d0, 0, {view.params.marchWeekTotals.Week3}/{view.custom.marchWeeklyCongregations.Week3}),\r\n\"Total Congregations (Week)\", {view.custom.marchWeeklyCongregations.Week3},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week4"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.marchWeekTotals.Week4}\u003c({view.params.marchWeekTotals.Week4Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.marchWeekTotals.Week4}/{view.params.marchWeekTotals.Week4Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.marchWeeklyCongregations.Week4} \u003d 0)|| ({view.custom.marchWeeklyCongregations.Week4} !\u003d0 \u0026\u0026 (toInt( {view.params.marchWeekTotals.Week4}/{view.custom.marchWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.marchWeekTotals.Week4}/{view.custom.marchWeeklyCongregations.Week4})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.marchWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.marchWeeklyCongregations.Week4} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.marchWeekTotals.Week4},\r\n\"Avg Beds / Night (Week)\", {view.params.marchWeekTotals.Week4}/{view.params.marchWeekTotals.Week4Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.marchWeeklyCongregations.Week4} \u003d0, 0, {view.params.marchWeekTotals.Week4}/{view.custom.marchWeeklyCongregations.Week4}),\r\n\"Total Congregations (Week)\", {view.custom.marchWeeklyCongregations.Week4},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Week5"
                    },
                    "position": {
                      "basis": "320px"
                    },
                    "propConfig": {
                      "props.params.belowThreshold": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",({view.params.marchWeekTotals.Week5}\u003c({view.params.marchWeekTotals.Week5Days} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Week)\", (({view.params.marchWeekTotals.Week5}/{view.params.marchWeekTotals.Week5Days} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Week)\", ({view.custom.marchWeeklyCongregations.Week5} \u003d 0)|| ({view.custom.marchWeeklyCongregations.Week5} !\u003d0 \u0026\u0026 (toInt( {view.params.marchWeekTotals.Week5}/{view.custom.marchWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[0]}|| toInt( {view.params.marchWeekTotals.Week5}/{view.custom.marchWeeklyCongregations.Week5})\u003d{..../Grid_Week.custom.lowest2AvgCongregationsWeek[1]})),\r\n\"Total Congregations (Week)\", ({view.custom.marchWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[0]} || {view.custom.marchWeeklyCongregations.Week5} \u003d {..../Grid_Week.custom.lowest2TotalCongregationsWeek[1]}),\r\nNone)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.label": {
                        "binding": {
                          "config": {
                            "expression": "case({..../Menu/month.props.params.selection},\"Total Beds (Week)\",{view.params.marchWeekTotals.Week5},\r\n\"Avg Beds / Night (Week)\", {view.params.marchWeekTotals.Week5}/{view.params.marchWeekTotals.Week5Days},\r\n\"Avg Beds / Congregation (Week)\", if({view.custom.marchWeeklyCongregations.Week5} \u003d0, 0, {view.params.marchWeekTotals.Week5}/{view.custom.marchWeeklyCongregations.Week5}),\r\n\"Total Congregations (Week)\", {view.custom.marchWeeklyCongregations.Week5},\r\nNone)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "March"
                },
                "position": {
                  "basis": "17%"
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Grid_Week"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "propConfig": {
              "custom.lowest2AvgCongregationsWeek": {
                "binding": {
                  "config": {
                    "struct": {
                      "dec": "{view.custom.decWeeklyCongregations}",
                      "feb": "{view.custom.febWeeklyCongregations}",
                      "jan": "{view.custom.janWeeklyCongregations}",
                      "march": "{view.custom.marchWeeklyCongregations}",
                      "nov": "{view.custom.novWeeklyCongregations}"
                    },
                    "waitOnAll": true
                  },
                  "transforms": [
                    {
                      "code": "\tkeyNames \u003d [\u0027nov\u0027,\u0027dec\u0027,\u0027jan\u0027,\u0027feb\u0027,\u0027march\u0027]\n\ttotalWeeklyBeds \u003d {}\n\ttotalWeeklyBeds[\u0027nov\u0027] \u003d self.view.params.novWeekTotals\n\ttotalWeeklyBeds[\u0027dec\u0027] \u003d self.view.params.decWeekTotals\n\ttotalWeeklyBeds[\u0027jan\u0027] \u003d self.view.params.janWeekTotals\n\ttotalWeeklyBeds[\u0027feb\u0027] \u003d self.view.params.febWeekTotals\n\ttotalWeeklyBeds[\u0027march\u0027] \u003d self.view.params.marchWeekTotals\n\tallValues \u003d []\n\tfor key in keyNames:\n\t\tallValues.append((totalWeeklyBeds[key].Week1/value[key].Week1))\n\t\tallValues.append((totalWeeklyBeds[key].Week2/value[key].Week2))\n\t\tallValues.append((totalWeeklyBeds[key].Week3/value[key].Week3))\n\t\tallValues.append((totalWeeklyBeds[key].Week4/value[key].Week4))\n\t\tallValues.append((totalWeeklyBeds[key].Week5/value[key].Week5))\n\tallValues \u003d list(set(allValues))\n\tallValues \u003d sorted(allValues)\n\treturn [allValues[0],allValues[1]]\n\n",
                      "type": "script"
                    }
                  ],
                  "type": "expr-struct"
                }
              },
              "custom.lowest2TotalCongregationsWeek": {
                "binding": {
                  "config": {
                    "struct": {
                      "dec": "{view.custom.decWeeklyCongregations}",
                      "feb": "{view.custom.febWeeklyCongregations}",
                      "jan": "{view.custom.janWeeklyCongregations}",
                      "march": "{view.custom.marchWeeklyCongregations}",
                      "nov": "{view.custom.novWeeklyCongregations}"
                    },
                    "waitOnAll": true
                  },
                  "transforms": [
                    {
                      "code": "\tkeyNames \u003d [\u0027nov\u0027,\u0027dec\u0027,\u0027jan\u0027,\u0027feb\u0027,\u0027march\u0027]\n\tallValues \u003d []\n\tfor key in keyNames:\n\t\tallValues.append(value[key].Week1)\n\t\tallValues.append(value[key].Week2)\n\t\tallValues.append(value[key].Week3)\n\t\tallValues.append(value[key].Week4)\n\t\tallValues.append(value[key].Week5)\n\tallValues \u003d list(set(allValues))\n\tallValues \u003d sorted(allValues)\n\treturn [allValues[0],allValues[1]]",
                      "type": "script"
                    }
                  ],
                  "type": "expr-struct"
                }
              },
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{../Menu/month.props.params.selection}"
                  },
                  "transforms": [
                    {
                      "code": "\tif \u0027(Week)\u0027 in str(value):\n\t\treturn True\n\telse:\n\t\treturn False",
                      "type": "script"
                    }
                  ],
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "borderLeftColor": "#D5D5D5",
                "borderLeftStyle": "solid",
                "borderLeftWidth": 1,
                "borderTopColor": "#D5D5D5",
                "borderTopStyle": "solid",
                "borderTopWidth": 1,
                "marginBottom": "0px",
                "marginLeft": "0px",
                "marginRight": "0px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "header"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "props": {
                          "params": {
                            "belowThreshold": false,
                            "label": ""
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Mon"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "props": {
                          "params": {
                            "label": "Mon"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Tue"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "props": {
                          "params": {
                            "label": "Tue"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Wed"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "props": {
                          "params": {
                            "label": "Wed"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Thu"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "props": {
                          "params": {
                            "label": "Thu"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Fri"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "props": {
                          "params": {
                            "label": "Fri"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sat"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "props": {
                          "params": {
                            "label": "Sat"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sun"
                        },
                        "position": {
                          "basis": "40px",
                          "shrink": 0
                        },
                        "props": {
                          "params": {
                            "label": "Sun"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabelText"
                        },
                        "type": "ia.display.view"
                      }
                    ],
                    "meta": {
                      "name": "DayTitles"
                    },
                    "position": {
                      "basis": "15%",
                      "grow": 1
                    },
                    "props": {
                      "direction": "column",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "header"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novMonthTotal}\u003c({view.params.totalDaysNov} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novMonthTotal}/{view.params.totalDaysNov} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", false,\r\n\"Total Congregations (Day)\", ({view.custom.novTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.novTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label2": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novMonthTotal},\r\n\"Avg Beds / Night (Day)\", {view.params.novMonthTotal}/{view.params.totalDaysNov},\r\n\"Avg Beds / Congregation (Day)\", {view.params.novMonthTotal}/{view.custom.novTotalCongregations},\r\n\"Total Congregations (Day)\", {view.custom.novTotalCongregations},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "params": {
                            "label1": "November"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Mon"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novDayTotals.Mon}\u003c({view.params.novDayTotals.noOfMon} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novDayTotals.Mon}/{view.params.novDayTotals.noOfMon} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.novDailyCongregations.Mon} \u003d 0)|| ({view.custom.novDailyCongregations.Mon} !\u003d0 \u0026\u0026 (toInt( {view.params.novDayTotals.Mon}/{view.custom.novDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.novDayTotals.Mon}/{view.custom.novDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.novDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.novDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novDayTotals.Mon},\r\n\"Avg Beds / Night (Day)\", {view.params.novDayTotals.Mon}/{view.params.novDayTotals.noOfMon},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.novDailyCongregations.Mon} \u003d0, 0, {view.params.novDayTotals.Mon}/{view.custom.novDailyCongregations.Mon}),\r\n\"Total Congregations (Day)\", {view.custom.novDailyCongregations.Mon},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Tue"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novDayTotals.Tue}\u003c({view.params.novDayTotals.noOfTue} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novDayTotals.Tue}/{view.params.novDayTotals.noOfTue} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.novDailyCongregations.Tue} \u003d 0)|| ({view.custom.novDailyCongregations.Tue} !\u003d0 \u0026\u0026 (toInt( {view.params.novDayTotals.Tue}/{view.custom.novDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.novDayTotals.Tue}/{view.custom.novDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.novDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.novDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novDayTotals.Tue},\r\n\"Avg Beds / Night (Day)\", {view.params.novDayTotals.Tue}/{view.params.novDayTotals.noOfTue},\r\n\"Avg Beds / Congregation (Day)\",  if({view.custom.novDailyCongregations.Tue} \u003d 0, 0, {view.params.novDayTotals.Tue}/{view.custom.novDailyCongregations.Tue}),\r\n\"Total Congregations (Day)\", {view.custom.novDailyCongregations.Tue},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Wed"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novDayTotals.Wed}\u003c({view.params.novDayTotals.noOfWed} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novDayTotals.Wed}/{view.params.novDayTotals.noOfWed} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.novDailyCongregations.Wed} \u003d 0)|| ({view.custom.novDailyCongregations.Wed} !\u003d0 \u0026\u0026 (toInt( {view.params.novDayTotals.Wed}/{view.custom.novDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.novDayTotals.Wed}/{view.custom.novDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.novDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.novDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novDayTotals.Wed},\r\n\"Avg Beds / Night (Day)\", {view.params.novDayTotals.Wed}/{view.params.novDayTotals.noOfWed},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.novDailyCongregations.Wed} \u003d0, 0, {view.params.novDayTotals.Wed}/{view.custom.novDailyCongregations.Wed}),\r\n\"Total Congregations (Day)\", {view.custom.novDailyCongregations.Wed},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Thu"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novDayTotals.Thu}\u003c({view.params.novDayTotals.noOfThu} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novDayTotals.Thu}/{view.params.novDayTotals.noOfThu} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.novDailyCongregations.Thu} \u003d 0)|| ({view.custom.novDailyCongregations.Thu} !\u003d0 \u0026\u0026 (toInt( {view.params.novDayTotals.Thu}/{view.custom.novDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.novDayTotals.Thu}/{view.custom.novDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.novDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.novDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novDayTotals.Thu},\r\n\"Avg Beds / Night (Day)\", {view.params.novDayTotals.Thu}/{view.params.novDayTotals.noOfThu},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.novDailyCongregations.Thu} \u003d 0, 0, {view.params.novDayTotals.Thu}/{view.custom.novDailyCongregations.Thu}),\r\n\"Total Congregations (Day)\", {view.custom.novDailyCongregations.Thu},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Fri"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novDayTotals.Fri}\u003c({view.params.novDayTotals.noOfFri} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novDayTotals.Fri}/{view.params.novDayTotals.noOfFri} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.novDailyCongregations.Fri} \u003d 0)|| ({view.custom.novDailyCongregations.Fri} !\u003d0 \u0026\u0026 (toInt( {view.params.novDayTotals.Fri}/{view.custom.novDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.novDayTotals.Fri}/{view.custom.novDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.novDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.novDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novDayTotals.Fri},\r\n\"Avg Beds / Night (Day)\", {view.params.novDayTotals.Fri}/{view.params.novDayTotals.noOfFri},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.novDailyCongregations.Fri} \u003d 0, 0,{view.params.novDayTotals.Fri}/{view.custom.novDailyCongregations.Fri}),\r\n\"Total Congregations (Day)\", {view.custom.novDailyCongregations.Fri},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sat"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novDayTotals.Sat}\u003c({view.params.novDayTotals.noOfSat} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novDayTotals.Sat}/{view.params.novDayTotals.noOfSat} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.novDailyCongregations.Sat} \u003d 0)|| ({view.custom.novDailyCongregations.Sat} !\u003d0 \u0026\u0026 (toInt( {view.params.novDayTotals.Sat}/{view.custom.novDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.novDayTotals.Sat}/{view.custom.novDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.novDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.novDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novDayTotals.Sat},\r\n\"Avg Beds / Night (Day)\", {view.params.novDayTotals.Sat}/{view.params.novDayTotals.noOfSat},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.novDailyCongregations.Sat} \u003d 0 , 0, {view.params.novDayTotals.Sat}/{view.custom.novDailyCongregations.Sat}),\r\n\"Total Congregations (Day)\", {view.custom.novDailyCongregations.Sat},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sun"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.novDayTotals.Sun}\u003c({view.params.novDayTotals.noOfSun} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.novDayTotals.Sun}/{view.params.novDayTotals.noOfSun} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.novDailyCongregations.Sun} \u003d 0)|| ({view.custom.novDailyCongregations.Sun} !\u003d0 \u0026\u0026 (toInt( {view.params.novDayTotals.Sun}/{view.custom.novDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.novDayTotals.Sun}/{view.custom.novDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.novDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.novDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.novDayTotals.Sun},\r\n\"Avg Beds / Night (Day)\", {view.params.novDayTotals.Sun}/{view.params.novDayTotals.noOfSun},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.novDailyCongregations.Sun} \u003d 0, 0, {view.params.novDayTotals.Sun}/{view.custom.novDailyCongregations.Sun}),\r\n\"Total Congregations (Day)\", {view.custom.novDailyCongregations.Sun},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      }
                    ],
                    "meta": {
                      "name": "November"
                    },
                    "position": {
                      "basis": "17%",
                      "grow": 1
                    },
                    "props": {
                      "direction": "column",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "header"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decMonthTotal}\u003c({view.params.totalDaysDec} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decMonthTotal}/{view.params.totalDaysDec} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", false,\r\n\"Total Congregations (Day)\", ({view.custom.decTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.decTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label2": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decMonthTotal},\r\n\"Avg Beds / Night (Day)\", {view.params.decMonthTotal}/{view.params.totalDaysDec},\r\n\"Avg Beds / Congregation (Day)\", {view.params.decMonthTotal}/{view.custom.decTotalCongregations},\r\n\"Total Congregations (Day)\", {view.custom.decTotalCongregations},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "params": {
                            "label1": "December"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Mon"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decDayTotals.Mon}\u003c({view.params.decDayTotals.noOfMon} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decDayTotals.Mon}/{view.params.decDayTotals.noOfMon} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.decDailyCongregations.Mon} \u003d 0)|| ({view.custom.decDailyCongregations.Mon} !\u003d0 \u0026\u0026 (toInt( {view.params.decDayTotals.Mon}/{view.custom.decDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.decDayTotals.Mon}/{view.custom.decDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.decDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.decDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decDayTotals.Mon},\r\n\"Avg Beds / Night (Day)\", {view.params.decDayTotals.Mon}/{view.params.decDayTotals.noOfMon},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.decDailyCongregations.Mon} \u003d0, 0, {view.params.decDayTotals.Mon}/{view.custom.decDailyCongregations.Mon}),\r\n\"Total Congregations (Day)\", {view.custom.decDailyCongregations.Mon},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Tue"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decDayTotals.Tue}\u003c({view.params.decDayTotals.noOfTue} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decDayTotals.Tue}/{view.params.decDayTotals.noOfTue} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.decDailyCongregations.Tue} \u003d 0)|| ({view.custom.decDailyCongregations.Tue} !\u003d0 \u0026\u0026 (toInt( {view.params.decDayTotals.Tue}/{view.custom.decDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.decDayTotals.Tue}/{view.custom.decDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.decDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.decDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decDayTotals.Tue},\r\n\"Avg Beds / Night (Day)\", {view.params.decDayTotals.Tue}/{view.params.decDayTotals.noOfTue},\r\n\"Avg Beds / Congregation (Day)\",  if({view.custom.decDailyCongregations.Tue} \u003d 0, 0, {view.params.decDayTotals.Tue}/{view.custom.decDailyCongregations.Tue}),\r\n\"Total Congregations (Day)\", {view.custom.decDailyCongregations.Tue},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Wed"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decDayTotals.Wed}\u003c({view.params.decDayTotals.noOfWed} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decDayTotals.Wed}/{view.params.decDayTotals.noOfWed} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.decDailyCongregations.Wed} \u003d 0)|| ({view.custom.decDailyCongregations.Wed} !\u003d0 \u0026\u0026 (toInt( {view.params.decDayTotals.Wed}/{view.custom.decDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.decDayTotals.Wed}/{view.custom.decDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.decDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.decDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decDayTotals.Wed},\r\n\"Avg Beds / Night (Day)\", {view.params.decDayTotals.Wed}/{view.params.decDayTotals.noOfWed},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.decDailyCongregations.Wed} \u003d0, 0, {view.params.decDayTotals.Wed}/{view.custom.decDailyCongregations.Wed}),\r\n\"Total Congregations (Day)\", {view.custom.decDailyCongregations.Wed},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Thu"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decDayTotals.Thu}\u003c({view.params.decDayTotals.noOfThu} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decDayTotals.Thu}/{view.params.decDayTotals.noOfThu} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.decDailyCongregations.Thu} \u003d 0)|| ({view.custom.decDailyCongregations.Thu} !\u003d0 \u0026\u0026 (toInt( {view.params.decDayTotals.Thu}/{view.custom.decDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.decDayTotals.Thu}/{view.custom.decDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.decDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.decDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decDayTotals.Thu},\r\n\"Avg Beds / Night (Day)\", {view.params.decDayTotals.Thu}/{view.params.decDayTotals.noOfThu},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.decDailyCongregations.Thu} \u003d 0, 0, {view.params.decDayTotals.Thu}/{view.custom.decDailyCongregations.Thu}),\r\n\"Total Congregations (Day)\", {view.custom.decDailyCongregations.Thu},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Fri"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decDayTotals.Fri}\u003c({view.params.decDayTotals.noOfFri} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decDayTotals.Fri}/{view.params.decDayTotals.noOfFri} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.decDailyCongregations.Fri} \u003d 0)|| ({view.custom.decDailyCongregations.Fri} !\u003d0 \u0026\u0026 (toInt( {view.params.decDayTotals.Fri}/{view.custom.decDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.decDayTotals.Fri}/{view.custom.decDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.decDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.decDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decDayTotals.Fri},\r\n\"Avg Beds / Night (Day)\", {view.params.decDayTotals.Fri}/{view.params.decDayTotals.noOfFri},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.decDailyCongregations.Fri} \u003d 0, 0,{view.params.decDayTotals.Fri}/{view.custom.decDailyCongregations.Fri}),\r\n\"Total Congregations (Day)\", {view.custom.decDailyCongregations.Fri},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sat"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decDayTotals.Sat}\u003c({view.params.decDayTotals.noOfSat} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decDayTotals.Sat}/{view.params.decDayTotals.noOfSat} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.decDailyCongregations.Sat} \u003d 0)|| ({view.custom.decDailyCongregations.Sat} !\u003d0 \u0026\u0026 (toInt( {view.params.decDayTotals.Sat}/{view.custom.decDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.decDayTotals.Sat}/{view.custom.decDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.decDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.decDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decDayTotals.Sat},\r\n\"Avg Beds / Night (Day)\", {view.params.decDayTotals.Sat}/{view.params.decDayTotals.noOfSat},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.decDailyCongregations.Sat} \u003d 0 , 0, {view.params.decDayTotals.Sat}/{view.custom.decDailyCongregations.Sat}),\r\n\"Total Congregations (Day)\", {view.custom.decDailyCongregations.Sat},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sun"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.decDayTotals.Sun}\u003c({view.params.decDayTotals.noOfSun} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.decDayTotals.Sun}/{view.params.decDayTotals.noOfSun} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.decDailyCongregations.Sun} \u003d 0)|| ({view.custom.decDailyCongregations.Sun} !\u003d0 \u0026\u0026 (toInt( {view.params.decDayTotals.Sun}/{view.custom.decDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.decDayTotals.Sun}/{view.custom.decDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.decDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.decDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.decDayTotals.Sun},\r\n\"Avg Beds / Night (Day)\", {view.params.decDayTotals.Sun}/{view.params.decDayTotals.noOfSun},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.decDailyCongregations.Sun} \u003d 0, 0, {view.params.decDayTotals.Sun}/{view.custom.decDailyCongregations.Sun}),\r\n\"Total Congregations (Day)\", {view.custom.decDailyCongregations.Sun},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      }
                    ],
                    "meta": {
                      "name": "December"
                    },
                    "position": {
                      "basis": "17%",
                      "grow": 1
                    },
                    "props": {
                      "direction": "column",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "header"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janMonthTotal}\u003c({view.params.totalDaysJan} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janMonthTotal}/{view.params.totalDaysJan} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", false,\r\n\"Total Congregations (Day)\", ({view.custom.janTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.janTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label2": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janMonthTotal},\r\n\"Avg Beds / Night (Day)\", {view.params.janMonthTotal}/{view.params.totalDaysJan},\r\n\"Avg Beds / Congregation (Day)\", {view.params.janMonthTotal}/{view.custom.janTotalCongregations},\r\n\"Total Congregations (Day)\", {view.custom.janTotalCongregations},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "params": {
                            "label1": "January"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Mon"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janDayTotals.Mon}\u003c({view.params.janDayTotals.noOfMon} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janDayTotals.Mon}/{view.params.janDayTotals.noOfMon} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.janDailyCongregations.Mon} \u003d 0)|| ({view.custom.janDailyCongregations.Mon} !\u003d0 \u0026\u0026 (toInt( {view.params.janDayTotals.Mon}/{view.custom.janDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.janDayTotals.Mon}/{view.custom.janDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.janDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.janDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janDayTotals.Mon},\r\n\"Avg Beds / Night (Day)\", {view.params.janDayTotals.Mon}/{view.params.janDayTotals.noOfMon},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.janDailyCongregations.Mon} \u003d0, 0, {view.params.janDayTotals.Mon}/{view.custom.janDailyCongregations.Mon}),\r\n\"Total Congregations (Day)\", {view.custom.janDailyCongregations.Mon},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Tue"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janDayTotals.Tue}\u003c({view.params.janDayTotals.noOfTue} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janDayTotals.Tue}/{view.params.janDayTotals.noOfTue} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.janDailyCongregations.Tue} \u003d 0)|| ({view.custom.janDailyCongregations.Tue} !\u003d0 \u0026\u0026 (toInt( {view.params.janDayTotals.Tue}/{view.custom.janDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.janDayTotals.Tue}/{view.custom.janDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.janDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.janDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janDayTotals.Tue},\r\n\"Avg Beds / Night (Day)\", {view.params.janDayTotals.Tue}/{view.params.janDayTotals.noOfTue},\r\n\"Avg Beds / Congregation (Day)\",  if({view.custom.janDailyCongregations.Tue} \u003d 0, 0, {view.params.janDayTotals.Tue}/{view.custom.janDailyCongregations.Tue}),\r\n\"Total Congregations (Day)\", {view.custom.janDailyCongregations.Tue},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Wed"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janDayTotals.Wed}\u003c({view.params.janDayTotals.noOfWed} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janDayTotals.Wed}/{view.params.janDayTotals.noOfWed} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.janDailyCongregations.Wed} \u003d 0)|| ({view.custom.janDailyCongregations.Wed} !\u003d0 \u0026\u0026 (toInt( {view.params.janDayTotals.Wed}/{view.custom.janDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.janDayTotals.Wed}/{view.custom.janDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.janDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.janDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janDayTotals.Wed},\r\n\"Avg Beds / Night (Day)\", {view.params.janDayTotals.Wed}/{view.params.janDayTotals.noOfWed},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.janDailyCongregations.Wed} \u003d0, 0, {view.params.janDayTotals.Wed}/{view.custom.janDailyCongregations.Wed}),\r\n\"Total Congregations (Day)\", {view.custom.janDailyCongregations.Wed},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Thu"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janDayTotals.Thu}\u003c({view.params.janDayTotals.noOfThu} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janDayTotals.Thu}/{view.params.janDayTotals.noOfThu} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.janDailyCongregations.Thu} \u003d 0)|| ({view.custom.janDailyCongregations.Thu} !\u003d0 \u0026\u0026 (toInt( {view.params.janDayTotals.Thu}/{view.custom.janDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.janDayTotals.Thu}/{view.custom.janDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.janDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.janDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janDayTotals.Thu},\r\n\"Avg Beds / Night (Day)\", {view.params.janDayTotals.Thu}/{view.params.janDayTotals.noOfThu},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.janDailyCongregations.Thu} \u003d 0, 0, {view.params.janDayTotals.Thu}/{view.custom.janDailyCongregations.Thu}),\r\n\"Total Congregations (Day)\", {view.custom.janDailyCongregations.Thu},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Fri"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janDayTotals.Fri}\u003c({view.params.janDayTotals.noOfFri} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janDayTotals.Fri}/{view.params.janDayTotals.noOfFri} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.janDailyCongregations.Fri} \u003d 0)|| ({view.custom.janDailyCongregations.Fri} !\u003d0 \u0026\u0026 (toInt( {view.params.janDayTotals.Fri}/{view.custom.janDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.janDayTotals.Fri}/{view.custom.janDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.janDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.janDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janDayTotals.Fri},\r\n\"Avg Beds / Night (Day)\", {view.params.janDayTotals.Fri}/{view.params.janDayTotals.noOfFri},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.janDailyCongregations.Fri} \u003d 0, 0,{view.params.janDayTotals.Fri}/{view.custom.janDailyCongregations.Fri}),\r\n\"Total Congregations (Day)\", {view.custom.janDailyCongregations.Fri},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sat"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janDayTotals.Sat}\u003c({view.params.janDayTotals.noOfSat} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janDayTotals.Sat}/{view.params.janDayTotals.noOfSat} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.janDailyCongregations.Sat} \u003d 0)|| ({view.custom.janDailyCongregations.Sat} !\u003d0 \u0026\u0026 (toInt( {view.params.janDayTotals.Sat}/{view.custom.janDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.janDayTotals.Sat}/{view.custom.janDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.janDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.janDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janDayTotals.Sat},\r\n\"Avg Beds / Night (Day)\", {view.params.janDayTotals.Sat}/{view.params.janDayTotals.noOfSat},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.janDailyCongregations.Sat} \u003d 0 , 0, {view.params.janDayTotals.Sat}/{view.custom.janDailyCongregations.Sat}),\r\n\"Total Congregations (Day)\", {view.custom.janDailyCongregations.Sat},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sun"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.janDayTotals.Sun}\u003c({view.params.janDayTotals.noOfSun} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.janDayTotals.Sun}/{view.params.janDayTotals.noOfSun} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.janDailyCongregations.Sun} \u003d 0)|| ({view.custom.janDailyCongregations.Sun} !\u003d0 \u0026\u0026 (toInt( {view.params.janDayTotals.Sun}/{view.custom.janDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.janDayTotals.Sun}/{view.custom.janDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.janDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.janDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.janDayTotals.Sun},\r\n\"Avg Beds / Night (Day)\", {view.params.janDayTotals.Sun}/{view.params.janDayTotals.noOfSun},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.janDailyCongregations.Sun} \u003d 0, 0, {view.params.janDayTotals.Sun}/{view.custom.janDailyCongregations.Sun}),\r\n\"Total Congregations (Day)\", {view.custom.janDailyCongregations.Sun},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      }
                    ],
                    "meta": {
                      "name": "January"
                    },
                    "position": {
                      "basis": "17%",
                      "grow": 1
                    },
                    "props": {
                      "direction": "column",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "header"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febMonthTotal}\u003c({view.params.totalDaysFeb} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febMonthTotal}/{view.params.totalDaysFeb} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", false,\r\n\"Total Congregations (Day)\", ({view.custom.febTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.febTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label2": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febMonthTotal},\r\n\"Avg Beds / Night (Day)\", {view.params.febMonthTotal}/{view.params.totalDaysFeb},\r\n\"Avg Beds / Congregation (Day)\", {view.params.febMonthTotal}/{view.custom.febTotalCongregations},\r\n\"Total Congregations (Day)\", {view.custom.febTotalCongregations},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "params": {
                            "label1": "February"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Mon"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febDayTotals.Mon}\u003c({view.params.febDayTotals.noOfMon} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febDayTotals.Mon}/{view.params.febDayTotals.noOfMon} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.febDailyCongregations.Mon} \u003d 0)|| ({view.custom.febDailyCongregations.Mon} !\u003d0 \u0026\u0026 (toInt( {view.params.febDayTotals.Mon}/{view.custom.febDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.febDayTotals.Mon}/{view.custom.febDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.febDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.febDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febDayTotals.Mon},\r\n\"Avg Beds / Night (Day)\", {view.params.febDayTotals.Mon}/{view.params.febDayTotals.noOfMon},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.febDailyCongregations.Mon} \u003d0, 0, {view.params.febDayTotals.Mon}/{view.custom.febDailyCongregations.Mon}),\r\n\"Total Congregations (Day)\", {view.custom.febDailyCongregations.Mon},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Tue"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febDayTotals.Tue}\u003c({view.params.febDayTotals.noOfTue} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febDayTotals.Tue}/{view.params.febDayTotals.noOfTue} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.febDailyCongregations.Tue} \u003d 0)|| ({view.custom.febDailyCongregations.Tue} !\u003d0 \u0026\u0026 (toInt( {view.params.febDayTotals.Tue}/{view.custom.febDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.febDayTotals.Tue}/{view.custom.febDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.febDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.febDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febDayTotals.Tue},\r\n\"Avg Beds / Night (Day)\", {view.params.febDayTotals.Tue}/{view.params.febDayTotals.noOfTue},\r\n\"Avg Beds / Congregation (Day)\",  if({view.custom.febDailyCongregations.Tue} \u003d 0, 0, {view.params.febDayTotals.Tue}/{view.custom.febDailyCongregations.Tue}),\r\n\"Total Congregations (Day)\", {view.custom.febDailyCongregations.Tue},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Wed"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febDayTotals.Wed}\u003c({view.params.febDayTotals.noOfWed} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febDayTotals.Wed}/{view.params.febDayTotals.noOfWed} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.febDailyCongregations.Wed} \u003d 0)|| ({view.custom.febDailyCongregations.Wed} !\u003d0 \u0026\u0026 (toInt( {view.params.febDayTotals.Wed}/{view.custom.febDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.febDayTotals.Wed}/{view.custom.febDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.febDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.febDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febDayTotals.Wed},\r\n\"Avg Beds / Night (Day)\", {view.params.febDayTotals.Wed}/{view.params.febDayTotals.noOfWed},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.febDailyCongregations.Wed} \u003d0, 0, {view.params.febDayTotals.Wed}/{view.custom.febDailyCongregations.Wed}),\r\n\"Total Congregations (Day)\", {view.custom.febDailyCongregations.Wed},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Thu"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febDayTotals.Thu}\u003c({view.params.febDayTotals.noOfThu} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febDayTotals.Thu}/{view.params.febDayTotals.noOfThu} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.febDailyCongregations.Thu} \u003d 0)|| ({view.custom.febDailyCongregations.Thu} !\u003d0 \u0026\u0026 (toInt( {view.params.febDayTotals.Thu}/{view.custom.febDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.febDayTotals.Thu}/{view.custom.febDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.febDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.febDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febDayTotals.Thu},\r\n\"Avg Beds / Night (Day)\", {view.params.febDayTotals.Thu}/{view.params.febDayTotals.noOfThu},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.febDailyCongregations.Thu} \u003d 0, 0, {view.params.febDayTotals.Thu}/{view.custom.febDailyCongregations.Thu}),\r\n\"Total Congregations (Day)\", {view.custom.febDailyCongregations.Thu},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Fri"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febDayTotals.Fri}\u003c({view.params.febDayTotals.noOfFri} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febDayTotals.Fri}/{view.params.febDayTotals.noOfFri} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.febDailyCongregations.Fri} \u003d 0)|| ({view.custom.febDailyCongregations.Fri} !\u003d0 \u0026\u0026 (toInt( {view.params.febDayTotals.Fri}/{view.custom.febDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.febDayTotals.Fri}/{view.custom.febDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.febDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.febDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febDayTotals.Fri},\r\n\"Avg Beds / Night (Day)\", {view.params.febDayTotals.Fri}/{view.params.febDayTotals.noOfFri},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.febDailyCongregations.Fri} \u003d 0, 0,{view.params.febDayTotals.Fri}/{view.custom.febDailyCongregations.Fri}),\r\n\"Total Congregations (Day)\", {view.custom.febDailyCongregations.Fri},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sat"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febDayTotals.Sat}\u003c({view.params.febDayTotals.noOfSat} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febDayTotals.Sat}/{view.params.febDayTotals.noOfSat} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.febDailyCongregations.Sat} \u003d 0)|| ({view.custom.febDailyCongregations.Sat} !\u003d0 \u0026\u0026 (toInt( {view.params.febDayTotals.Sat}/{view.custom.febDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.febDayTotals.Sat}/{view.custom.febDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.febDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.febDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febDayTotals.Sat},\r\n\"Avg Beds / Night (Day)\", {view.params.febDayTotals.Sat}/{view.params.febDayTotals.noOfSat},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.febDailyCongregations.Sat} \u003d 0 , 0, {view.params.febDayTotals.Sat}/{view.custom.febDailyCongregations.Sat}),\r\n\"Total Congregations (Day)\", {view.custom.febDailyCongregations.Sat},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sun"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.febDayTotals.Sun}\u003c({view.params.febDayTotals.noOfSun} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.febDayTotals.Sun}/{view.params.febDayTotals.noOfSun} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.febDailyCongregations.Sun} \u003d 0)|| ({view.custom.febDailyCongregations.Sun} !\u003d0 \u0026\u0026 (toInt( {view.params.febDayTotals.Sun}/{view.custom.febDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.febDayTotals.Sun}/{view.custom.febDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.febDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.febDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.febDayTotals.Sun},\r\n\"Avg Beds / Night (Day)\", {view.params.febDayTotals.Sun}/{view.params.febDayTotals.noOfSun},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.febDailyCongregations.Sun} \u003d 0, 0, {view.params.febDayTotals.Sun}/{view.custom.febDailyCongregations.Sun}),\r\n\"Total Congregations (Day)\", {view.custom.febDailyCongregations.Sun},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      }
                    ],
                    "meta": {
                      "name": "February"
                    },
                    "position": {
                      "basis": "17%",
                      "grow": 1
                    },
                    "props": {
                      "direction": "column",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "header"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchMonthTotal}\u003c({view.params.totalDaysMarch} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchMonthTotal}/{view.params.totalDaysMarch} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", false,\r\n\"Total Congregations (Day)\", ({view.custom.marchTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[0]} || {view.custom.marchTotalCongregations} \u003d {view.custom.lowestTwoTotalCongregationsMonth[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label2": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchMonthTotal},\r\n\"Avg Beds / Night (Day)\", {view.params.marchMonthTotal}/{view.params.totalDaysMarch},\r\n\"Avg Beds / Congregation (Day)\", {view.params.marchMonthTotal}/{view.custom.marchTotalCongregations},\r\n\"Total Congregations (Day)\", {view.custom.marchTotalCongregations},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "params": {
                            "label1": "March"
                          },
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/two labels"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Mon"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchDayTotals.Mon}\u003c({view.params.marchDayTotals.noOfMon} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchDayTotals.Mon}/{view.params.marchDayTotals.noOfMon} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.marchDailyCongregations.Mon} \u003d 0)|| ({view.custom.marchDailyCongregations.Mon} !\u003d0 \u0026\u0026 (toInt( {view.params.marchDayTotals.Mon}/{view.custom.marchDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.marchDayTotals.Mon}/{view.custom.marchDailyCongregations.Mon})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.marchDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.marchDailyCongregations.Mon} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchDayTotals.Mon},\r\n\"Avg Beds / Night (Day)\", {view.params.marchDayTotals.Mon}/{view.params.marchDayTotals.noOfMon},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.marchDailyCongregations.Mon} \u003d0, 0, {view.params.marchDayTotals.Mon}/{view.custom.marchDailyCongregations.Mon}),\r\n\"Total Congregations (Day)\", {view.custom.marchDailyCongregations.Mon},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Tue"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchDayTotals.Tue}\u003c({view.params.marchDayTotals.noOfTue} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchDayTotals.Tue}/{view.params.marchDayTotals.noOfTue} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.marchDailyCongregations.Tue} \u003d 0)|| ({view.custom.marchDailyCongregations.Tue} !\u003d0 \u0026\u0026 (toInt( {view.params.marchDayTotals.Tue}/{view.custom.marchDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.marchDayTotals.Tue}/{view.custom.marchDailyCongregations.Tue})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.marchDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.marchDailyCongregations.Tue} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)\r\n"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchDayTotals.Tue},\r\n\"Avg Beds / Night (Day)\", {view.params.marchDayTotals.Tue}/{view.params.marchDayTotals.noOfTue},\r\n\"Avg Beds / Congregation (Day)\",  if({view.custom.marchDailyCongregations.Tue} \u003d 0, 0, {view.params.marchDayTotals.Tue}/{view.custom.marchDailyCongregations.Tue}),\r\n\"Total Congregations (Day)\", {view.custom.marchDailyCongregations.Tue},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Wed"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchDayTotals.Wed}\u003c({view.params.marchDayTotals.noOfWed} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchDayTotals.Wed}/{view.params.marchDayTotals.noOfWed} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.marchDailyCongregations.Wed} \u003d 0)|| ({view.custom.marchDailyCongregations.Wed} !\u003d0 \u0026\u0026 (toInt( {view.params.marchDayTotals.Wed}/{view.custom.marchDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.marchDayTotals.Wed}/{view.custom.marchDailyCongregations.Wed})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.marchDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.marchDailyCongregations.Wed} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchDayTotals.Wed},\r\n\"Avg Beds / Night (Day)\", {view.params.marchDayTotals.Wed}/{view.params.marchDayTotals.noOfWed},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.marchDailyCongregations.Wed} \u003d0, 0, {view.params.marchDayTotals.Wed}/{view.custom.marchDailyCongregations.Wed}),\r\n\"Total Congregations (Day)\", {view.custom.marchDailyCongregations.Wed},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Thu"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchDayTotals.Thu}\u003c({view.params.marchDayTotals.noOfThu} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchDayTotals.Thu}/{view.params.marchDayTotals.noOfThu} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.marchDailyCongregations.Thu} \u003d 0)|| ({view.custom.marchDailyCongregations.Thu} !\u003d0 \u0026\u0026 (toInt( {view.params.marchDayTotals.Thu}/{view.custom.marchDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.marchDayTotals.Thu}/{view.custom.marchDailyCongregations.Thu})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.marchDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.marchDailyCongregations.Thu} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchDayTotals.Thu},\r\n\"Avg Beds / Night (Day)\", {view.params.marchDayTotals.Thu}/{view.params.marchDayTotals.noOfThu},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.marchDailyCongregations.Thu} \u003d 0, 0, {view.params.marchDayTotals.Thu}/{view.custom.marchDailyCongregations.Thu}),\r\n\"Total Congregations (Day)\", {view.custom.marchDailyCongregations.Thu},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Fri"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchDayTotals.Fri}\u003c({view.params.marchDayTotals.noOfFri} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchDayTotals.Fri}/{view.params.marchDayTotals.noOfFri} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.marchDailyCongregations.Fri} \u003d 0)|| ({view.custom.marchDailyCongregations.Fri} !\u003d0 \u0026\u0026 (toInt( {view.params.marchDayTotals.Fri}/{view.custom.marchDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.marchDayTotals.Fri}/{view.custom.marchDailyCongregations.Fri})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.marchDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.marchDailyCongregations.Fri} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchDayTotals.Fri},\r\n\"Avg Beds / Night (Day)\", {view.params.marchDayTotals.Fri}/{view.params.marchDayTotals.noOfFri},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.marchDailyCongregations.Fri} \u003d 0, 0,{view.params.marchDayTotals.Fri}/{view.custom.marchDailyCongregations.Fri}),\r\n\"Total Congregations (Day)\", {view.custom.marchDailyCongregations.Fri},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sat"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchDayTotals.Sat}\u003c({view.params.marchDayTotals.noOfSat} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchDayTotals.Sat}/{view.params.marchDayTotals.noOfSat} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.marchDailyCongregations.Sat} \u003d 0)|| ({view.custom.marchDailyCongregations.Sat} !\u003d0 \u0026\u0026 (toInt( {view.params.marchDayTotals.Sat}/{view.custom.marchDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.marchDayTotals.Sat}/{view.custom.marchDailyCongregations.Sat})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.marchDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.marchDailyCongregations.Sat} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchDayTotals.Sat},\r\n\"Avg Beds / Night (Day)\", {view.params.marchDayTotals.Sat}/{view.params.marchDayTotals.noOfSat},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.marchDailyCongregations.Sat} \u003d 0 , 0, {view.params.marchDayTotals.Sat}/{view.custom.marchDailyCongregations.Sat}),\r\n\"Total Congregations (Day)\", {view.custom.marchDailyCongregations.Sat},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "meta": {
                          "name": "Sun"
                        },
                        "position": {
                          "basis": "40px"
                        },
                        "propConfig": {
                          "props.params.belowThreshold": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",({view.params.marchDayTotals.Sun}\u003c({view.params.marchDayTotals.noOfSun} * {view.custom.minimumBedsThreshold})),\r\n\"Avg Beds / Night (Day)\", (({view.params.marchDayTotals.Sun}/{view.params.marchDayTotals.noOfSun} )\u003c {view.custom.minimumBedsThreshold}),\r\n\"Avg Beds / Congregation (Day)\", ({view.custom.marchDailyCongregations.Sun} \u003d 0)|| ({view.custom.marchDailyCongregations.Sun} !\u003d0 \u0026\u0026 (toInt( {view.params.marchDayTotals.Sun}/{view.custom.marchDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[0]}|| toInt( {view.params.marchDayTotals.Sun}/{view.custom.marchDailyCongregations.Sun})\u003d{...../Grid_Day.custom.lowest2AvgCongregationsDay[1]})),\r\n\"Total Congregations (Day)\", ({view.custom.marchDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[0]}|| {view.custom.marchDailyCongregations.Sun} \u003d {...../Grid_Day.custom.lowest2TotalCongregationsDay[1]}),\r\nNone)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.params.label": {
                            "binding": {
                              "config": {
                                "expression": "case({...../Menu/month.props.params.selection},\"Total Beds (Day)\",{view.params.marchDayTotals.Sun},\r\n\"Avg Beds / Night (Day)\", {view.params.marchDayTotals.Sun}/{view.params.marchDayTotals.noOfSun},\r\n\"Avg Beds / Congregation (Day)\", if({view.custom.marchDailyCongregations.Sun} \u003d 0, 0, {view.params.marchDayTotals.Sun}/{view.custom.marchDailyCongregations.Sun}),\r\n\"Total Congregations (Day)\", {view.custom.marchDailyCongregations.Sun},\r\nNone)"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "path": "WinterShelter/Overview/Dashboard/Main/Components/SingleLabel"
                        },
                        "type": "ia.display.view"
                      }
                    ],
                    "meta": {
                      "name": "March"
                    },
                    "position": {
                      "basis": "17%",
                      "grow": 1
                    },
                    "props": {
                      "direction": "column",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.container.flex"
                  }
                ],
                "meta": {
                  "name": "FlexContainer"
                },
                "position": {
                  "basis": "100%",
                  "shrink": 0
                },
                "props": {
                  "alignItems": "flex-start"
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Grid_Day"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "propConfig": {
              "custom.lowest2AvgCongregationsDay": {
                "binding": {
                  "config": {
                    "struct": {
                      "dec": "{view.custom.decDailyCongregations}",
                      "feb": "{view.custom.febDailyCongregations}",
                      "jan": "{view.custom.janDailyCongregations}",
                      "march": "{view.custom.marchDailyCongregations}",
                      "nov": "{view.custom.novDailyCongregations}"
                    },
                    "waitOnAll": true
                  },
                  "transforms": [
                    {
                      "code": "\tkeyNames \u003d [\u0027nov\u0027,\u0027dec\u0027,\u0027jan\u0027,\u0027feb\u0027,\u0027march\u0027]\n\tallValues \u003d []\n\ttotaldailyBeds \u003d {}\n\ttotaldailyBeds[\u0027nov\u0027] \u003d self.view.params.novDayTotals\n\ttotaldailyBeds[\u0027dec\u0027] \u003d self.view.params.decDayTotals\n\ttotaldailyBeds[\u0027jan\u0027] \u003d self.view.params.janDayTotals\n\ttotaldailyBeds[\u0027feb\u0027] \u003d self.view.params.febDayTotals\n\ttotaldailyBeds[\u0027march\u0027] \u003d self.view.params.marchDayTotals\n\tfor key in keyNames:\n\t\tallValues.append(totaldailyBeds[key].Mon/value[key].Mon)\n\t\tallValues.append(totaldailyBeds[key].Tue/value[key].Tue)\n\t\tallValues.append(totaldailyBeds[key].Wed/value[key].Wed)\n\t\tallValues.append(totaldailyBeds[key].Thu/value[key].Thu)\n\t\tallValues.append(totaldailyBeds[key].Fri/value[key].Fri)\n\t\tallValues.append(totaldailyBeds[key].Sat/value[key].Sat)\n\t\tallValues.append(totaldailyBeds[key].Sun/value[key].Sun)\n\tallValues \u003d list(set(allValues))\n\tallValues \u003d sorted(allValues)\n\treturn [allValues[0],allValues[1]]",
                      "type": "script"
                    }
                  ],
                  "type": "expr-struct"
                }
              },
              "custom.lowest2TotalCongregationsDay": {
                "binding": {
                  "config": {
                    "struct": {
                      "dec": "{view.custom.decDailyCongregations}",
                      "feb": "{view.custom.febDailyCongregations}",
                      "jan": "{view.custom.janDailyCongregations}",
                      "march": "{view.custom.marchDailyCongregations}",
                      "nov": "{view.custom.novDailyCongregations}"
                    },
                    "waitOnAll": true
                  },
                  "transforms": [
                    {
                      "code": "\tkeyNames \u003d [\u0027nov\u0027,\u0027dec\u0027,\u0027jan\u0027,\u0027feb\u0027,\u0027march\u0027]\n\tallValues \u003d []\n\tfor key in keyNames:\n\t\tallValues.append(value[key].Mon)\n\t\tallValues.append(value[key].Tue)\n\t\tallValues.append(value[key].Wed)\n\t\tallValues.append(value[key].Thu)\n\t\tallValues.append(value[key].Fri)\n\t\tallValues.append(value[key].Sat)\n\t\tallValues.append(value[key].Sun)\n\tallValues \u003d list(set(allValues))\n\tallValues \u003d sorted(allValues)\n\treturn [allValues[0],allValues[1]]",
                      "type": "script"
                    }
                  ],
                  "type": "expr-struct"
                }
              },
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{../Menu/month.props.params.selection}"
                  },
                  "transforms": [
                    {
                      "code": "\tif \u0027(Day)\u0027 in str(value):\n\t\treturn True\n\telse:\n\t\treturn False",
                      "type": "script"
                    }
                  ],
                  "type": "expr"
                }
              }
            },
            "props": {
              "direction": "column",
              "style": {
                "borderLeftColor": "#D5D5D5",
                "borderLeftStyle": "solid",
                "borderLeftWidth": 1,
                "borderTopColor": "#D5D5D5",
                "borderTopStyle": "solid",
                "borderTopWidth": 1,
                "marginBottom": "0px",
                "marginLeft": "0px",
                "marginRight": "0px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Top"
        },
        "position": {
          "basis": "48%",
          "shrink": 0
        },
        "props": {
          "direction": "column",
          "style": {
            "backgroundColor": "#FFFFFF",
            "borderBottomLeftRadius": "4px",
            "borderBottomRightRadius": "4px",
            "borderTopLeftRadius": "4px",
            "borderTopRightRadius": "4px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "4%"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "32px",
              "display": false
            },
            "props": {
              "style": {
                "classes": "KPIs/KPI_Title",
                "paddingLeft": "10px"
              },
              "text": "NIGHTLY TICKETS"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Label_0"
                },
                "position": {
                  "basis": "171px"
                },
                "props": {
                  "style": {
                    "classes": "KPIs/KPI_Title",
                    "paddingLeft": "10px"
                  },
                  "text": "NIGHTLY TICKETS"
                },
                "type": "ia.display.label"
              },
              {
                "meta": {
                  "name": "FlexContainer"
                },
                "position": {
                  "basis": "350px"
                },
                "type": "ia.container.flex"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "draggable": false,
                        "id": "NightlyTickets_Graph",
                        "modal": true,
                        "overlayDismiss": false,
                        "resizable": false,
                        "showCloseIcon": false,
                        "type": "open",
                        "viewParams": {
                          "seasonId": "{view.params.seasonId}"
                        },
                        "viewPath": "WinterShelter/Overview/Dashboard/Main/template/NightlyTickets_Graph",
                        "viewportBound": false
                      },
                      "scope": "C",
                      "type": "popup"
                    }
                  }
                },
                "meta": {
                  "name": "Image"
                },
                "position": {
                  "basis": "20px"
                },
                "props": {
                  "fit": {
                    "height": 15,
                    "mode": "absolute",
                    "width": 15
                  },
                  "source": "/system/images/SVGs/Navigation Arrow Box.svg",
                  "style": {
                    "cursor": "pointer",
                    "marginLeft": "10px",
                    "marginRight": "10px",
                    "marginTop": "10px"
                  },
                  "tint": {
                    "color": "#0D80E3"
                  }
                },
                "type": "ia.display.image"
              }
            ],
            "meta": {
              "name": "Labels"
            },
            "position": {
              "basis": "35px"
            },
            "props": {
              "style": {
                "classes": "Background/Default",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "LineChart_0"
            },
            "position": {
              "basis": "50%",
              "grow": 1,
              "shrink": 0
            },
            "propConfig": {
              "props.options.xaxis.group.groups": {
                "binding": {
                  "config": {
                    "path": "view.params.seasonId"
                  },
                  "transforms": [
                    {
                      "code": "\tseasonId \u003d value\n\tgroups \u003d []\n\tGetYear_PerSeason \u003d system.db.runPrepQuery(\"SELECT s.id,s.Seasons  FROM shelter.Seasons s WHERE s.id \u003d \"+str(seasonId))\n\tif GetYear_PerSeason.getRowCount()\u003e0:\n\t\tstartYear \u003d str(GetYear_PerSeason.getValueAt(0,1)).split(\u0027-\u0027)[0]\n\t\tendYear \u003d str(GetYear_PerSeason.getValueAt(0,1)).split(\u0027-\u0027)[1]\n\t\tif(int(endYear)%4\u003d\u003d0 and int(endYear)%100!\u003d0 or int(endYear)%400\u003d\u003d0):\n\t\t    print(\"The year is a leap year!\")\n\t\t    febCol \u003d 29\n\t\telse:\n\t\t    print(\"The year isn\u0027t a leap year!\")\n\t\t    febCol \u003d 28\n\t\tgroups \u003d [{\"cols\": 30,\"title\": \"NOV\"},{\"cols\": 31,\"title\": \"DEC\"},{\"cols\": 31,\"title\": \"JAN\"},{\"cols\": febCol,\"title\": \"FEB\"},{\"cols\": 31,\"title\": \"MAR\"}]\n\treturn groups",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.series": {
                "binding": {
                  "config": {
                    "path": "view.params.seasonId"
                  },
                  "transforms": [
                    {
                      "code": "\tseasonId \u003d value\n\tseries \u003d []\n\tGetYear_PerSeason \u003d system.db.runPrepQuery(\"SELECT s.id,s.Seasons  FROM shelter.Seasons s WHERE s.id \u003d \"+str(seasonId))\n\tif GetYear_PerSeason.getRowCount()\u003e0:\n\t\tstartYear \u003d str(GetYear_PerSeason.getValueAt(0,1)).split(\u0027-\u0027)[0]\n\t\tendYear \u003d str(GetYear_PerSeason.getValueAt(0,1)).split(\u0027-\u0027)[1]\n\t\tTicketTypes \u003d [\u0027Regular\u0027,\u0027Plus\u0027,\u0027Double Plus\u0027,\u0027If Room\u0027]\n\t\t\n\t\tfor i in range(0,len(TicketTypes)):\n\t\t\tticketLable \u003d TicketTypes[i]\n\t\t\tdata \u003d []\n\t\t\tmonth_list \u003d {\u002711\u0027:\u0027November\u0027,\u002712\u0027:\u0027December\u0027,\u00271\u0027:\u0027January\u0027,\u00272\u0027:\u0027February\u0027,\u00273\u0027:\u0027March\u0027}\n\t\t\tfor month in month_list:\n\t\t\t\tif month in [\u002711\u0027,\u002712\u0027]:\n\t\t\t\t\tyear \u003d startYear\n\t\t\t\telse:\n\t\t\t\t\tyear \u003d endYear\n\t\t\t\tget_nightlyTickets \u003d system.db.runNamedQuery(\u0027WinterShelter/Overview/GetNightlyTickets\u0027,{\u0027seasonId\u0027:seasonId,\u0027month\u0027:month_list[month],\u0027month_int\u0027:int(month),\u0027year\u0027:year})\n\t\n\t\t\t\tif get_nightlyTickets.getRowCount()\u003e0:\n\t\t\t\t\tfor j in range(0,get_nightlyTickets.getRowCount()):\n\t\t\t\t\t\tif ticketLable \u003d\u003d \u0027Regular\u0027:\n\t\t\t\t\t\t\ttotalTickets \u003d get_nightlyTickets.getValueAt(j,\u0027regularTickets\u0027)\n\t\t\t\t\t\telif ticketLable \u003d\u003d \u0027Plus\u0027:\n\t\t\t\t\t\t\ttotalTickets \u003d get_nightlyTickets.getValueAt(j,\u0027plusTickets\u0027)\n\t\t\t\t\t\telif ticketLable \u003d\u003d \u0027Double Plus\u0027:\n\t\t\t\t\t\t\ttotalTickets \u003d get_nightlyTickets.getValueAt(j,\u0027doublePlusTickets\u0027)\n\t\t\t\t\t\telif ticketLable \u003d\u003d \u0027If Room\u0027:\n\t\t\t\t\t\t\ttotalTickets \u003d get_nightlyTickets.getValueAt(j,\u0027ifRoomTickets\u0027)\n\t\t\t\t\t\t\n\t\t\t\t\t\tif totalTickets \u003d\u003d None:\n\t\t\t\t\t\t\ttotalTickets \u003d 0\n\t#\t\t\t\t\tdata.append(totalTickets)\n\t\t\t\t\t\tdata.append({\n\t\t\t\t\t\t\t\t\t\"x\": (month[0:3]).upper(),\n\t\t\t\t\t\t\t        \"y\": totalTickets,\n\t\t\t\t\t\t\t        \"date\": system.date.format(get_nightlyTickets.getValueAt(j,\u0027date_all\u0027),\u0027yyyy-MM-dd\u0027)\n\t\t\t\t\t\t\t      })\n\t\t\t\telse:\n\t#\t\t\t\tdata.append(0)\n\t\t\t\t\tdata.append({\n\t\t\t\t\t\t        \"x\": (month[0:3]).upper(),\n\t\t\t\t\t\t        \"y\": 0\n\t\t\t\t\t\t      })\n\t\t\tseries.append({\"data\":data,\"name\":ticketLable})\n\n\treturn series",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "options": {
                "annotations": {},
                "chart": {
                  "animations": {
                    "easing": "swing",
                    "enabled": false
                  },
                  "background": "",
                  "fontFamily": "Roboto",
                  "foreColor": "#333",
                  "height": 200,
                  "id": "idsy9",
                  "toolbar": {
                    "show": false,
                    "tools": {
                      "pan": true,
                      "reset": true,
                      "selection": true,
                      "zoom": true,
                      "zoomin": true,
                      "zoomout": true
                    }
                  },
                  "type": "line",
                  "width": 480
                },
                "colors": [
                  "#19F708",
                  "#67b7dc",
                  "#0C4E85",
                  "#FF7a59",
                  "#0db9a5",
                  "#EA8D13"
                ],
                "dataLabels": {
                  "style": {
                    "fontWeight": 700
                  }
                },
                "grid": {
                  "padding": {
                    "bottom": -5,
                    "left": 2,
                    "right": 2,
                    "top": -20
                  }
                },
                "legend": {
                  "fontFamily": "Gibsonbook",
                  "fontSize": 11,
                  "itemMargin": {
                    "vertical": 5
                  },
                  "offsetY": 10
                },
                "markers": {
                  "hover": {
                    "sizeOffset": 6
                  }
                },
                "plotOptions": {
                  "bar": {
                    "borderRadius": 10,
                    "borderRadiusApplication": "end",
                    "borderRadiusWhenStacked": "last",
                    "dataLabels": {
                      "total": {
                        "enabled": false,
                        "offsetX": 0,
                        "offsetY": 0,
                        "style": {
                          "color": "#373d3f",
                          "fontSize": "12px",
                          "fontWeight": 600
                        }
                      }
                    },
                    "hideZeroBarsWhenGrouped": false,
                    "isDumbbell": false,
                    "isFunnel": false,
                    "isFunnel3d": true
                  },
                  "bubble": {
                    "zScaling": true
                  },
                  "pie": {
                    "donut": {
                      "labels": {
                        "name": {},
                        "total": {},
                        "value": {}
                      }
                    }
                  },
                  "radialBar": {
                    "dataLabels": {
                      "name": {},
                      "total": {},
                      "value": {}
                    },
                    "hollow": {
                      "background": "#fff"
                    }
                  },
                  "treemap": {
                    "dataLabels": {
                      "format": "scale"
                    }
                  }
                },
                "stroke": {
                  "curve": "smooth",
                  "fill": {
                    "gradient": {
                      "colorStops": [],
                      "inverseColors": true,
                      "opacityFrom": 1,
                      "opacityTo": 1,
                      "shade": "dark",
                      "shadeIntensity": 0.5,
                      "stops": [
                        0,
                        50,
                        100
                      ],
                      "type": "horizontal"
                    },
                    "opacity": 0.85,
                    "type": "solid"
                  },
                  "width": 1
                },
                "theme": {
                  "palette": "palette4"
                },
                "tooltip": {
                  "shared": true,
                  "style": {
                    "fontFamily": "Gibsonbook",
                    "fontsize": "10px"
                  },
                  "y": {
                    "formatter": "function(value, { series, seriesIndex, dataPointIndex, w }) {\n      var data \u003d w.globals.initialSeries[seriesIndex].data[dataPointIndex];\n           return ((!value) ? 0 :value.toLocaleString()) + \u0027 (\u0027 + data.date +\u0027)\u0027\n    }\n"
                  }
                },
                "xaxis": {
                  "axisTicks": {
                    "color": "#668FB0"
                  },
                  "categories": [
                    "NOV",
                    "DEC",
                    "JAN",
                    "FEB",
                    "MAR"
                  ],
                  "group": {
                    "style": {
                      "colors": [],
                      "cssClass": "",
                      "fontSize": "10px",
                      "fontWeight": 400
                    }
                  },
                  "labels": {
                    "style": {
                      "fontFamily": "Gibsonbook",
                      "fontSize": 10
                    },
                    "trim": false
                  },
                  "tickAmount": "dataPoints",
                  "tickPlacement": "between",
                  "title": {
                    "style": {}
                  },
                  "type": "value"
                },
                "yaxis": {
                  "labels": {
                    "style": {
                      "fontFamily": "Gibsonbook",
                      "fontSize": 10
                    }
                  },
                  "title": {
                    "style": {
                      "fontWeight": 700
                    }
                  }
                }
              },
              "style": {
                "color": "#000000",
                "padding": "24px"
              }
            },
            "type": "kyvislabs.display.apexchart"
          }
        ],
        "meta": {
          "name": "Bottom"
        },
        "position": {
          "basis": "48%",
          "shrink": 0
        },
        "props": {
          "direction": "column",
          "style": {
            "backgroundColor": "#FFFFFF",
            "borderBottomLeftRadius": "4px",
            "borderBottomRightRadius": "4px",
            "borderTopLeftRadius": "4px",
            "borderTopRightRadius": "4px"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Alternative"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "WS_TotalBeds",
          "pageScope": true,
          "script": "\t# export relevant data\n\timport traceback\n\ttry:\n\t\tselectedMenu \u003d self.getChild(\"Top\").getChild(\"Menu\").getChild(\"month\").props.params.selection\n\t\theaders \u003d [\u0027 \u0027, \u0027November\u0027,\u0027December\u0027,\u0027January\u0027,\u0027February\u0027,\u0027March\u0027]\n\t\trows \u003d []\n\t\texportExcel \u003d True\n\t\tif \u0027Week\u0027 in selectedMenu:\n\t\t\tmonthValues \u003d [\u0027\u0027,\n\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"November\").getChild(\"header\").props.params.label2),\n\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"December\").getChild(\"header\").props.params.label2),\n\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"January\").getChild(\"header\").props.params.label2),\n\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"February\").getChild(\"header\").props.params.label2),\n\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"March\").getChild(\"header\").props.params.label2)\n\t\t\t\t\t\t\t]\n\t\t\trows.append(monthValues)\n\t\t\trows.append([\u0027Week1\u0027, \n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"November\").getChild(\"Week1\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"December\").getChild(\"Week1\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"January\").getChild(\"Week1\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"February\").getChild(\"Week1\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"March\").getChild(\"Week1\").props.params.label)\n\t\t\t\t\t\t])\n\t\t\trows.append([\u0027Week2\u0027, \n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"November\").getChild(\"Week2\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"December\").getChild(\"Week2\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"January\").getChild(\"Week2\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"February\").getChild(\"Week2\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"March\").getChild(\"Week2\").props.params.label)\n\t\t\t\t\t\t])\n\t\t\trows.append([\u0027Week3\u0027, \n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"November\").getChild(\"Week3\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"December\").getChild(\"Week3\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"January\").getChild(\"Week3\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"February\").getChild(\"Week3\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"March\").getChild(\"Week3\").props.params.label)\n\t\t\t\t\t\t])\n\t\t\trows.append([\u0027Week4\u0027, \n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"November\").getChild(\"Week4\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"December\").getChild(\"Week4\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"January\").getChild(\"Week4\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"February\").getChild(\"Week4\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"March\").getChild(\"Week4\").props.params.label)\n\t\t\t\t\t\t])\n\t\t\trows.append([\u0027Week5\u0027, \n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"November\").getChild(\"Week5\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"December\").getChild(\"Week5\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"January\").getChild(\"Week5\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"February\").getChild(\"Week5\").props.params.label),\n\t\t\t\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Week\").getChild(\"March\").getChild(\"Week5\").props.params.label)\n\t\t\t\t\t\t])\n\t\telif \u0027Day\u0027 in selectedMenu:\n\t\t\n\t\t\trows.append([\u0027\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"header\").props.params.label2),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"header\").props.params.label2),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"header\").props.params.label2),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"header\").props.params.label2),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"header\").props.params.label2)\n\t\t\t])\n\t\t\t\n\t\t\trows.append([\u0027Mon\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"Mon\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"Mon\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"Mon\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"Mon\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"Mon\").props.params.label)\n\t\t\t])\n\t\t\t\n\t\t\trows.append([\u0027Tue\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"Tue\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"Tue\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"Tue\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"Tue\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"Tue\").props.params.label)\n\t\t\t])\n\t\t\t\n\t\t\trows.append([\u0027Wed\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"Wed\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"Wed\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"Wed\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"Wed\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"Wed\").props.params.label)\n\t\t\t])\n\t\t\t\n\t\t\trows.append([\u0027Thu\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"Thu\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"Thu\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"Thu\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"Thu\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"Thu\").props.params.label)\n\t\t\t])\n\t\t\t\n\t\t\trows.append([\u0027Fri\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"Fri\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"Fri\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"Fri\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"Fri\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"Fri\").props.params.label)\n\t\t\t])\n\t\t\t\n\t\t\trows.append([\u0027Sat\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"Sat\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"Sat\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"Sat\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"Sat\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"Sat\").props.params.label)\n\t\t\t])\n\t\t\t\n\t\t\trows.append([\u0027Sun\u0027,\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"November\").getChild(\"Sun\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"December\").getChild(\"Sun\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"January\").getChild(\"Sun\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"February\").getChild(\"Sun\").props.params.label),\n\t\t\tround(self.getChild(\"Top\").getChild(\"Grid_Day\").getChild(\"FlexContainer\").getChild(\"March\").getChild(\"Sun\").props.params.label)\n\t\t\t])\n\t\telse:\n\t\t\texportExcel \u003d False\n\t\t\n\t\tif exportExcel:\n\t\t\tfilename \u003d \u0027WinterShelter_Overview_\u0027 + selectedMenu + \u0027_\u0027 +  self.view.custom.seasonName + \u0027.xls\u0027\n\t\t\tdataset \u003d system.dataset.toDataSet(headers, rows)\n\t\t\txlFile \u003d system.dataset.toExcel(True,dataset)\n\t\t\tsystem.perspective.download(filename, xlFile)\n\texcept:   \n\t\tlogger \u003d system.util.getLogger(\"Wintershelter Overview Dashboard Total Beds tableToExcel\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)",
          "sessionScope": true,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}