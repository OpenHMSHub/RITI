{
  "custom": {},
  "params": {
    "facilityId": 1
  },
  "propConfig": {
    "params.facilityId": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 2600,
      "width": 1436
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Header"
        },
        "position": {
          "basis": "25px"
        },
        "props": {
          "params": {
            "Text": "Winter Shelter Settings"
          },
          "path": "1_TEMPLATES/Header/Header",
          "style": {
            "borderTopLeftRadius": "8px",
            "borderTopRightRadius": "8px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Input_Value"
                },
                "position": {
                  "basis": "320px",
                  "grow": 1
                },
                "propConfig": {
                  "props.params.value": {
                    "binding": {
                      "config": {
                        "expression": "lookup({/root.custom.settingsData},\u0027minimin_beds_threshold\u0027,0,\u0027settingName\u0027,\u0027settingValue\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "params": {
                    "label": "Minimum Beds Threshold",
                    "placeholder": "placeholder"
                  },
                  "path": "1_TEMPLATES/Input_Value_BoldHeader"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Row1"
            },
            "position": {
              "basis": "80px"
            },
            "props": {
              "style": {
                "classes": "ActivityCards/Card",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "ParticipantLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "Participants Check-In"
                  },
                  "path": "WinterShelter/Templates/Label_Bold"
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Input_Checkbox"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027allow_suspended_participants\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Allow Suspended Participants"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Input_Checkbox_0"
                    },
                    "position": {
                      "basis": "340px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027allow_participants_without_winter_shelter\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Allow Participants without Winter Shelter Program"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Input_Checkbox_1"
                    },
                    "position": {
                      "basis": "300px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027allow_participants_with_partial_registration\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Allow Participants with Partial Registration"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "ParticipantCheckInSettings"
                },
                "position": {
                  "basis": "55px"
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row2"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Input_Checkbox"
                },
                "position": {
                  "basis": "220px"
                },
                "propConfig": {
                  "props.params.checked": {
                    "binding": {
                      "config": {
                        "expression": "lookup({/root.custom.settingsData},\u0027disable_checkin_for_past_dates\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Disable Check-in for Past Dates"
                  },
                  "path": "WinterShelter/Templates/Input_Checkbox_Bold"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Row3"
            },
            "position": {
              "basis": "55px"
            },
            "props": {
              "alignItems": "flex-start",
              "style": {
                "classes": "ActivityCards/Card",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "NotificationsSettingsLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "Support Ticket Notifications"
                  },
                  "path": "WinterShelter/Templates/Label_Bold"
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "newTicket"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027support_ticket_notifications_new_ticket\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "New Ticket"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "ticketUpdates"
                    },
                    "position": {
                      "basis": "340px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027support_ticket_notifications_ticket_updates\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Ticket Updates"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailAddress"
                    },
                    "position": {
                      "basis": "300px"
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027support_ticket_notifications_email\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Recipient Email Address",
                        "placeholder": "Enter Email"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "SupportTikcetNotificationSettings"
                },
                "position": {
                  "basis": "65px"
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row4"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "NotificationsSettingsLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "WS Tasks Notifications"
                  },
                  "path": "WinterShelter/Templates/Label_Bold"
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "newTask"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027NewTaskEmail_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "New Task"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "taskReminder"
                    },
                    "position": {
                      "basis": "340px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027TaskReminderEmail_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Task Reminder"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "WSTaskNotificationSettings"
                },
                "position": {
                  "basis": "65px"
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row8"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "EmailLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "What To Expect Email"
                  },
                  "path": "WinterShelter/Templates/Label_Bold"
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "isEmailEnable"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027WhatToExpectEmail_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Enable Email"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailTime"
                    },
                    "position": {
                      "basis": "340px"
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027WhatToExpectEmail_Time\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Time (number of days before event)",
                        "placeholder": "Enter Email Timing"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "marginLeft": "20px",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailText"
                    },
                    "position": {
                      "basis": "340px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027WhatToExpectEmail_Text\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Text",
                        "placeholder": "Enter Email Text"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "EmailSettings"
                },
                "position": {
                  "basis": "95px",
                  "grow": 1
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row5"
            },
            "position": {
              "basis": "340px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "marginBottom": "0px",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "EmailLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "WS Beds Capacity vs Allotment Email"
                  },
                  "path": "WinterShelter/Templates/Label_Bold",
                  "style": {
                    "marginTop": "10px"
                  }
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "isEmailEnable"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027BedsCapacityVsAllotmentEmail_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Enable Email"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailTime"
                    },
                    "position": {
                      "basis": "340px",
                      "display": false
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "//lookup({/root.custom.settingsData},\u0027BedsCapacityVsAllotmentEmail_Time\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)\r\n0"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Time (number of days before event)",
                        "placeholder": "Enter Email Timing"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "marginLeft": "20px",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailText"
                    },
                    "position": {
                      "basis": "340px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027BedsCapacityVsAllotmentEmail_Text\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Text",
                        "placeholder": "Enter Email Text"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "marginLeft": "20px",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "EmailSettings"
                },
                "position": {
                  "basis": "65px",
                  "grow": 1
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row6"
            },
            "position": {
              "basis": "190px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "marginBottom": "0px",
                "marginTop": "0px",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "EmailLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "WS Schedule Reminder"
                  },
                  "path": "WinterShelter/Templates/Label_Bold",
                  "style": {
                    "marginTop": "10px"
                  }
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "isEmailEnable"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027ScheduleReminderEmail_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Enable Email"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailTime"
                    },
                    "position": {
                      "basis": "340px"
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027ScheduleReminderEmail_Time\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Time (number of days before event)",
                        "placeholder": "Enter Email Timing"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "marginLeft": "20px",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailText"
                    },
                    "position": {
                      "basis": "340px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027ScheduleReminderEmail_Text\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Text",
                        "placeholder": "Enter Email Text"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "EmailSettings"
                },
                "position": {
                  "basis": "65px",
                  "grow": 1
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "isEmailEnable"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027ScheduleReminderText_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Enable Text"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailTime"
                    },
                    "position": {
                      "basis": "340px"
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027ScheduleReminderText_Time\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Text Time (number of days before event)",
                        "placeholder": "Enter Email Timing"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "marginLeft": "20px",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailText"
                    },
                    "position": {
                      "basis": "340px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027ScheduleReminderText_Message\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Text Message",
                        "placeholder": "Enter Email Text"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "SMSSettings"
                },
                "position": {
                  "basis": "65px",
                  "grow": 1
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row7"
            },
            "position": {
              "basis": "255px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "marginTop": "0px",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "EmailLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "Initial Email with Portal Access"
                  },
                  "path": "WinterShelter/Templates/Label_Bold"
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "isEmailEnable"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027PortalAccessEmail_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Enable Email"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailTime"
                    },
                    "position": {
                      "basis": "340px",
                      "display": false
                    },
                    "props": {
                      "params": {
                        "label": "Email Time (number of days before event)",
                        "placeholder": "Enter Email Timing",
                        "text": "3"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "marginLeft": "20px",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailText"
                    },
                    "position": {
                      "basis": "340px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027PortalAccessEmail_Text\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Text",
                        "placeholder": "Enter Email Text"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "EmailSettings"
                },
                "position": {
                  "basis": "95px",
                  "grow": 1
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row9"
            },
            "position": {
              "basis": "305px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "marginBottom": "0px",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "EmailLabel"
                },
                "position": {
                  "basis": "35px"
                },
                "props": {
                  "params": {
                    "text": "Post Registration Email"
                  },
                  "path": "WinterShelter/Templates/Label_Bold"
                },
                "type": "ia.display.view"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "isEmailEnable"
                    },
                    "position": {
                      "basis": "220px"
                    },
                    "propConfig": {
                      "props.params.checked": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027PostRegistrationEmail_Enable\u0027,true,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "text": "Enable Email"
                      },
                      "path": "WinterShelter/Templates/Input_Checkbox",
                      "style": {
                        "marginTop": 2
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailTime"
                    },
                    "position": {
                      "basis": "340px",
                      "display": false
                    },
                    "props": {
                      "params": {
                        "label": "Email Time (number of days before event)",
                        "placeholder": "Enter Email Timing",
                        "text": "3"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "marginLeft": "20px",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "emailText"
                    },
                    "position": {
                      "basis": "340px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.params.text": {
                        "binding": {
                          "config": {
                            "expression": "lookup({/root.custom.settingsData},\u0027PostRegistrationEmail_Text\u0027,None,\u0027settingName\u0027,\u0027settingValue\u0027)"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "label": "Email Text",
                        "placeholder": "Enter Email Text"
                      },
                      "path": "WinterShelter/Templates/Input_Text",
                      "style": {
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "EmailSettings"
                },
                "position": {
                  "basis": "95px",
                  "grow": 1
                },
                "props": {
                  "style": {
                    "overflow": "hidden",
                    "paddingTop": 5
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row10"
            },
            "position": {
              "basis": "305px"
            },
            "props": {
              "direction": "column",
              "style": {
                "classes": "ActivityCards/Card",
                "marginBottom": "0px",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Settings"
        },
        "position": {
          "basis": "1900px"
        },
        "props": {
          "direction": "column",
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\timport time\n\t\t\n\ttry:\n\t\t## read all settings one by one and update\n\t\t## get min beds threshold\n\t\tbedsThresholdValue \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row1\").getChild(\"Input_Value\").props.params.value\n\t\t\n\t\t## get allow checkin for suspended participants\n\t\tallowSuspended \u003d \u0027true\u0027\n\t\tif self.parent.parent.getChild(\"Settings\").getChild(\"Row2\").getChild(\"ParticipantCheckInSettings\").getChild(\"Input_Checkbox\").props.params.checked \u003d\u003d False:\n\t\t\tallowSuspended \u003d \u0027false\u0027\n\t\t## get allow checkin for participants without winter shelter program\n\t\tallowWithoutShelterProgram \u003d \u0027true\u0027\n\t\tif self.parent.parent.getChild(\"Settings\").getChild(\"Row2\").getChild(\"ParticipantCheckInSettings\").getChild(\"Input_Checkbox_0\").props.params.checked \u003d\u003d False:\n\t\t\tallowWithoutShelterProgram \u003d \u0027false\u0027\n\t\t\n\t\t## get allow checkin for participants with partial registration\n\t\tallowWithPartialRegistration \u003d \u0027true\u0027\n\t\tif self.parent.parent.getChild(\"Settings\").getChild(\"Row2\").getChild(\"ParticipantCheckInSettings\").getChild(\"Input_Checkbox_1\").props.params.checked \u003d\u003d False:\n\t\t\tallowWithPartialRegistration \u003d \u0027false\u0027\n\t\t\t\n\t\t## get disable checkin for past dates\n\t\tdisableForPastDates \u003d \u0027false\u0027\n\t\tif self.parent.parent.getChild(\"Settings\").getChild(\"Row3\").getChild(\"Input_Checkbox\").props.params.checked \u003d\u003d True:\n\t\t\tdisableForPastDates \u003d \u0027true\u0027\n\t\t\t\n\t\t## support ticket notification settings\n\t\temailAddress \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row4\").getChild(\"SupportTikcetNotificationSettings\").getChild(\"emailAddress\").props.params.text\n\t\t\n\t\talertForNewTickets \u003d \u0027false\u0027\n\t\tif self.parent.parent.getChild(\"Settings\").getChild(\"Row4\").getChild(\"SupportTikcetNotificationSettings\").getChild(\"newTicket\").props.params.checked \u003d\u003d True:\n\t\t\talertForNewTickets \u003d \u0027true\u0027\n\t\talertForTicketUpdates \u003d \u0027false\u0027\n\t\tif self.parent.parent.getChild(\"Settings\").getChild(\"Row4\").getChild(\"SupportTikcetNotificationSettings\").getChild(\"ticketUpdates\").props.params.checked \u003d\u003d True:\n\t\t\talertForTicketUpdates \u003d \u0027true\u0027\n\t\t\n\t\t#get EmailSetting\n\t\tWhatToExpectEmail_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row5\").getChild(\"EmailSettings\").getChild(\"isEmailEnable\").props.params.checked\n\t\tWhatToExpectEmail_Time \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row5\").getChild(\"EmailSettings\").getChild(\"emailTime\").props.params.text\n\t\tWhatToExpectEmail_Text \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row5\").getChild(\"EmailSettings\").getChild(\"emailText\").props.params.text\n\t\tBedsCapacityVsAllotmentEmail_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row6\").getChild(\"EmailSettings\").getChild(\"isEmailEnable\").props.params.checked\n#\t\tBedsCapacityVsAllotmentEmail_Time \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row6\").getChild(\"EmailSettings\").getChild(\"emailTime\").props.params.text\n\t\tBedsCapacityVsAllotmentEmail_Text \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row6\").getChild(\"EmailSettings\").getChild(\"emailText\").props.params.text\n\t\tScheduleReminderEmail_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row7\").getChild(\"EmailSettings\").getChild(\"isEmailEnable\").props.params.checked\n\t\tScheduleReminderEmail_Time \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row7\").getChild(\"EmailSettings\").getChild(\"emailTime\").props.params.text\n\t\tScheduleReminderEmail_Text \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row7\").getChild(\"EmailSettings\").getChild(\"emailText\").props.params.text\n\t\t\n\t\tScheduleReminderText_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row7\").getChild(\"SMSSettings\").getChild(\"isEmailEnable\").props.params.checked\n\t\tScheduleReminderText_Time \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row7\").getChild(\"SMSSettings\").getChild(\"emailTime\").props.params.text\n\t\tScheduleReminderText_Message \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row7\").getChild(\"SMSSettings\").getChild(\"emailText\").props.params.text\n\t\t\t\t\n\t\tNewTaskEmail_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row8\").getChild(\"WSTaskNotificationSettings\").getChild(\"newTask\").props.params.checked\n\t\tTaskReminderEmail_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row8\").getChild(\"WSTaskNotificationSettings\").getChild(\"taskReminder\").props.params.checked\n\t\t\n\t\tPortalAccessEmail_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row9\").getChild(\"EmailSettings\").getChild(\"isEmailEnable\").props.params.checked\n\t\tPortalAccessEmail_Text \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row9\").getChild(\"EmailSettings\").getChild(\"emailText\").props.params.text\n\t\tPostRegistrationEmail_Enable \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row10\").getChild(\"EmailSettings\").getChild(\"isEmailEnable\").props.params.checked\n\t\tPostRegistrationEmail_Text \u003d self.parent.parent.getChild(\"Settings\").getChild(\"Row10\").getChild(\"EmailSettings\").getChild(\"emailText\").props.params.text\n\t\t\t\t\t\t\t\t\n\t\tupdateSettingQ \u003d \"UPDATE shelter.Settings set settingValue \u003d ? WHERE settingName \u003d ?\"\n\t\t\n\t\t## execute the updated statement for all settings one by one\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[str(bedsThresholdValue),\u0027minimin_beds_threshold\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[allowSuspended,\u0027allow_suspended_participants\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[allowWithoutShelterProgram,\u0027allow_participants_without_winter_shelter\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[allowWithPartialRegistration,\u0027allow_participants_with_partial_registration\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[disableForPastDates,\u0027disable_checkin_for_past_dates\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[emailAddress,\u0027support_ticket_notifications_email\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[alertForNewTickets,\u0027support_ticket_notifications_new_ticket\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[alertForTicketUpdates,\u0027support_ticket_notifications_ticket_updates\u0027])\n\t\t# email settings\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if WhatToExpectEmail_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027WhatToExpectEmail_Enable\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[WhatToExpectEmail_Time,\u0027WhatToExpectEmail_Time\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[WhatToExpectEmail_Text,\u0027WhatToExpectEmail_Text\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if BedsCapacityVsAllotmentEmail_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027BedsCapacityVsAllotmentEmail_Enable\u0027])\n#\t\tsystem.db.runPrepUpdate(updateSettingQ,[BedsCapacityVsAllotmentEmail_Time,\u0027BedsCapacityVsAllotmentEmail_Time\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[BedsCapacityVsAllotmentEmail_Text,\u0027BedsCapacityVsAllotmentEmail_Text\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if ScheduleReminderEmail_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027ScheduleReminderEmail_Enable\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[ScheduleReminderEmail_Time,\u0027ScheduleReminderEmail_Time\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[ScheduleReminderEmail_Text,\u0027ScheduleReminderEmail_Text\u0027])\n\t\t\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if ScheduleReminderText_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027ScheduleReminderText_Enable\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[ScheduleReminderText_Time,\u0027ScheduleReminderText_Time\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[ScheduleReminderText_Message,\u0027ScheduleReminderText_Message\u0027])\n\t\t\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if NewTaskEmail_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027NewTaskEmail_Enable\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if TaskReminderEmail_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027TaskReminderEmail_Enable\u0027])\n\t\t\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if PortalAccessEmail_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027PortalAccessEmail_Enable\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[PortalAccessEmail_Text,\u0027PortalAccessEmail_Text\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[\u0027true\u0027 if PostRegistrationEmail_Enable\u003d\u003dTrue else \u0027false\u0027,\u0027PostRegistrationEmail_Enable\u0027])\n\t\tsystem.db.runPrepUpdate(updateSettingQ,[PostRegistrationEmail_Text,\u0027PostRegistrationEmail_Text\u0027])\n\t\t\t\t\n\t\tself.parent.parent.getChild(\"Error\").props.text \u003d \"Settings updated successfully.\"\n\t\tself.view.getChild(\"root\").refreshBinding(\"custom.settingsData\")\n\texcept Exception as e:\n\t\tsystem.perspective.print(str(e))\n\t\tself.parent.parent.getChild(\"Error\").props.text \u003d \"Update error. Try again ...\"\n\t\n\ttime.sleep(3)\n\t## clear the message\n\tself.parent.parent.getChild(\"Error\").props.text \u003d \"\"\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Update"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "margin": 2
              },
              "text": "Update"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Filler"
            },
            "position": {
              "basis": "200px"
            },
            "type": "ia.container.flex"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.parent.parent.getChild(\"Settings\").getChild(\"Row1\").getChild(\"Input_Value\").refreshBinding(\"props.params.value\")\n\tself.parent.parent.getChild(\"Settings\").getChild(\"Row2\").getChild(\"ParticipantCheckInSettings\").getChild(\"Input_Checkbox\").refreshBinding(\"props.params.checked\")\n\tself.parent.parent.getChild(\"Settings\").getChild(\"Row2\").getChild(\"ParticipantCheckInSettings\").getChild(\"Input_Checkbox_0\").refreshBinding(\"props.params.checked\")\n\tself.parent.parent.getChild(\"Settings\").getChild(\"Row2\").getChild(\"ParticipantCheckInSettings\").getChild(\"Input_Checkbox_1\").refreshBinding(\"props.params.checked\")\n\tself.parent.parent.getChild(\"Settings\").getChild(\"Row3\").getChild(\"Input_Checkbox\").refreshBinding(\"props.params.checked\")\n\tself.parent.parent.getChild(\"Settings\").getChild(\"Row4\").getChild(\"SupportTikcetNotificationSettings\").getChild(\"newTicket\").refreshBinding(\"props.params.checked\")\n\tself.parent.parent.getChild(\"Settings\").getChild(\"Row4\").getChild(\"SupportTikcetNotificationSettings\").getChild(\"ticketUpdates\").refreshBinding(\"props.params.checked\")\n\tself.parent.parent.getChild(\"Settings\").getChild(\"Row4\").getChild(\"SupportTikcetNotificationSettings\").getChild(\"emailAddress\").refreshBinding(\"props.params.text\")"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Clear"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "margin": 2
              },
              "text": "CANCEL"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "Buttons"
        },
        "position": {
          "basis": "40px"
        },
        "props": {
          "style": {
            "classes": "ActivityCards/Card",
            "overflow": "hidden",
            "paddingLeft": 13,
            "paddingRight": 13
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Error"
        },
        "position": {
          "basis": "25px"
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Filler1"
                },
                "position": {
                  "basis": "20px"
                },
                "props": {
                  "style": {
                    "backgroundColor": "#EFEFEE",
                    "overflow": "hidden"
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Serve CalendarLabel"
                    },
                    "position": {
                      "basis": "228px"
                    },
                    "props": {
                      "params": {
                        "text": "Serve Calendar : Most Needed"
                      },
                      "path": "WinterShelter/Templates/Label_Bold"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "ServeCalender_Filler"
                },
                "position": {
                  "basis": "30px"
                },
                "props": {
                  "style": {
                    "classes": "ActivityCards/Card",
                    "overflow": "hidden"
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Table"
                        },
                        "position": {
                          "basis": "300px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.params.daysHosting": {
                            "binding": {
                              "config": {
                                "path": "this.props.params.importantDays"
                              },
                              "type": "property"
                            }
                          },
                          "props.params.importantDays": {
                            "binding": {
                              "config": {
                                "parameters": {
                                  "settingName": "\u0027most_needed_dates\u0027"
                                },
                                "queryPath": "WinterShelterGlobal/Settings/GetOneSettingValue"
                              },
                              "transforms": [
                                {
                                  "code": "\tlist \u003d []\n\tif value !\u003d None:\n\t\tsplited_text \u003d value.split(\",\")\n\t\tstartYear \u003d self.props.params.startYear\n\t\tdateStartingLimit \u003d system.date.getDate(startYear, 5, 1)\n\t\tdateEndingLimit \u003d system.date.getDate(startYear+1, 4, 1)\n\t\tfor text in splited_text:\n\t\t\tif text!\u003dNone and text!\u003d\u0027\u0027:\n\t\t\t\tdate \u003d system.date.parse(text,\u0027dd-MM-yyyy\u0027)\n\t\t\t\tif system.date.isBetween(date, dateStartingLimit, dateEndingLimit):\n\t\t\t\t\tdayOfYear \u003d system.date.getDayOfYear(date)\n\t\t\t\t\tlist.append(int(dayOfYear))\n\treturn list",
                                  "type": "script"
                                }
                              ],
                              "type": "query"
                            }
                          }
                        },
                        "props": {
                          "params": {
                            "daysHostingDates": [],
                            "enabled": true,
                            "nights": 0,
                            "startYear": 2025
                          },
                          "path": "WinterShelter/Settings/Cards/Calendar/Table_MostNeeded"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "children": [
                          {
                            "meta": {
                              "name": "Checkbox_0"
                            },
                            "position": {
                              "basis": "30px",
                              "shrink": 0
                            },
                            "props": {
                              "checkedIcon": {
                                "path": "material/circle"
                              },
                              "enabled": false,
                              "style": {
                                "classes": "Text/Add_HeaderText"
                              },
                              "text": "hosting",
                              "uncheckedIcon": {
                                "color": {
                                  "disabled": "#0066FF",
                                  "enabled": "#0066FF"
                                },
                                "path": "material/fiber_manual_record",
                                "style": {
                                  "fontSize": "16px"
                                }
                              }
                            },
                            "type": "ia.input.checkbox"
                          },
                          {
                            "meta": {
                              "name": "Checkbox_2"
                            },
                            "position": {
                              "basis": "30px",
                              "shrink": 0
                            },
                            "props": {
                              "checkedIcon": {
                                "path": "material/circle"
                              },
                              "enabled": false,
                              "style": {
                                "classes": "Text/Add_HeaderText"
                              },
                              "text": "most needed",
                              "uncheckedIcon": {
                                "color": {
                                  "disabled": "#00FF66",
                                  "enabled": "#00FF66"
                                },
                                "path": "material/radio_button_unchecked",
                                "style": {
                                  "fontSize": "16px"
                                }
                              }
                            },
                            "type": "ia.input.checkbox"
                          },
                          {
                            "meta": {
                              "name": "Checkbox"
                            },
                            "position": {
                              "basis": "30px",
                              "shrink": 0
                            },
                            "props": {
                              "checkedIcon": {
                                "path": "material/circle_filled"
                              },
                              "enabled": false,
                              "style": {
                                "classes": "Text/Add_HeaderText",
                                "overflow": "visible"
                              },
                              "text": "not in season",
                              "uncheckedIcon": {
                                "color": {
                                  "disabled": "#dddddd",
                                  "enabled": "#dddddd"
                                },
                                "path": "material/fiber_manual_record",
                                "style": {
                                  "fontSize": "16px"
                                }
                              }
                            },
                            "type": "ia.input.checkbox"
                          }
                        ],
                        "meta": {
                          "name": "FlexContainer"
                        },
                        "position": {
                          "basis": "100px",
                          "display": false,
                          "grow": 1
                        },
                        "props": {
                          "direction": "column",
                          "justify": "center"
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Calendar"
                    },
                    "position": {
                      "basis": "421px",
                      "shrink": 0
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "meta": {
                      "name": "Filler1"
                    },
                    "position": {
                      "basis": "20px"
                    },
                    "type": "ia.container.flex"
                  }
                ],
                "meta": {
                  "name": "Calendar"
                },
                "position": {
                  "basis": "240px"
                },
                "props": {
                  "style": {
                    "classes": "ActivityCards/Card",
                    "overflow": "hidden",
                    "paddingLeft": 13,
                    "paddingRight": 13
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tproject \u003d \"HMS\"\n\tpath \u003d \"WinterShelterGlobal/Settings/UpdateSettingValue\"\n\tDate_list \u003d self.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.daysHostingDates #self.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.daysHosting\n\tGetMostNeededDatesDB \u003d system.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Settings/GetMostNeeded_And_HolidaysDates\",parameters\u003d{\"settingName\": \u0027most_needed_dates\u0027})\n\tSettingValueOld \u003d \u0027\u0027\n\tstartYear \u003d self.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.startYear\n\tdateStartingLimit \u003d system.date.getDate(startYear, 5, 1)\n\tdateEndingLimit \u003d system.date.getDate(startYear+1, 4, 1)\n\tfor i in range(0,GetMostNeededDatesDB.getRowCount()):\n\t\toneDate \u003d GetMostNeededDatesDB.getValueAt(i,0)\n\t\tif oneDate !\u003d None and oneDate !\u003d \u0027\u0027:\n\t\t\tif not system.date.isBetween(system.date.parse(oneDate,\u0027dd-MM-yyyy\u0027), dateStartingLimit, dateEndingLimit):\n\t\t\t\tSettingValueOld \u003d SettingValueOld + oneDate + \u0027,\u0027\n#\tsystem.perspective.print(SettingValueOld)\n#\tSettingValue \u003d str(Date_list)[1:-1]\n\tSettingValue \u003d \u0027\u0027\n\tfor dates in Date_list:\n\t\tformatedDate \u003d  system.date.format(dates,\u0027dd-MM-yyyy\u0027)\n\t\tSettingValue \u003d SettingValue + str(formatedDate) + \u0027,\u0027\n\tSettingValue \u003d SettingValue[:-1]\n#\tsystem.perspective.print(SettingValue)\n\t# concat old and new setting value\n\tSettingValue \u003d SettingValueOld + SettingValue\n\tparameters \u003d {\"settingName\": \u0027most_needed_dates\u0027,\"settingValue\":SettingValue}\n\tUpdateSettingValue \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\t\n\tself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").refreshBinding(\"props.params.importantDays\")\n\tsystem.perspective.print(\"Updated successfully!\")"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "SAVE"
                    },
                    "position": {
                      "basis": "100px"
                    },
                    "props": {
                      "style": {
                        "classes": "Buttons/Main",
                        "margin": 2
                      },
                      "text": "SAVE"
                    },
                    "type": "ia.input.button"
                  },
                  {
                    "meta": {
                      "name": "Filler"
                    },
                    "position": {
                      "basis": "200px"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "events": {
                      "component": {
                        "onActionPerformed": {
                          "config": {
                            "script": "\tself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").refreshBinding(\"props.params.importantDays\")\n\tself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.daysHosting\u003dself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.importantDays"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Clear"
                    },
                    "position": {
                      "basis": "100px"
                    },
                    "props": {
                      "style": {
                        "classes": "Buttons/Delete",
                        "margin": 2
                      },
                      "text": "CANCEL"
                    },
                    "type": "ia.input.button"
                  }
                ],
                "meta": {
                  "name": "Buttons"
                },
                "position": {
                  "basis": "40px"
                },
                "props": {
                  "style": {
                    "classes": "ActivityCards/Card",
                    "overflow": "hidden",
                    "paddingLeft": 13,
                    "paddingRight": 13
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Left"
            },
            "position": {
              "basis": "40%"
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Filler1"
                },
                "position": {
                  "basis": "20px"
                },
                "props": {
                  "style": {
                    "backgroundColor": "#EFEFEE",
                    "overflow": "hidden"
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Serve CalendarLabel"
                    },
                    "position": {
                      "basis": "228px"
                    },
                    "props": {
                      "params": {
                        "text": "Serve Calendar : Holidays Needed"
                      },
                      "path": "WinterShelter/Templates/Label_Bold"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "ServeCalender_Filler"
                },
                "position": {
                  "basis": "30px"
                },
                "props": {
                  "style": {
                    "classes": "ActivityCards/Card",
                    "overflow": "hidden"
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Table"
                        },
                        "position": {
                          "basis": "300px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.params.daysHosting": {
                            "binding": {
                              "config": {
                                "path": "this.props.params.holidaysDays"
                              },
                              "type": "property"
                            }
                          },
                          "props.params.holidaysDays": {
                            "binding": {
                              "config": {
                                "parameters": {
                                  "settingName": "\u0027holidays_needed_dates\u0027"
                                },
                                "queryPath": "WinterShelterGlobal/Settings/GetOneSettingValue"
                              },
                              "transforms": [
                                {
                                  "code": "\tlist \u003d []\n\tif value !\u003d None:\n\t\tsplited_text \u003d value.split(\",\")\n\t\tstartYear \u003d self.props.params.startYear\n\t\tdateStartingLimit \u003d system.date.getDate(startYear, 5, 1)\n\t\tdateEndingLimit \u003d system.date.getDate(startYear+1, 4, 1)\n\t\tfor text in splited_text:\n\t\t\tif text!\u003dNone and text!\u003d\u0027\u0027:\n\t\t\t\tdate \u003d system.date.parse(text,\u0027dd-MM-yyyy\u0027)\n\t\t\t\tif system.date.isBetween(date, dateStartingLimit, dateEndingLimit):\n\t\t\t\t\tdayOfYear \u003d system.date.getDayOfYear(date)\n\t\t\t\t\tlist.append(int(dayOfYear))\n\treturn list",
                                  "type": "script"
                                }
                              ],
                              "type": "query"
                            }
                          }
                        },
                        "props": {
                          "params": {
                            "daysHostingDates": [],
                            "enabled": true,
                            "nights": 0,
                            "startYear": 2025
                          },
                          "path": "WinterShelter/Settings/Cards/Calendar/Table_holidaysNeeded"
                        },
                        "type": "ia.display.view"
                      },
                      {
                        "children": [
                          {
                            "meta": {
                              "name": "Checkbox_0"
                            },
                            "position": {
                              "basis": "30px",
                              "shrink": 0
                            },
                            "props": {
                              "checkedIcon": {
                                "path": "material/circle"
                              },
                              "enabled": false,
                              "style": {
                                "classes": "Text/Add_HeaderText"
                              },
                              "text": "hosting",
                              "uncheckedIcon": {
                                "color": {
                                  "disabled": "#0066FF",
                                  "enabled": "#0066FF"
                                },
                                "path": "material/fiber_manual_record",
                                "style": {
                                  "fontSize": "16px"
                                }
                              }
                            },
                            "type": "ia.input.checkbox"
                          },
                          {
                            "meta": {
                              "name": "Checkbox_2"
                            },
                            "position": {
                              "basis": "30px",
                              "shrink": 0
                            },
                            "props": {
                              "checkedIcon": {
                                "path": "material/circle"
                              },
                              "enabled": false,
                              "style": {
                                "classes": "Text/Add_HeaderText"
                              },
                              "text": "most needed",
                              "uncheckedIcon": {
                                "color": {
                                  "disabled": "#00FF66",
                                  "enabled": "#00FF66"
                                },
                                "path": "material/radio_button_unchecked",
                                "style": {
                                  "fontSize": "16px"
                                }
                              }
                            },
                            "type": "ia.input.checkbox"
                          },
                          {
                            "meta": {
                              "name": "Checkbox"
                            },
                            "position": {
                              "basis": "30px",
                              "shrink": 0
                            },
                            "props": {
                              "checkedIcon": {
                                "path": "material/circle_filled"
                              },
                              "enabled": false,
                              "style": {
                                "classes": "Text/Add_HeaderText",
                                "overflow": "visible"
                              },
                              "text": "not in season",
                              "uncheckedIcon": {
                                "color": {
                                  "disabled": "#dddddd",
                                  "enabled": "#dddddd"
                                },
                                "path": "material/fiber_manual_record",
                                "style": {
                                  "fontSize": "16px"
                                }
                              }
                            },
                            "type": "ia.input.checkbox"
                          }
                        ],
                        "meta": {
                          "name": "FlexContainer"
                        },
                        "position": {
                          "basis": "100px",
                          "display": false,
                          "grow": 1
                        },
                        "props": {
                          "direction": "column",
                          "justify": "center"
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Calendar"
                    },
                    "position": {
                      "basis": "421px",
                      "shrink": 0
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "meta": {
                      "name": "Filler1"
                    },
                    "position": {
                      "basis": "20px"
                    },
                    "type": "ia.container.flex"
                  }
                ],
                "meta": {
                  "name": "Calendar"
                },
                "position": {
                  "basis": "240px"
                },
                "props": {
                  "style": {
                    "classes": "ActivityCards/Card",
                    "overflow": "hidden",
                    "paddingLeft": 13,
                    "paddingRight": 13
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tproject \u003d \"HMS\"\n\tpath \u003d \"WinterShelterGlobal/Settings/UpdateSettingValue\"\n\tDate_list \u003d self.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.daysHostingDates #self.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.daysHosting\n\tGetMostNeededDatesDB \u003d system.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Settings/GetMostNeeded_And_HolidaysDates\",parameters\u003d{\"settingName\": \u0027holidays_needed_dates\u0027})\n\tSettingValueOld \u003d \u0027\u0027\n\tstartYear \u003d self.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.startYear\n\tdateStartingLimit \u003d system.date.getDate(startYear, 5, 1)\n\tdateEndingLimit \u003d system.date.getDate(startYear+1, 4, 1)\n\tfor i in range(0,GetMostNeededDatesDB.getRowCount()):\n\t\toneDate \u003d GetMostNeededDatesDB.getValueAt(i,0)\n\t\tif oneDate !\u003d None and oneDate !\u003d \u0027\u0027:\n\t\t\tif not system.date.isBetween(system.date.parse(oneDate,\u0027dd-MM-yyyy\u0027), dateStartingLimit, dateEndingLimit):\n\t\t\t\tSettingValueOld \u003d SettingValueOld + oneDate + \u0027,\u0027\n#\tsystem.perspective.print(SettingValueOld)\n#\tSettingValue \u003d str(Date_list)[1:-1]\n\tSettingValue \u003d \u0027\u0027\n\tfor dates in Date_list:\n\t\tformatedDate \u003d  system.date.format(dates,\u0027dd-MM-yyyy\u0027)\n\t\tSettingValue \u003d SettingValue + str(formatedDate) + \u0027,\u0027\n\tSettingValue \u003d SettingValue[:-1]\n\t#\tsystem.perspective.print(SettingValue)\n\t# concat old and new setting value\n\tSettingValue \u003d SettingValueOld + SettingValue\n\tparameters \u003d {\"settingName\": \u0027holidays_needed_dates\u0027,\"settingValue\":SettingValue}\n\tUpdateSettingValue \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\t\n\tself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").refreshBinding(\"props.params.holidaysDays\")\n\tsystem.perspective.print(\"Updated successfully!\")"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "SAVE"
                    },
                    "position": {
                      "basis": "100px"
                    },
                    "props": {
                      "style": {
                        "classes": "Buttons/Main",
                        "margin": 2
                      },
                      "text": "SAVE"
                    },
                    "type": "ia.input.button"
                  },
                  {
                    "meta": {
                      "name": "Filler"
                    },
                    "position": {
                      "basis": "200px"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "events": {
                      "component": {
                        "onActionPerformed": {
                          "config": {
                            "script": "\tself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").refreshBinding(\"props.params.holidaysDays\")\n\tself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.daysHosting\u003dself.parent.parent.getChild(\"Calendar\").getChild(\"Calendar\").getChild(\"Table\").props.params.holidaysDays"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Clear"
                    },
                    "position": {
                      "basis": "100px"
                    },
                    "props": {
                      "style": {
                        "classes": "Buttons/Delete",
                        "margin": 2
                      },
                      "text": "CANCEL"
                    },
                    "type": "ia.input.button"
                  }
                ],
                "meta": {
                  "name": "Buttons"
                },
                "position": {
                  "basis": "40px"
                },
                "props": {
                  "style": {
                    "classes": "ActivityCards/Card",
                    "overflow": "hidden",
                    "paddingLeft": 13,
                    "paddingRight": 13
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Right"
            },
            "position": {
              "basis": "60%"
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Calender_FlexRepeater"
        },
        "position": {
          "basis": "379px"
        },
        "props": {
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Filler1"
            },
            "position": {
              "basis": "20px"
            },
            "props": {
              "style": {
                "backgroundColor": "#EFEFEE",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "ImportTasksLabel"
                        },
                        "position": {
                          "basis": "228px"
                        },
                        "props": {
                          "params": {
                            "text": "Import WS Tasks"
                          },
                          "path": "WinterShelter/Templates/Label_Bold"
                        },
                        "type": "ia.display.view"
                      }
                    ],
                    "meta": {
                      "name": "ImportTasks_Filler"
                    },
                    "position": {
                      "basis": "30px"
                    },
                    "props": {
                      "style": {
                        "classes": "ActivityCards/Card",
                        "overflow": "hidden"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "events": {
                      "component": {
                        "onFileReceived": {
                          "config": {
                            "script": "\tdef extended_headers(headers,maxCols):\n\t\t\u0027\u0027\u0027 add null values if header not match with dataset max columns \u0027\u0027\u0027\n\t\theaders_output \u003d headers\n\t\th \u003d 1\n\t\twhile len(headers_output) \u003c maxCols:\n\t\t\theaders_output.append(\u0027Placeholder{}\u0027.format(h))\n\t\t\th +\u003d 1\n\t\treturn headers_output\n\t\n\tdef extend_row(row,maxCols):\n\t\t\u0027\u0027\u0027 add null values in row if curret row length not match with dataset max columns \u0027\u0027\u0027\n\t\trow_output \u003d row\n\t\twhile len(row_output) \u003c maxCols:\n\t\t\trow_output.append(None)\n\t\treturn row_output\n\t\n\tdef get_dataset(data,headers,maxRows,maxCols):\n\t\t\u0027\u0027\u0027 get dataset from csv file \u0027\u0027\u0027\n\t\theaders \u003d extended_headers(headers,maxCols)\n\t\tdata \u003d [extend_row(row,maxCols) for row in data]\n\t\treturn system.dataset.toDataSet(headers, data)\t\n\t\t\t\n\n\tfileIn \u003d event.file #get uploaded file\n\tfileString \u003d fileIn.getString() #read file as string\n\trows \u003d [row.split(\u0027,\u0027) for row in fileString.split(\u0027\\r\u0027)] #get comma separated rows/cols\n\tmaxCols \u003d max([len(row) for row in rows]) #get max columns\n\tmaxRows \u003d len(rows)\n\theaders \u003d rows[0]\n\tdata \u003d rows[1:]\n\tsystem.perspective.print(headers)\n\tdataset \u003d get_dataset(data,headers,maxRows,maxCols)\n\t\n\tcongregationNotFound \u003d \"\"\n\tstaffNotFound \u003d \"\"\n\tduplicateTasks \u003d 0\n\tif dataset.getRowCount()\u003e0:\n\t\ttxId \u003d system.db.beginTransaction(timeout\u003d50000)\n\t\tIsValid \u003d True\n\t\tif 1\u003d\u003d1: #try:\n\t\t\tfor i in range(0,dataset.getRowCount()): \n\t\t\t\tif dataset.getValueAt(i,\u0027Congregation Name\u0027)!\u003dNone and dataset.getValueAt(i,\u0027Congregation Name\u0027).strip()!\u003d\u0027\u0027: ##Avoid null rows\n\t\t\t\t\tcongregationName \u003d dataset.getValueAt(i,\u0027Congregation Name\u0027).strip() if dataset.getValueAt(i,\u0027Congregation Name\u0027)!\u003dNone else dataset.getValueAt(i,\u0027Congregation Name\u0027)\n\t\t\t\t\tsubject \u003d dataset.getValueAt(i,\u0027Subject\u0027).strip() if dataset.getValueAt(i,\u0027Subject\u0027)!\u003dNone else dataset.getValueAt(i,\u0027Subject\u0027)\n\t\t\t\t\tdueDateStr \u003d dataset.getValueAt(i,\u0027Due Date\u0027)\n\t\t\t\t\tdueDateParse \u003d system.date.parse(dueDateStr,\u0027dd/MM/yyyy\u0027)\n\t\t\t\t\tdueDateFormated \u003d system.date.format(dueDateParse,\u0027yyyy-MM-dd hh:mm:ss\u0027)\n\t\t\t\t\tnotes \u003d dataset.getValueAt(i,\u0027Notes\u0027).strip() if dataset.getValueAt(i,\u0027Notes\u0027)!\u003dNone else dataset.getValueAt(i,\u0027Notes\u0027)\n\t\t\t\t\tstaff \u003d dataset.getValueAt(i,\u0027Assigned To\u0027).strip() if dataset.getValueAt(i,\u0027Assigned To\u0027)!\u003dNone else dataset.getValueAt(i,\u0027Assigned To\u0027)\n\t\t\t\t\tgetLocationId_Q \u003d system.db.runNamedQuery(\"WinterShelter/Tasks/getCongregationIdFromName\",{\u0027locationName\u0027:congregationName})\n\t\t\t\t\tif getLocationId_Q.getRowCount()\u003e0:\n\t\t\t\t\t\tlocationId \u003d getLocationId_Q.getValueAt(0,0)\n\t\t\t\t\t\tgetStaffId_Q \u003d system.db.runNamedQuery(\"WinterShelter/Tasks/GetStaffIdFromName\",{\u0027staff\u0027:staff})\n\t\t\t\t\t\tif getStaffId_Q.getRowCount()\u003e0:\n\t\t\t\t\t\t\tstaffId \u003d getStaffId_Q.getValueAt(0,0)\n\t\t\t\t\t\t\t## if both congregationId and staffId found then insert record\n\t\t\t\t\t\t\t## if similar task not in database then  only ibsert task\n\t\t\t\t\t\t\tcheckTaskExist_Q \u003d system.db.runNamedQuery(\"WinterShelter/Tasks/CheckIfTaskExist\", {\u0027locationId\u0027:locationId,\u0027subject\u0027:subject,\u0027dueDate\u0027:dueDateFormated,\u0027staffId\u0027:staffId})\n\t\t\t\t\t\t\tif checkTaskExist_Q.getRowCount()\u003e0:\n\t\t\t\t\t\t\t\tduplicateTasks \u003d duplicateTasks + 1\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\t## insert task in shelter task table\n\t\t\t\t\t\t\t\tinsertQ \u003d \"INSERT INTO shelter.Tasks (locationId, taskTypeId, title, dueDate, staffId, priority, statusId, notes, contact, timeCreated, assignerId, participantId) VALUES (?,?,?,?,?,?,?,?,?, CURRENT_TIMESTAMP, ?,?)\"\n\t\t\t\t\t\t\t\tnewTaskId \u003d system.db.runPrepUpdate(insertQ, [locationId, None, subject, dueDateFormated, staffId, None, 1, notes, None, None, None], getKey \u003d 1, tx \u003d txId)\n\t\t\t\t\t\t\t\tactivityType \u003d \"task_added\"\n\t\t\t\t\t\t\t\tnoteIdForLog \u003d newTaskId\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t## also log to the Activity Log\n\t\t\t\t\t\t\t\tinsertLogQ \u003d \"INSERT INTO shelter.ActivityLog (locationId, activityType, activityDescription, timeCreated, referenceId) VALUES (?,?,?,CURRENT_TIMESTAMP, ?)\"\n\t\t\t\t\t\t\t\tsystem.db.runPrepUpdate(insertLogQ, [locationId, activityType, subject, noteIdForLog], tx \u003d txId)\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tstaffNotFound \u003d staffNotFound + staff\n\t\t\t\t\telse:\n\t\t\t\t\t\tcongregationNotFound \u003d congregationNotFound + congregationName\n\t\telse: #except:\n\t\t\tIsValid \u003d False\t\t\n\t\t\t\n\t\t## if No error then commit changes else show error message\n\t\tif IsValid:\n\t\t\t## all staff and congregation found in discovery then commit changes\n\t\t\tif staffNotFound \u003d\u003d \"\" and congregationNotFound \u003d\u003d \"\":\n\t\t\t\tsystem.perspective.print(\u0027CommitTransaction\u0027)\n\t\t\t\tsystem.db.commitTransaction(txId)\n\t\t\t\terrorMessage \u003d \"Task(s) imported successfully.\"\n\t\t\t\tif duplicateTasks \u003e 0:\n\t\t\t\t\tif duplicateTasks\u003e1 :\n\t\t\t\t\t\terrorMessage \u003d errorMessage + \" \" + str(duplicateTasks) + \" duplicate tasks were skipped.\"\n\t\t\t\t\telse:\n\t\t\t\t\t\terrorMessage \u003d errorMessage + \" \" + str(duplicateTasks) + \" duplicate task were skipped.\"\n\t\t\t\tself.parent.parent.getChild(\"Right\").getChild(\"message\").showMessage(errorMessage)\n\t\t\telse:\n\t\t\t\terrorMessage \u003d \"\"\n\t\t\t\tif congregationNotFound !\u003d \"\":\n\t\t\t\t\terrorMessage \u003d errorMessage + \"Congregation(s) [\" + congregationNotFound + \"] not found in discovery. Please validate congregation names in csv file.\"\n\t\t\t\tif staffNotFound !\u003d \"\":\n\t\t\t\t\tif errorMessage!\u003d\"\": #if error message for congregation then add new line for staff error message\n\t\t\t\t\t\terrorMessage \u003d errorMessage + \"\\n\"\n\t\t\t\t\terrorMessage \u003d errorMessage + \"Staff [\" + staffNotFound + \"] not found in discovery. Please validate staff names in csv file.\"\n\t\t\t\terrorMessage \u003d errorMessage.strip()\n\t\t\t\tsystem.db.rollbackTransaction(txId)\n\t\t\t\tsystem.perspective.print(\u0027rollbackTransaction\u0027)\n\t\t\t\tself.parent.parent.getChild(\"Right\").getChild(\"message\").showMessage(errorMessage)\n\t\telse:\n\t\t\terrorMessage \u003d \"Something went wrong while saving data. Please try again.\"\n\t\t\tself.parent.parent.getChild(\"Right\").getChild(\"message\").showMessage(errorMessage)\n\t\tsystem.db.closeTransaction(txId)\n\telse:\n\t\terrorMessage \u003d \"data Not Found\" \n\t\tself.parent.parent.getChild(\"Right\").getChild(\"message\").showMessage(errorMessage)\n\t\t\t\n\t\t\t"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "FileUpload"
                    },
                    "position": {
                      "basis": "100px",
                      "grow": 1
                    },
                    "props": {
                      "style": {
                        "classes": "",
                        "marginBottom": "10px",
                        "marginLeft": "40px",
                        "marginRight": "40px",
                        "marginTop": "0px"
                      },
                      "supportedFileTypes": [
                        "csv"
                      ]
                    },
                    "type": "ia.input.fileupload"
                  }
                ],
                "meta": {
                  "name": "Left"
                },
                "position": {
                  "basis": "40%"
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "message"
                    },
                    "position": {
                      "basis": "50px"
                    },
                    "props": {
                      "style": {
                        "classes": "Text/Error_Message"
                      }
                    },
                    "scripts": {
                      "customMethods": [
                        {
                          "name": "showMessage",
                          "params": [
                            "message"
                          ],
                          "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False"
                        }
                      ],
                      "extensionFunctions": null,
                      "messageHandlers": []
                    },
                    "type": "ia.display.label"
                  }
                ],
                "meta": {
                  "name": "Right"
                },
                "position": {
                  "basis": "70%"
                },
                "props": {
                  "direction": "column",
                  "justify": "flex-end"
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Filler2"
            },
            "position": {
              "basis": "180px"
            },
            "props": {
              "style": {
                "backgroundColor": "#FFFFFF",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "Filler3"
            },
            "position": {
              "basis": "20px",
              "display": false
            },
            "props": {
              "style": {
                "backgroundColor": "#EFEFEE",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "BulkTaskImport"
        },
        "position": {
          "basis": "200px"
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom.settingsData": {
        "binding": {
          "config": {
            "queryPath": "WinterShelterGlobal/Settings/GetAllSettings"
          },
          "type": "query"
        }
      }
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "ActivityCards/Card"
      }
    },
    "type": "ia.container.flex"
  }
}