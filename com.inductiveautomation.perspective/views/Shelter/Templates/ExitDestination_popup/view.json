{
  "custom": {
    "SelectedProviderType": "(-1)",
    "selectedCheckoutDate": {
      "$": [
        "ts",
        201,
        1732608150553
      ],
      "$ts": 1592902180067
    }
  },
  "params": {
    "Bed_ID": "value"
  },
  "propConfig": {
    "custom.SelectedProviderType": {
      "binding": {
        "config": {
          "path": "/root/Exit_Destination/Dropdown.props.value"
        },
        "transforms": [
          {
            "code": "\tExitDestination \u003d value\n\tif ExitDestination \u003d\u003d 0: #\u0027Place not meant for habitation\u0027:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 1: #\u0027Emergency Shelter, incl. hotel/motel subsidized by other agency/program\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 2: #\u0027Safe Haven\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 3: #\u0027Foster Care Home or Group Home (HUD)\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 4: #\u0027Hospital or other residential non-psychiatric medical facility\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0,2)\u0027 #Community Partner,Medical Facility\n\telif ExitDestination \u003d\u003d 5: #\u0027Jail, prison or other detention facility\u0027:\n\t\tproviderTypeIdList \u003d \u0027(-1)\u0027 #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 6: #\u0027Psychiatric Hospital or other psychiatric facility\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0,2)\u0027 #Community Partner,Medical Facility\n\telif ExitDestination \u003d\u003d 7: #\u0027Substance Abuse Treatment Facility or Detox Center/Facility\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0,2)\u0027 #Community Partner,Medical Facility\n\telif ExitDestination \u003d\u003d 8: #\u0027Long-term care facility or nursing home (i.e. SNF/ALF)\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0,2)\u0027 #Community Partner,Medical Facility\n\telif ExitDestination \u003d\u003d 9: #\u0027Residential project or halfway house\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 10: #\u0027Hotel or motel paid for without emergency shelter voucher\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 11: #\u0027Transitional Housing  (Grant Funded Programs i.e. VA GPD)\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0,7)\u0027 #Community Partner,Staff(RITI)\n\telif ExitDestination \u003d\u003d 13: #\u0027Staying or living with friends/family\u0027:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 20: #\u0027Rental by Client with HUD VASH housing subsidy (VA)\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 22: #\u0027Rental by Client with other housing subsidy\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 24: #\u0027Rental by Client in a public housing unit\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 25: #\u0027Rental by Client, no ongoing housing subsidy\u0027:\n\t\tproviderTypeIdList \u003d \u0027(0)\u0027 #Community Partner\n\telif ExitDestination \u003d\u003d 27: #\u0027Owned by client\u0027:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 29: #\u0027No Exit Interview Completed (Data not collected)\u0027:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 31: #\u0027Deceased\u0027:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 32: #\"Client Doesn\u0027t Know\":\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 33: #\u0027Client Refused \u0027:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telif ExitDestination \u003d\u003d 35: #\u0027Move Dorm/Bed\u0027:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\telse:\n\t\tproviderTypeIdList \u003d \"(-1)\" #\u0027NA\u0027\n\treturn providerTypeIdList",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.selectedCheckoutDate": {
      "binding": {
        "config": {
          "expression": "now(0)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "params.Bed_ID": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 397,
      "width": 650
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "60px"
        },
        "props": {
          "style": {
            "background": "linear-gradient(90deg, rgba(22,165,189,1) 0%, rgba(13,185,165,1) 100%)",
            "classes": "Text/Add_Header"
          },
          "text": "Exit Destination",
          "textStyle": {
            "fontSize": 20
          }
        },
        "type": "ia.display.label"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Placeholder"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
              "style": {
                "classes": "Background/Alternative"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Placeholder_0"
            },
            "position": {
              "basis": "700px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
              "style": {
                "borderBottomColor": "#AAAAAA",
                "borderBottomStyle": "solid",
                "borderBottomWidth": "1px",
                "classes": "Background/Alternative"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Placeholder_1"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
              "style": {
                "classes": "Background/Alternative"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Filler1"
        },
        "position": {
          "basis": "12px"
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Placeholder"
        },
        "position": {
          "basis": "1px",
          "grow": 1
        },
        "props": {
          "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
          "style": {
            "classes": "Background/Alternative"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Placeholder1"
            },
            "position": {
              "basis": "10px"
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "emvDestination"
            },
            "position": {
              "basis": "600px",
              "display": false
            },
            "propConfig": {
              "props.params.actionPerformedPulse": {
                "onChange": {
                  "enabled": null,
                  "script": "\troot \u003d self.parent\n\troot.sendMsgCondition()\n"
                }
              },
              "props.params.options": {
                "binding": {
                  "config": {
                    "queryPath": "Shelter/CurrentResidents/CurrentResidents_Destination"
                  },
                  "type": "query"
                }
              }
            },
            "props": {
              "params": {
                "actionPerformedPulse": false,
                "clear": false,
                "multiSelect": false,
                "placeholder": "Destination",
                "selection": null
              },
              "path": "Providers/Dashboard/Components/Filters/Conditional_DropDown",
              "style": {
                "classes": "Filter/Filter_Text_TeelBlue Filter/Filter_Container"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Dropdown"
            },
            "position": {
              "basis": "100%"
            },
            "propConfig": {
              "props.options": {
                "binding": {
                  "config": {
                    "queryPath": "Shelter/CurrentResidents/CurrentResidents_Destination"
                  },
                  "type": "query"
                }
              },
              "props.style.classes": {
                "binding": {
                  "config": {
                    "path": "this.props.value"
                  },
                  "transforms": [
                    {
                      "code": "\ttext \u003d \"Dropdowns/DD_Default\" #\"Filter/Filter_Text_Default\"\n\tif value !\u003d None:\n\t\tif value !\u003d \"\" and value \u003e -1:\n\t\t\ttext \u003d \"Dropdowns/DD_TeelBlue\" #\"Filter/Filter_Text_TeelBlue\"\n\treturn text",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "dropdownOptionStyle": {
                "classes": "Dropdowns/DD_Options"
              },
              "placeholder": {
                "color": "#0c4e8b",
                "text": "Select Destination"
              },
              "showClearIcon": true,
              "style": {},
              "value": null,
              "wrapMultiSelectValues": false
            },
            "type": "ia.input.dropdown"
          },
          {
            "meta": {
              "name": "Placeholder2"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Exit_Destination"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "marginTop": 10
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Placeholder1"
        },
        "position": {
          "basis": "5px",
          "grow": 1
        },
        "props": {
          "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
          "style": {
            "classes": "Background/Alternative"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Placeholder1"
            },
            "position": {
              "basis": "10px"
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Input_Date"
            },
            "position": {
              "basis": "320px"
            },
            "propConfig": {
              "props.params.date": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.selectedCheckoutDate"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "text": "Checkout Date"
              },
              "path": "Participants/Templates/Input_Date_LeftLabel"
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Placeholder2"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "CheckoutDateSelection"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "marginTop": 10
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Placeholder1"
            },
            "position": {
              "basis": "10px"
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Dropdown"
            },
            "position": {
              "basis": "320px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.custom.SelectedProviderType"
                  },
                  "transforms": [
                    {
                      "code": "\tSelectedProviderType \u003d value\n\tif SelectedProviderType \u003d\u003d \u0027(-1)\u0027:\n\t\tdisplay \u003d False\n\telse:\n\t\tdisplay \u003d True\n\treturn display",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.options": {
                "binding": {
                  "config": {
                    "parameters": {
                      "providerTypeIdList": "{view.custom.SelectedProviderType}"
                    },
                    "queryPath": "Shelter/ExitDestination/ProviderListSelect_ByProviderType"
                  },
                  "type": "query"
                }
              },
              "props.style.classes": {
                "binding": {
                  "config": {
                    "path": "this.props.value"
                  },
                  "transforms": [
                    {
                      "code": "\ttext \u003d \"Dropdowns/DD_Default\" #\"Filter/Filter_Text_Default\"\n\tif value !\u003d None:\n\t\tif value !\u003d \"\" and value \u003e -1:\n\t\t\ttext \u003d \"Dropdowns/DD_TeelBlue\" #\"Filter/Filter_Text_TeelBlue\"\n\treturn text",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "dropdownOptionStyle": {
                "classes": "Dropdowns/DD_Options"
              },
              "placeholder": {
                "color": "#0c4e8b",
                "text": "Select Provider"
              },
              "showClearIcon": true,
              "style": {},
              "value": null,
              "wrapMultiSelectValues": false
            },
            "type": "ia.input.dropdown"
          },
          {
            "meta": {
              "name": "Placeholder2"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Provider"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "marginTop": 10
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Placeholder"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
              "style": {
                "classes": "Background/Alternative"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Placeholder_0"
            },
            "position": {
              "basis": "700px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
              "style": {
                "borderBottomColor": "#AAAAAA",
                "borderBottomStyle": "solid",
                "borderBottomWidth": "1px",
                "classes": "Background/Alternative"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Placeholder_1"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder",
              "style": {
                "classes": "Background/Alternative"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Filler2"
        },
        "position": {
          "basis": "150px"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Placeholder_0"
            },
            "position": {
              "basis": "150px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport time\n#\tdestinationId \u003d self.parent.parent.getChild(\"Exit_Destination\").getChild(\"emvDestination\").props.params.selection\n\tdestinationId \u003d self.parent.parent.getChild(\"Exit_Destination\").getChild(\"Dropdown\").props.value\n\tproviderId \u003d self.parent.parent.getChild(\"Provider\").getChild(\"Dropdown\").props.value\n\t# If destination not selected then show error message\n\tif destinationId \u003d\u003d None or (providerId \u003d\u003d None and self.parent.parent.getChild(\"Provider\").getChild(\"Dropdown\").position.display \u003d\u003d True):\n\t\tif destinationId \u003d\u003d None:\n\t\t\tmessage \u003d \u0027Please Select Exit Destination\u0027\n\t\telif providerId \u003d\u003d None:\n\t\t\tmessage \u003d \u0027Please Select Provider\u0027\n\t\tself.parent.parent.getChild(\"Error_Msg\").getChild(\"Label\").position.display \u003d True\n\t\tself.parent.parent.getChild(\"Error_Msg\").getChild(\"Label\").props.text \u003d message\n\t\ttime.sleep(1)\n\t\tself.parent.parent.getChild(\"Error_Msg\").getChild(\"Label\").props.text \u003d \u0027\u0027\n\t\tself.parent.parent.getChild(\"Error_Msg\").getChild(\"Label\").position.display \u003d False\n\t# If destination selected then allow to check out\n\telse:\n\t\tself.parent.parent.getChild(\"Error_Msg\").getChild(\"Label\").position.display \u003d False\n\t\tproject \u003d \"HMS\"\n#\t\tsystem.perspective.print(\"Checking out : \" + str(destinationId))\n\t\tidForCheckout \u003d self.view.params.Bed_ID\n\t\t# Check if participant already check out\n\t\tresult \u003d system.dataset.toPyDataSet(system.db.runNamedQuery(project\u003d\"HMS\",path\u003d\"Shelter/Reservations/Check_AlreadyCheckOut\",parameters\u003d{\"id\":idForCheckout}))\n\t\tif len(result)\u003e\u003d1:\n\t\t\tpath \u003d \"Shelter/Reservations/UpdateCheckoutExitDestination\"\n\t\t\tparameters \u003d {\"id\":idForCheckout, \"exitDestinationId\":destinationId, \"exit_ProviderId\":providerId}\n\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\tError_msg \u003d \u0027Participant Check Out successfully\u0027\n\t\t\tclosePopup \u003d True\n\t\telse:\n\t\t\tselectQ \u003d \"SELECT * FROM lodging.bedLog where id \u003d ? and eventStart \u003c ?\"\n\t\t\tCompareCheckoutDate \u003d system.db.runPrepQuery(selectQ, [idForCheckout,self.view.custom.selectedCheckoutDate])\n\t\t\tif CompareCheckoutDate.getRowCount()\u003e0:\n\t\t\t\tpath \u003d \"Shelter/Reservations/CheckOut\"\n\t\t\t\tparameters \u003d {\"id\":idForCheckout, \"exitDestinationId\":destinationId, \"checkOutDate\":self.view.custom.selectedCheckoutDate, \"exit_ProviderId\":providerId}\n\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t## add audit log entry\n\t\t\t\t## get the participant and bedId for given bedLogId\n\t\t\t\tselectQ \u003d \"SELECT bedId, participantId, reservationId FROM lodging.bedLog WHERE id \u003d ?\"\n\t\t\t\tbedLogDetails \u003d system.db.runPrepQuery(selectQ, [idForCheckout])\n\t\t\t\treservationId \u003d -1\n\t\t\t\tparticipantId \u003d -1\n\t\t\t\tbedId \u003d -1\n\t\t\t\tif bedLogDetails is not None and bedLogDetails.getRowCount() \u003e 0:\n\t\t\t\t\tif bedLogDetails.getValueAt(0,\u0027bedId\u0027) is not None:\n\t\t\t\t\t\tbedId \u003d int(bedLogDetails.getValueAt(0,\u0027bedId\u0027))\n\t\t\t\t\tif bedLogDetails.getValueAt(0,\u0027reservationId\u0027) is not None:\n\t\t\t\t\t\treservationId \u003d int(bedLogDetails.getValueAt(0,\u0027reservationId\u0027))\n\t\t\t\t\tif bedLogDetails.getValueAt(0,\u0027participantId\u0027) is not None:\n\t\t\t\t\t\tparticipantId \u003d int(bedLogDetails.getValueAt(0,\u0027participantId\u0027))\n\t\t\t\t\t\n\t\t\t\tpath \u003d \"Shelter/AuditLog/AddAuditLogEntry\"\n\t\t\t\tparams \u003d {\"bedLogId\":idForCheckout,\"reservationId\":reservationId, \"bedId\":bedId, \"participantId\":participantId,\"action\":\u0027Check-out\u0027, \"employeeId\":self.session.custom.loggedInStaffEmployeeID, \"userName\" : self.session.props.auth.user.userName}\n\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparams)\n\t\t\t\t\n\t\t\t\t## Ticket 308 - Yogini Marathe - Call a named query to insert the audit log\n\t\t\t\tgetProgramIdQ \u003d \"\"\"\tSELECT r.ProgramId from lodging.bedLog b, lodging.Reservation r where b.reservationId \u003d r.id and b.id \u003d ? \n\t\t\t\t\t\t\t\t\tAND r.ProgramId NOT in \n\t\t\t\t\t\t\t\t\t(select id FROM interaction.Program \n\t\t\t\t\t\t\t\t\twhere programName in (\u0027Campus Store\u0027,\u0027Guest House\u0027,\u0027Hope University\u0027,\u0027Paticipant Mail Service\u0027))\n\t\t\t\t\t\t\t\t\"\"\"\n\t\t\t\tprogramData \u003d system.db.runPrepQuery(getProgramIdQ, [idForCheckout])\n\t\t\t\tif programData is not None and programData.getRowCount() \u003e 0: ## actually a program will be checked out\n\t\t\t\t\tprogramId \u003d programData.getValueAt(0,\u0027ProgramId\u0027)\n\t\t\t\t\tquery_insert_log \u003d \"Participants/Enrollments/AddEnrollmentLog\"\n\t\t\t\t\tquery_insert_log_params \u003d {\"participantId\": participantId, \"programId\": programId, \"action\":\"Exit on Checkout\", \"userName\":self.session.props.auth.user.userName}\n\t\t\t\t\tsystem.db.runNamedQuery(query_insert_log, query_insert_log_params)\n\t\t\t\t\n\t\t\t\t## End Ticket 308\n\t\t\t\t\n\t\t\t\tError_msg \u003d \u0027Participant Check Out successfully\u0027\n\t\t\t\tclosePopup \u003d True\n\t\t\telse:\n\t\t\t\tError_msg \u003d \u0027Checkout date can not be prior to check-in date\u0027\n\t\t\t\tclosePopup \u003d False\n\t\t\t\t\n\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshReservations\", payload\u003d{}, scope\u003d\"session\")\n\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshCurrentResidents\", payload\u003d{}, scope\u003d\"session\")\n\t\tself.parent.parent.getChild(\"Error_Msg\").getChild(\"Label\").position.display \u003d True\n\t\tself.parent.parent.getChild(\"Error_Msg\").getChild(\"Label\").props.text \u003d Error_msg\n\t\ttime.sleep(1)\n\t\tif closePopup !\u003d False:\n\t\t\tsystem.perspective.closePopup(\"ExitDestination_Popup\")"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "OK"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "0px",
                "marginLeft": "0px",
                "marginTop": "0px"
              },
              "text": "OK"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Placeholder"
            },
            "position": {
              "basis": "1px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "draggable": true,
                    "id": "ExitDestination_Popup",
                    "modal": false,
                    "overlayDismiss": false,
                    "resizable": true,
                    "showCloseIcon": true,
                    "type": "close",
                    "viewPath": "Shelter/Templates/ExitDestination_popup",
                    "viewportBound": false
                  },
                  "scope": "C",
                  "type": "popup"
                }
              }
            },
            "meta": {
              "name": "Cancel"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "0px",
                "marginLeft": "0px",
                "marginTop": "0px"
              },
              "text": "CANCEL"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Placeholder_1"
            },
            "position": {
              "basis": "180px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Root Actions"
        },
        "position": {
          "basis": "40px"
        },
        "props": {
          "style": {
            "marginTop": 10
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Placeholder_0"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "400px",
              "display": false
            },
            "props": {
              "style": {
                "classes": "Background/Alternative"
              },
              "text": "Checkout date can not be prior to check-in date",
              "textStyle": {
                "classes": "Text/Error_Message",
                "fontSize": 18,
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Placeholder"
            },
            "position": {
              "basis": "10px",
              "grow": 1
            },
            "props": {
              "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Error_Msg"
        },
        "position": {
          "basis": "40px"
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Alternative"
      }
    },
    "type": "ia.container.flex"
  }
}